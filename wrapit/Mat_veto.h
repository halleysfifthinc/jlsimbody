// common.h
typename SimTK::NiceTypeName;
typename SimTK::Is64BitHelper;
typename SimTK::IsArithmeticType;
typename SimTK::IsVoidType;
typename SimTK::IsFloatingType;
typename SimTK::IsIntegralType;
typename SimTK::XorOpType;
typename SimTK::OrOpType;
typename SimTK::AndOpType;
typename SimTK::TrueType;
typename SimTK::FalseType;
typename SimTK::TrustMe;
typename SimTK::DontCopy;
typename SimTK::CNT;
typename SimTK::Segment;

// Mat.h
int SimTK::Mat::size();
int SimTK::Mat::nrow();
int SimTK::Mat::ncol();

void SimTK::Mat::Mat<M, N, ELT, CS, RS>(const SymMat<M, ELT> &);
SimTK::Mat::ScalarNormSq SimTK::Mat::normSqr();
typename CNT<ScalarNormSq>::TSqrt SimTK::Mat::norm();
Mat<M, N, ELT, M, 1> SimTK::Mat::getNaN();
SimTK::Mat::TDropRow SimTK::Mat::dropRow(int);
SimTK::Mat::TDropCol SimTK::Mat::dropCol(int);
SimTK::Mat::TDropRowCol SimTK::Mat::dropRowCol(int, int);
bool SimTK::Mat::isNumericallySymmetric(double);
bool SimTK::Mat::isExactlySymmetric();
const SimTK::Mat::TNeg & SimTK::Mat::operator-();
SimTK::Mat::TNeg & SimTK::Mat::operator-();
const SimTK::Mat::THerm & SimTK::Mat::operator~();
SimTK::Mat::THerm & SimTK::Mat::operator~();
const SimTK::Mat::TNeg & SimTK::Mat::negate();
SimTK::Mat::TNeg & SimTK::Mat::updNegate();
const SimTK::Mat::THerm & SimTK::Mat::transpose();
SimTK::Mat::THerm & SimTK::Mat::updTranspose();
const SimTK::Mat::TReal & SimTK::Mat::real();
SimTK::Mat::TReal & SimTK::Mat::real();
const SimTK::Mat::TImag & SimTK::Mat::imag();
SimTK::Mat::TImag & SimTK::Mat::imag();
const SimTK::Mat::TWithoutNegator & SimTK::Mat::castAwayNegatorIfAny();
SimTK::Mat::TWithoutNegator & SimTK::Mat::updCastAwayNegatorIfAny();
SimTK::Mat::TSqrt SimTK::Mat::sqrt();
SimTK::Mat::TAbs SimTK::Mat::abs();
SimTK::Mat::TStandard SimTK::Mat::standardize();
SimTK::Mat::TNormalize SimTK::Mat::normalize();
SimTK::Mat::TInvert SimTK::Mat::invert();
void SimTK::Mat::Mat<M, N, ELT, CS, RS>(const typename WrappedType::ENeg &);
void SimTK::Mat<M, N, ELT, CS, RS>(const typename SimTK::Mat::ENeg &);
void SimTK::Mat::Mat<M, N, ELT, CS, RS>(const typename WrappedType::TRow &);
void SimTK::Mat::Mat<M, N, ELT, CS, RS>(const typename WrappedType::TRow &, const typename WrappedType::TRow &);
void SimTK::Mat::Mat<M, N, ELT, CS, RS>(const typename WrappedType::TRow &, const typename WrappedType::TRow &, const typename WrappedType::TRow &);
void SimTK::Mat::Mat<M, N, ELT, CS, RS>(const typename WrappedType::TRow &, const typename WrappedType::TRow &, const typename WrappedType::TRow &, const typename WrappedType::TRow &);
void SimTK::Mat::Mat<M, N, ELT, CS, RS>(const typename WrappedType::TRow &, const typename WrappedType::TRow &, const typename WrappedType::TRow &, const typename WrappedType::TRow &, const typename WrappedType::TRow &);
void SimTK::Mat::Mat<M, N, ELT, CS, RS>(const typename WrappedType::TRow &, const typename WrappedType::TRow &, const typename WrappedType::TRow &, const typename WrappedType::TRow &, const typename WrappedType::TRow &, const typename WrappedType::TRow &);
void SimTK::Mat::Mat<M, N, ELT, CS, RS>(const typename WrappedType::TCol &);
void SimTK::Mat::Mat<M, N, ELT, CS, RS>(const typename WrappedType::TCol &, const typename WrappedType::TCol &);
void SimTK::Mat::Mat<M, N, ELT, CS, RS>(const typename WrappedType::TCol &, const typename WrappedType::TCol &, const typename WrappedType::TCol &);
void SimTK::Mat::Mat<M, N, ELT, CS, RS>(const typename WrappedType::TCol &, const typename WrappedType::TCol &, const typename WrappedType::TCol &, const typename WrappedType::TCol &);
void SimTK::Mat::Mat<M, N, ELT, CS, RS>(const typename WrappedType::TCol &, const typename WrappedType::TCol &, const typename WrappedType::TCol &, const typename WrappedType::TCol &, const typename WrappedType::TCol &);
void SimTK::Mat::Mat<M, N, ELT, CS, RS>(const typename WrappedType::TCol &, const typename WrappedType::TCol &, const typename WrappedType::TCol &, const typename WrappedType::TCol &, const typename WrappedType::TCol &, const typename WrappedType::TCol &);
const SimTK::Mat::TPosTrans & SimTK::Mat::positionalTranspose();
SimTK::Mat::TPosTrans & SimTK::Mat::updPositionalTranspose();
const SimTK::Mat::TRow & SimTK::Mat::operator[](int);
SimTK::Mat::TRow & SimTK::Mat::operator[](int);
const SimTK::Mat::TCol & SimTK::Mat::operator()(int);
SimTK::Mat::TCol & SimTK::Mat::operator()(int);
const SimTK::Mat::TRow & SimTK::Mat::row(int);
SimTK::Mat::TRow & SimTK::Mat::row(int);
const SimTK::Mat::TCol & SimTK::Mat::col(int);
SimTK::Mat::TCol & SimTK::Mat::col(int);
SimTK::Mat::TRow SimTK::Mat::colSum();
SimTK::Mat::TRow SimTK::Mat::sum();
SimTK::Mat::TCol SimTK::Mat::rowSum();
const SimTK::Mat::TDiag & SimTK::Mat::diag();
SimTK::Mat::TDiag & SimTK::Mat::updDiag();
SimTK::Mat::TDiag & SimTK::Mat::diag();
double SimTK::Mat::getDefaultTolerance();