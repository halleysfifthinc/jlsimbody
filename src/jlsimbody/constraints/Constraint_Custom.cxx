// this file was auto-generated by wrapit v1.3.3
#include "jlsimbody/common.h"

#include "jlsimbody/Constraints.h"

namespace jlcxx {
  template<> struct IsMirroredType<SimTK::Constraint::Custom> : std::false_type { };
  template<> struct DefaultConstructible<SimTK::Constraint::Custom> : std::false_type { };
	template<> struct SuperType<SimTK::Constraint::Custom> { typedef SimTK::Constraint type; };
}

namespace jlsimbody {

// Class generating the wrapper for type SimTK::Constraint::Custom
struct JlSimTK_Constraint_Custom: public Wrapper {

  JlSimTK_Constraint_Custom(jlcxx::Module& module): Wrapper(module){
    DEBUG_MSG("type SimTK::Constraint::Custom (" __HERE__ ")");
    // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/simbody/internal/Constraint.h:1153:40
    auto t = module.add_type<SimTK::Constraint::Custom>(
      "CustomConstraint",
      jlcxx::julia_base_type<SimTK::Constraint>());
    CLEAR_DEBUG_MSG();

    type_ = std::unique_ptr<jlcxx::TypeWrapper<SimTK::Constraint::Custom>>(new jlcxx::TypeWrapper<SimTK::Constraint::Custom>(module, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>();

    DEBUG_MSG("const SimTK::Constraint & SimTK::Constraint::Custom::upcast() (" __HERE__ ")");
    // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/simbody/internal/Constraint.h:1171:5
    t.method("upcast", static_cast<const SimTK::Constraint & (SimTK::Constraint::Custom::*)()  const>(&SimTK::Constraint::Custom::upcast));
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("SimTK::Constraint & SimTK::Constraint::Custom::updUpcast() (" __HERE__ ")");
    // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/simbody/internal/Constraint.h:1171:5
    t.method("updUpcast", static_cast<SimTK::Constraint & (SimTK::Constraint::Custom::*)() >(&SimTK::Constraint::Custom::updUpcast));
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("bool SimTK::Constraint::Custom::isInstanceOf(const SimTK::Constraint &) (" __HERE__ ")");
    // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/simbody/internal/Constraint.h:1171:5
    module_.method("Constraint!Custom!isInstanceOf", static_cast<bool (*)(const SimTK::Constraint &) >(&SimTK::Constraint::Custom::isInstanceOf));
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("const SimTK::Constraint::Custom & SimTK::Constraint::Custom::downcast(const SimTK::Constraint &) (" __HERE__ ")");
    // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/simbody/internal/Constraint.h:1171:5
    module_.method("Constraint!Custom!downcast", static_cast<const SimTK::Constraint::Custom & (*)(const SimTK::Constraint &) >(&SimTK::Constraint::Custom::downcast));
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("SimTK::Constraint::Custom & SimTK::Constraint::Custom::updDowncast(SimTK::Constraint &) (" __HERE__ ")");
    // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/simbody/internal/Constraint.h:1171:5
    module_.method("Constraint!Custom!updDowncast", static_cast<SimTK::Constraint::Custom & (*)(SimTK::Constraint &) >(&SimTK::Constraint::Custom::updDowncast));
    CLEAR_DEBUG_MSG();
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<SimTK::Constraint::Custom>> type_;
};
std::shared_ptr<Wrapper> newJlSimTK_Constraint_Custom(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlSimTK_Constraint_Custom(module));
}

}
