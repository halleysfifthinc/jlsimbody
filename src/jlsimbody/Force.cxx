// this file was auto-generated by wrapit v0.1.0-61-g71d8603-dirty
#include <type_traits>
#include "jlcxx/jlcxx.hpp"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

#include "jlsimbody/Force.h"
#include "jlSimTKcommon/SimTK_UniqueIndex.h"

#ifdef VERBOSE_IMPORT
#  define DEBUG_MSG(a) std::cerr << a << "\n"
#else
#  define DEBUG_MSG(a)
#endif
#define __HERE__  __FILE__ ":" QUOTE2(__LINE__)
#define QUOTE(arg) #arg
#define QUOTE2(arg) QUOTE(arg)

namespace jlsimbody {

void define_simbody_Force(jlcxx::Module& types){

  DEBUG_MSG("Adding wrapper for type SimTK::ForceSubsystem (" __HERE__ ")");
  // defined in simbody/internal/ForceSubsystem.h:36:28
  auto t0 = types.add_type<SimTK::ForceSubsystem>("SimTK!ForceSubsystem");
  t0.template constructor<>();

  DEBUG_MSG("Adding wrapper for type SimTK::GeneralForceSubsystem (" __HERE__ ")");
  // defined in simbody/internal/GeneralForceSubsystem.h:47:28
  auto t1 = types.add_type<SimTK::GeneralForceSubsystem>("SimTK!GeneralForceSubsystem", jlcxx::julia_base_type<SimTK::ForceSubsystem>());
  t1.template constructor<>();

  wrap_SimTK_UniqueIndexType<SimTK::ForceIndex>(types, "SimTK!ForceIndex");

  DEBUG_MSG("Adding wrapper for type SimTK::Force (" __HERE__ ")");
  // defined in simbody/internal/Force.h:50:28
  auto t3 = types.add_type<SimTK::Force>("SimTK!Force");
  t3.template constructor<>();

  DEBUG_MSG("Adding wrapper for type SimTK::Force::TwoPointLinearSpring (" __HERE__ ")");
  // defined in simbody/internal/Force.h:221:35
  auto t6 = types.add_type<SimTK::Force::TwoPointLinearSpring>("SimTK!Force!TwoPointLinearSpring", jlcxx::julia_base_type<SimTK::Force>());
  t6.template constructor<>();

  DEBUG_MSG("Adding wrapper for type SimTK::Force::TwoPointLinearDamper (" __HERE__ ")");
  // defined in simbody/internal/Force.h:254:35
  auto t8 = types.add_type<SimTK::Force::TwoPointLinearDamper>("SimTK!Force!TwoPointLinearDamper", jlcxx::julia_base_type<SimTK::Force>());
  t8.template constructor<>();

  DEBUG_MSG("Adding wrapper for type SimTK::Force::TwoPointConstantForce (" __HERE__ ")");
  // defined in simbody/internal/Force.h:285:35
  auto t9 = types.add_type<SimTK::Force::TwoPointConstantForce>("SimTK!Force!TwoPointConstantForce", jlcxx::julia_base_type<SimTK::Force>());
  t9.template constructor<>();

  DEBUG_MSG("Adding wrapper for type SimTK::Force::ConstantForce (" __HERE__ ")");
  // defined in simbody/internal/Force.h:313:35
  auto t10 = types.add_type<SimTK::Force::ConstantForce>("SimTK!Force!ConstantForce", jlcxx::julia_base_type<SimTK::Force>());
  t10.template constructor<>();

  DEBUG_MSG("Adding wrapper for type SimTK::Force::ConstantTorque (" __HERE__ ")");
  // defined in simbody/internal/Force.h:330:35
  auto t11 = types.add_type<SimTK::Force::ConstantTorque>("SimTK!Force!ConstantTorque", jlcxx::julia_base_type<SimTK::Force>());
  t11.template constructor<>();

  DEBUG_MSG("Adding wrapper for type SimTK::Force::GlobalDamper (" __HERE__ ")");
  // defined in simbody/internal/Force.h:354:35
  auto t12 = types.add_type<SimTK::Force::GlobalDamper>("SimTK!Force!GlobalDamper", jlcxx::julia_base_type<SimTK::Force>());
  t12.template constructor<>();

  DEBUG_MSG("Adding wrapper for type SimTK::Force::UniformGravity (" __HERE__ ")");
  // defined in simbody/internal/Force.h:374:35
  auto t14 = types.add_type<SimTK::Force::UniformGravity>("SimTK!Force!UniformGravity", jlcxx::julia_base_type<SimTK::Force>());
  t14.template constructor<>();

  DEBUG_MSG("Adding wrapper for type SimTK::Force::DiscreteForces (" __HERE__ ")");
  // defined in simbody/internal/Force_DiscreteForces.h:41:35
  auto t18 = types.add_type<SimTK::Force::DiscreteForces>("SimTK!Force!DiscreteForces", jlcxx::julia_base_type<SimTK::Force>());
  t18.template constructor<>();

  DEBUG_MSG("Adding wrapper for type SimTK::Force::Gravity (" __HERE__ ")");
  // defined in simbody/internal/Force_Gravity.h:70:35
  auto t20 = types.add_type<SimTK::Force::Gravity>("SimTK!Force!Gravity", jlcxx::julia_base_type<SimTK::Force>());
  t20.template constructor<>();

  DEBUG_MSG("Adding wrapper for type SimTK::Force::LinearBushing (" __HERE__ ")");
  // defined in simbody/internal/Force_LinearBushing.h:101:35
  auto t22 = types.add_type<SimTK::Force::LinearBushing>("SimTK!Force!LinearBushing", jlcxx::julia_base_type<SimTK::Force>());
  t22.template constructor<>();

  DEBUG_MSG("Adding wrapper for type SimTK::Force::MobilityConstantForce (" __HERE__ ")");
  // defined in simbody/internal/Force_MobilityConstantForce.h:45:35
  auto t23 = types.add_type<SimTK::Force::MobilityConstantForce>("SimTK!Force!MobilityConstantForce", jlcxx::julia_base_type<SimTK::Force>());
  t23.template constructor<>();

  DEBUG_MSG("Adding wrapper for type SimTK::Force::MobilityDiscreteForce (" __HERE__ ")");
  // defined in simbody/internal/Force_MobilityDiscreteForce.h:52:35
  auto t24 = types.add_type<SimTK::Force::MobilityDiscreteForce>("SimTK!Force!MobilityDiscreteForce", jlcxx::julia_base_type<SimTK::Force>());
  t24.template constructor<>();

  DEBUG_MSG("Adding wrapper for type SimTK::Force::MobilityLinearDamper (" __HERE__ ")");
  // defined in simbody/internal/Force_MobilityLinearDamper.h:46:35
  auto t25 = types.add_type<SimTK::Force::MobilityLinearDamper>("SimTK!Force!MobilityLinearDamper", jlcxx::julia_base_type<SimTK::Force>());
  t25.template constructor<>();

  DEBUG_MSG("Adding wrapper for type SimTK::Force::MobilityLinearSpring (" __HERE__ ")");
  // defined in simbody/internal/Force_MobilityLinearSpring.h:49:35
  auto t26 = types.add_type<SimTK::Force::MobilityLinearSpring>("SimTK!Force!MobilityLinearSpring", jlcxx::julia_base_type<SimTK::Force>());
  t26.template constructor<>();

  DEBUG_MSG("Adding wrapper for type SimTK::Force::MobilityLinearStop (" __HERE__ ")");
  // defined in simbody/internal/Force_MobilityLinearStop.h:65:35
  auto t28 = types.add_type<SimTK::Force::MobilityLinearStop>("SimTK!Force!MobilityLinearStop", jlcxx::julia_base_type<SimTK::Force>());
  t28.template constructor<>();

  DEBUG_MSG("Adding wrapper for type SimTK::Force::Thermostat (" __HERE__ ")");
  // defined in simbody/internal/Force_Thermostat.h:131:35
  auto t29 = types.add_type<SimTK::Force::Thermostat>("SimTK!Force!Thermostat", jlcxx::julia_base_type<SimTK::Force>());
  t29.template constructor<>();

  DEBUG_MSG("Adding wrapper for type SimTK::HuntCrossleyForce (" __HERE__ ")");
  // defined in simbody/internal/HuntCrossleyForce.h:122:28
  auto t30 = types.add_type<SimTK::HuntCrossleyForce>("SimTK!HuntCrossleyForce", jlcxx::julia_base_type<SimTK::Force>());

  DEBUG_MSG("Adding wrapper for type SimTK::CableSpring (" __HERE__ ")");
  // defined in simbody/internal/CableSpring.h:90:28
  auto t33 = types.add_type<SimTK::CableSpring>("SimTK!CableSpring", jlcxx::julia_base_type<SimTK::Force>());
  t33.template constructor<>();

  DEBUG_MSG("Adding wrapper for type SimTK::ElasticFoundationForce (" __HERE__ ")");
  // defined in simbody/internal/ElasticFoundationForce.h:96:28
  auto t35 = types.add_type<SimTK::ElasticFoundationForce>("SimTK!ElasticFoundationForce", jlcxx::julia_base_type<SimTK::Force>());

  /**********************************************************************/
  /* Wrappers for the methods of class SimTK::GeneralForceSubsystem
   */

  DEBUG_MSG("Adding wrapper for SimTK::ForceIndex SimTK::GeneralForceSubsystem::adoptForce(SimTK::Force &) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::ForceIndex SimTK::GeneralForceSubsystem::adoptForce(SimTK::Force &)
  // defined in simbody/internal/GeneralForceSubsystem.h:64:16
  t1.method("adoptForce", static_cast<SimTK::ForceIndex (SimTK::GeneralForceSubsystem::*)(SimTK::Force &) >(&SimTK::GeneralForceSubsystem::adoptForce));

  DEBUG_MSG("Adding wrapper for int SimTK::GeneralForceSubsystem::getNumForces() (" __HERE__ ")");
  // signature to use in the veto list: int SimTK::GeneralForceSubsystem::getNumForces()
  // defined in simbody/internal/GeneralForceSubsystem.h:68:9
  t1.method("getNumForces", static_cast<int (SimTK::GeneralForceSubsystem::*)()  const>(&SimTK::GeneralForceSubsystem::getNumForces));

  DEBUG_MSG("Adding wrapper for const SimTK::Force & SimTK::GeneralForceSubsystem::getForce(SimTK::ForceIndex) (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::Force & SimTK::GeneralForceSubsystem::getForce(SimTK::ForceIndex)
  // defined in simbody/internal/GeneralForceSubsystem.h:71:18
  t1.method("getForce", static_cast<const SimTK::Force & (SimTK::GeneralForceSubsystem::*)(SimTK::ForceIndex)  const>(&SimTK::GeneralForceSubsystem::getForce));

  DEBUG_MSG("Adding wrapper for SimTK::Force & SimTK::GeneralForceSubsystem::updForce(SimTK::ForceIndex) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Force & SimTK::GeneralForceSubsystem::updForce(SimTK::ForceIndex)
  // defined in simbody/internal/GeneralForceSubsystem.h:74:12
  t1.method("updForce", static_cast<SimTK::Force & (SimTK::GeneralForceSubsystem::*)(SimTK::ForceIndex) >(&SimTK::GeneralForceSubsystem::updForce));

  DEBUG_MSG("Adding wrapper for bool SimTK::GeneralForceSubsystem::isForceDisabled(const SimTK::State &, SimTK::ForceIndex) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::GeneralForceSubsystem::isForceDisabled(const SimTK::State &, SimTK::ForceIndex)
  // defined in simbody/internal/GeneralForceSubsystem.h:78:10
  t1.method("isForceDisabled", static_cast<bool (SimTK::GeneralForceSubsystem::*)(const SimTK::State &, SimTK::ForceIndex)  const>(&SimTK::GeneralForceSubsystem::isForceDisabled));

  DEBUG_MSG("Adding wrapper for void SimTK::GeneralForceSubsystem::setForceIsDisabled(SimTK::State &, SimTK::ForceIndex, bool) (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::GeneralForceSubsystem::setForceIsDisabled(SimTK::State &, SimTK::ForceIndex, bool)
  // defined in simbody/internal/GeneralForceSubsystem.h:86:10
  t1.method("setForceIsDisabled", static_cast<void (SimTK::GeneralForceSubsystem::*)(SimTK::State &, SimTK::ForceIndex, bool)  const>(&SimTK::GeneralForceSubsystem::setForceIsDisabled));

  DEBUG_MSG("Adding wrapper for void SimTK::GeneralForceSubsystem::setNumberOfThreads(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::GeneralForceSubsystem::setNumberOfThreads(unsigned int)
  // defined in simbody/internal/GeneralForceSubsystem.h:96:10
  t1.method("setNumberOfThreads", static_cast<void (SimTK::GeneralForceSubsystem::*)(unsigned int) >(&SimTK::GeneralForceSubsystem::setNumberOfThreads));

  DEBUG_MSG("Adding wrapper for int SimTK::GeneralForceSubsystem::getNumberOfThreads() (" __HERE__ ")");
  // signature to use in the veto list: int SimTK::GeneralForceSubsystem::getNumberOfThreads()
  // defined in simbody/internal/GeneralForceSubsystem.h:104:9
  t1.method("getNumberOfThreads", static_cast<int (SimTK::GeneralForceSubsystem::*)()  const>(&SimTK::GeneralForceSubsystem::getNumberOfThreads));

  /* End of SimTK::GeneralForceSubsystem class method wrappers
   **********************************************************************/


  /**********************************************************************/
  /* Wrappers for the methods of class SimTK::Force
   */

  DEBUG_MSG("Adding wrapper for void SimTK::Force::disable(SimTK::State &) (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::Force::disable(SimTK::State &)
  // defined in simbody/internal/Force.h:62:10
  t3.method("disable", static_cast<void (SimTK::Force::*)(SimTK::State &)  const>(&SimTK::Force::disable));

  DEBUG_MSG("Adding wrapper for void SimTK::Force::enable(SimTK::State &) (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::Force::enable(SimTK::State &)
  // defined in simbody/internal/Force.h:66:10
  t3.method("enable", static_cast<void (SimTK::Force::*)(SimTK::State &)  const>(&SimTK::Force::enable));

  DEBUG_MSG("Adding wrapper for bool SimTK::Force::isDisabled(const SimTK::State &) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::Force::isDisabled(const SimTK::State &)
  // defined in simbody/internal/Force.h:70:10
  t3.method("isDisabled", static_cast<bool (SimTK::Force::*)(const SimTK::State &)  const>(&SimTK::Force::isDisabled));

  DEBUG_MSG("Adding wrapper for void SimTK::Force::setDisabledByDefault(bool) (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::Force::setDisabledByDefault(bool)
  // defined in simbody/internal/Force.h:76:10
  t3.method("setDisabledByDefault", static_cast<void (SimTK::Force::*)(bool) >(&SimTK::Force::setDisabledByDefault));

  DEBUG_MSG("Adding wrapper for bool SimTK::Force::isDisabledByDefault() (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::Force::isDisabledByDefault()
  // defined in simbody/internal/Force.h:80:10
  t3.method("isDisabledByDefault", static_cast<bool (SimTK::Force::*)()  const>(&SimTK::Force::isDisabledByDefault));

  DEBUG_MSG("Adding wrapper for void SimTK::Force::calcForceContribution(const SimTK::State &, SimTK::Vector_<SimTK::SpatialVec> &, SimTK::Vector_<SimTK::Vec3> &, SimTK::Vector &) (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::Force::calcForceContribution(const SimTK::State &, SimTK::Vector_<SimTK::SpatialVec> &, SimTK::Vector_<SimTK::Vec3> &, SimTK::Vector &)
  // defined in simbody/internal/Force.h:128:10
  t3.method("calcForceContribution", static_cast<void (SimTK::Force::*)(const SimTK::State &, SimTK::Vector_<SimTK::SpatialVec> &, SimTK::Vector_<SimTK::Vec3> &, SimTK::Vector &)  const>(&SimTK::Force::calcForceContribution));

  DEBUG_MSG("Adding wrapper for SimTK::Real SimTK::Force::calcPotentialEnergyContribution(const SimTK::State &) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Real SimTK::Force::calcPotentialEnergyContribution(const SimTK::State &)
  // defined in simbody/internal/Force.h:143:10
  t3.method("calcPotentialEnergyContribution", static_cast<SimTK::Real (SimTK::Force::*)(const SimTK::State &)  const>(&SimTK::Force::calcPotentialEnergyContribution));

  DEBUG_MSG("Adding wrapper for const SimTK::GeneralForceSubsystem & SimTK::Force::getForceSubsystem() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::GeneralForceSubsystem & SimTK::Force::getForceSubsystem()
  // defined in simbody/internal/Force.h:160:34
  t3.method("getForceSubsystem", static_cast<const SimTK::GeneralForceSubsystem & (SimTK::Force::*)()  const>(&SimTK::Force::getForceSubsystem));

  DEBUG_MSG("Adding wrapper for SimTK::ForceIndex SimTK::Force::getForceIndex() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::ForceIndex SimTK::Force::getForceIndex()
  // defined in simbody/internal/Force.h:164:16
  t3.method("getForceIndex", static_cast<SimTK::ForceIndex (SimTK::Force::*)()  const>(&SimTK::Force::getForceIndex));

  /* End of SimTK::Force class method wrappers
   **********************************************************************/


  /**********************************************************************/
  /* Wrappers for the methods of class SimTK::Force::TwoPointLinearSpring
   */


  DEBUG_MSG("Adding wrapper for void SimTK::Force::TwoPointLinearSpring::TwoPointLinearSpring(SimTK::GeneralForceSubsystem &, const SimTK::MobilizedBody &, const SimTK::Vec3 &, const SimTK::MobilizedBody &, const SimTK::Vec3 &, SimTK::Real, SimTK::Real) (" __HERE__ ")");
  // defined in simbody/internal/Force.h:234:5
  t6.constructor<SimTK::GeneralForceSubsystem &, const SimTK::MobilizedBody &, const SimTK::Vec3 &, const SimTK::MobilizedBody &, const SimTK::Vec3 &, SimTK::Real, SimTK::Real>();

  /* End of SimTK::Force::TwoPointLinearSpring class method wrappers
   **********************************************************************/


  /**********************************************************************/
  /* Wrappers for the methods of class SimTK::Force::TwoPointLinearDamper
   */


  DEBUG_MSG("Adding wrapper for void SimTK::Force::TwoPointLinearDamper::TwoPointLinearDamper(SimTK::GeneralForceSubsystem &, const SimTK::MobilizedBody &, const SimTK::Vec3 &, const SimTK::MobilizedBody &, const SimTK::Vec3 &, SimTK::Real) (" __HERE__ ")");
  // defined in simbody/internal/Force.h:266:5
  t8.constructor<SimTK::GeneralForceSubsystem &, const SimTK::MobilizedBody &, const SimTK::Vec3 &, const SimTK::MobilizedBody &, const SimTK::Vec3 &, SimTK::Real>();

  /* End of SimTK::Force::TwoPointLinearDamper class method wrappers
   **********************************************************************/


  /**********************************************************************/
  /* Wrappers for the methods of class SimTK::Force::TwoPointConstantForce
   */


  DEBUG_MSG("Adding wrapper for void SimTK::Force::TwoPointConstantForce::TwoPointConstantForce(SimTK::GeneralForceSubsystem &, const SimTK::MobilizedBody &, const SimTK::Vec3 &, const SimTK::MobilizedBody &, const SimTK::Vec3 &, SimTK::Real) (" __HERE__ ")");
  // defined in simbody/internal/Force.h:297:5
  t9.constructor<SimTK::GeneralForceSubsystem &, const SimTK::MobilizedBody &, const SimTK::Vec3 &, const SimTK::MobilizedBody &, const SimTK::Vec3 &, SimTK::Real>();

  /* End of SimTK::Force::TwoPointConstantForce class method wrappers
   **********************************************************************/


  /**********************************************************************/
  /* Wrappers for the methods of class SimTK::Force::ConstantForce
   */


  DEBUG_MSG("Adding wrapper for void SimTK::Force::ConstantForce::ConstantForce(SimTK::GeneralForceSubsystem &, const SimTK::MobilizedBody &, const SimTK::Vec3 &, const SimTK::Vec3 &) (" __HERE__ ")");
  // defined in simbody/internal/Force.h:315:5
  t10.constructor<SimTK::GeneralForceSubsystem &, const SimTK::MobilizedBody &, const SimTK::Vec3 &, const SimTK::Vec3 &>();

  /* End of SimTK::Force::ConstantForce class method wrappers
   **********************************************************************/


  /**********************************************************************/
  /* Wrappers for the methods of class SimTK::Force::ConstantTorque
   */


  DEBUG_MSG("Adding wrapper for void SimTK::Force::ConstantTorque::ConstantTorque(SimTK::GeneralForceSubsystem &, const SimTK::MobilizedBody &, const SimTK::Vec3 &) (" __HERE__ ")");
  // defined in simbody/internal/Force.h:332:5
  t11.constructor<SimTK::GeneralForceSubsystem &, const SimTK::MobilizedBody &, const SimTK::Vec3 &>();

  /* End of SimTK::Force::ConstantTorque class method wrappers
   **********************************************************************/


  /**********************************************************************/
  /* Wrappers for the methods of class SimTK::Force::GlobalDamper
   */


  DEBUG_MSG("Adding wrapper for void SimTK::Force::GlobalDamper::GlobalDamper(SimTK::GeneralForceSubsystem &, const SimTK::SimbodyMatterSubsystem &, SimTK::Real) (" __HERE__ ")");
  // defined in simbody/internal/Force.h:356:5
  t12.constructor<SimTK::GeneralForceSubsystem &, const SimTK::SimbodyMatterSubsystem &, SimTK::Real>();

  /* End of SimTK::Force::GlobalDamper class method wrappers
   **********************************************************************/


  /**********************************************************************/
  /* Wrappers for the methods of class SimTK::Force::UniformGravity
   */


  DEBUG_MSG("Adding wrapper for void SimTK::Force::UniformGravity::UniformGravity(SimTK::GeneralForceSubsystem &, const SimTK::SimbodyMatterSubsystem &, const SimTK::Vec3 &, SimTK::Real) (" __HERE__ ")");
  // defined in simbody/internal/Force.h:376:5
  t14.constructor<SimTK::GeneralForceSubsystem &, const SimTK::SimbodyMatterSubsystem &, const SimTK::Vec3 &>();
  t14.constructor<SimTK::GeneralForceSubsystem &, const SimTK::SimbodyMatterSubsystem &, const SimTK::Vec3 &, SimTK::Real>();

  DEBUG_MSG("Adding wrapper for SimTK::Vec3 SimTK::Force::UniformGravity::getGravity() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Vec3 SimTK::Force::UniformGravity::getGravity()
  // defined in simbody/internal/Force.h:383:10
  t14.method("getGravity", static_cast<SimTK::Vec3 (SimTK::Force::UniformGravity::*)()  const>(&SimTK::Force::UniformGravity::getGravity));

  DEBUG_MSG("Adding wrapper for void SimTK::Force::UniformGravity::setGravity(const SimTK::Vec3 &) (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::Force::UniformGravity::setGravity(const SimTK::Vec3 &)
  // defined in simbody/internal/Force.h:384:10
  t14.method("setGravity", static_cast<void (SimTK::Force::UniformGravity::*)(const SimTK::Vec3 &) >(&SimTK::Force::UniformGravity::setGravity));

  DEBUG_MSG("Adding wrapper for SimTK::Real SimTK::Force::UniformGravity::getZeroHeight() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Real SimTK::Force::UniformGravity::getZeroHeight()
  // defined in simbody/internal/Force.h:385:10
  t14.method("getZeroHeight", static_cast<SimTK::Real (SimTK::Force::UniformGravity::*)()  const>(&SimTK::Force::UniformGravity::getZeroHeight));

  DEBUG_MSG("Adding wrapper for void SimTK::Force::UniformGravity::setZeroHeight(SimTK::Real) (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::Force::UniformGravity::setZeroHeight(SimTK::Real)
  // defined in simbody/internal/Force.h:386:10
  t14.method("setZeroHeight", static_cast<void (SimTK::Force::UniformGravity::*)(SimTK::Real) >(&SimTK::Force::UniformGravity::setZeroHeight));

  /* End of SimTK::Force::UniformGravity class method wrappers
   **********************************************************************/


  /**********************************************************************/
  /* Wrappers for the methods of class SimTK::Force::DiscreteForces
   */


  DEBUG_MSG("Adding wrapper for void SimTK::Force::DiscreteForces::DiscreteForces(SimTK::GeneralForceSubsystem &, const SimTK::SimbodyMatterSubsystem &) (" __HERE__ ")");
  // defined in simbody/internal/Force_DiscreteForces.h:49:5
  t18.constructor<SimTK::GeneralForceSubsystem &, const SimTK::SimbodyMatterSubsystem &>();

  DEBUG_MSG("Adding wrapper for void SimTK::Force::DiscreteForces::clearAllForces(SimTK::State &) (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::Force::DiscreteForces::clearAllForces(SimTK::State &)
  // defined in simbody/internal/Force_DiscreteForces.h:58:10
  t18.method("clearAllForces", static_cast<void (SimTK::Force::DiscreteForces::*)(SimTK::State &)  const>(&SimTK::Force::DiscreteForces::clearAllForces));

  DEBUG_MSG("Adding wrapper for void SimTK::Force::DiscreteForces::clearAllMobilityForces(SimTK::State &) (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::Force::DiscreteForces::clearAllMobilityForces(SimTK::State &)
  // defined in simbody/internal/Force_DiscreteForces.h:65:10
  t18.method("clearAllMobilityForces", static_cast<void (SimTK::Force::DiscreteForces::*)(SimTK::State &)  const>(&SimTK::Force::DiscreteForces::clearAllMobilityForces));

  DEBUG_MSG("Adding wrapper for void SimTK::Force::DiscreteForces::clearAllBodyForces(SimTK::State &) (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::Force::DiscreteForces::clearAllBodyForces(SimTK::State &)
  // defined in simbody/internal/Force_DiscreteForces.h:68:10
  t18.method("clearAllBodyForces", static_cast<void (SimTK::Force::DiscreteForces::*)(SimTK::State &)  const>(&SimTK::Force::DiscreteForces::clearAllBodyForces));

  DEBUG_MSG("Adding wrapper for void SimTK::Force::DiscreteForces::setOneMobilityForce(SimTK::State &, const SimTK::MobilizedBody &, SimTK::MobilizerUIndex, SimTK::Real) (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::Force::DiscreteForces::setOneMobilityForce(SimTK::State &, const SimTK::MobilizedBody &, SimTK::MobilizerUIndex, SimTK::Real)
  // defined in simbody/internal/Force_DiscreteForces.h:82:10
  t18.method("setOneMobilityForce", static_cast<void (SimTK::Force::DiscreteForces::*)(SimTK::State &, const SimTK::MobilizedBody &, SimTK::MobilizerUIndex, SimTK::Real)  const>(&SimTK::Force::DiscreteForces::setOneMobilityForce));

  DEBUG_MSG("Adding wrapper for void SimTK::Force::DiscreteForces::setOneBodyForce(SimTK::State &, const SimTK::MobilizedBody &, const SimTK::SpatialVec &) (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::Force::DiscreteForces::setOneBodyForce(SimTK::State &, const SimTK::MobilizedBody &, const SimTK::SpatialVec &)
  // defined in simbody/internal/Force_DiscreteForces.h:99:10
  t18.method("setOneBodyForce", static_cast<void (SimTK::Force::DiscreteForces::*)(SimTK::State &, const SimTK::MobilizedBody &, const SimTK::SpatialVec &)  const>(&SimTK::Force::DiscreteForces::setOneBodyForce));

  DEBUG_MSG("Adding wrapper for void SimTK::Force::DiscreteForces::addForceToBodyPoint(SimTK::State &, const SimTK::MobilizedBody &, const SimTK::Vec3 &, const SimTK::Vec3 &) (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::Force::DiscreteForces::addForceToBodyPoint(SimTK::State &, const SimTK::MobilizedBody &, const SimTK::Vec3 &, const SimTK::Vec3 &)
  // defined in simbody/internal/Force_DiscreteForces.h:120:10
  t18.method("addForceToBodyPoint", static_cast<void (SimTK::Force::DiscreteForces::*)(SimTK::State &, const SimTK::MobilizedBody &, const SimTK::Vec3 &, const SimTK::Vec3 &)  const>(&SimTK::Force::DiscreteForces::addForceToBodyPoint));

  DEBUG_MSG("Adding wrapper for void SimTK::Force::DiscreteForces::setAllMobilityForces(SimTK::State &, const SimTK::Vector &) (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::Force::DiscreteForces::setAllMobilityForces(SimTK::State &, const SimTK::Vector &)
  // defined in simbody/internal/Force_DiscreteForces.h:132:10
  t18.method("setAllMobilityForces", static_cast<void (SimTK::Force::DiscreteForces::*)(SimTK::State &, const SimTK::Vector &)  const>(&SimTK::Force::DiscreteForces::setAllMobilityForces));

  DEBUG_MSG("Adding wrapper for void SimTK::Force::DiscreteForces::setAllBodyForces(SimTK::State &, const SimTK::Vector_<SimTK::SpatialVec> &) (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::Force::DiscreteForces::setAllBodyForces(SimTK::State &, const SimTK::Vector_<SimTK::SpatialVec> &)
  // defined in simbody/internal/Force_DiscreteForces.h:144:10
  t18.method("setAllBodyForces", static_cast<void (SimTK::Force::DiscreteForces::*)(SimTK::State &, const SimTK::Vector_<SimTK::SpatialVec> &)  const>(&SimTK::Force::DiscreteForces::setAllBodyForces));

  DEBUG_MSG("Adding wrapper for SimTK::Real SimTK::Force::DiscreteForces::getOneMobilityForce(const SimTK::State &, const SimTK::MobilizedBody &, SimTK::MobilizerUIndex) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Real SimTK::Force::DiscreteForces::getOneMobilityForce(const SimTK::State &, const SimTK::MobilizedBody &, SimTK::MobilizerUIndex)
  // defined in simbody/internal/Force_DiscreteForces.h:151:10
  t18.method("getOneMobilityForce", static_cast<SimTK::Real (SimTK::Force::DiscreteForces::*)(const SimTK::State &, const SimTK::MobilizedBody &, SimTK::MobilizerUIndex)  const>(&SimTK::Force::DiscreteForces::getOneMobilityForce));

  DEBUG_MSG("Adding wrapper for SimTK::SpatialVec SimTK::Force::DiscreteForces::getOneBodyForce(const SimTK::State &, const SimTK::MobilizedBody &) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SpatialVec SimTK::Force::DiscreteForces::getOneBodyForce(const SimTK::State &, const SimTK::MobilizedBody &)
  // defined in simbody/internal/Force_DiscreteForces.h:158:16
  t18.method("getOneBodyForce", static_cast<SimTK::SpatialVec (SimTK::Force::DiscreteForces::*)(const SimTK::State &, const SimTK::MobilizedBody &)  const>(&SimTK::Force::DiscreteForces::getOneBodyForce));

  DEBUG_MSG("Adding wrapper for const SimTK::Vector & SimTK::Force::DiscreteForces::getAllMobilityForces(const SimTK::State &) (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::Vector & SimTK::Force::DiscreteForces::getAllMobilityForces(const SimTK::State &)
  // defined in simbody/internal/Force_DiscreteForces.h:166:19
  t18.method("getAllMobilityForces", static_cast<const SimTK::Vector & (SimTK::Force::DiscreteForces::*)(const SimTK::State &)  const>(&SimTK::Force::DiscreteForces::getAllMobilityForces));

  DEBUG_MSG("Adding wrapper for const SimTK::Vector_<SimTK::SpatialVec> & SimTK::Force::DiscreteForces::getAllBodyForces(const SimTK::State &) (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::Vector_<SimTK::SpatialVec> & SimTK::Force::DiscreteForces::getAllBodyForces(const SimTK::State &)
  // defined in simbody/internal/Force_DiscreteForces.h:172:32
  t18.method("getAllBodyForces", static_cast<const SimTK::Vector_<SimTK::SpatialVec> & (SimTK::Force::DiscreteForces::*)(const SimTK::State &)  const>(&SimTK::Force::DiscreteForces::getAllBodyForces));

  /* End of SimTK::Force::DiscreteForces class method wrappers
   **********************************************************************/


  /**********************************************************************/
  /* Wrappers for the methods of class SimTK::Force::Gravity
   */


  DEBUG_MSG("Adding wrapper for void SimTK::Force::Gravity::Gravity(SimTK::GeneralForceSubsystem &, const SimTK::SimbodyMatterSubsystem &, const SimTK::UnitVec3 &, SimTK::Real, SimTK::Real) (" __HERE__ ")");
  // defined in simbody/internal/Force_Gravity.h:125:1
  t20.constructor<SimTK::GeneralForceSubsystem &, const SimTK::SimbodyMatterSubsystem &, const SimTK::UnitVec3 &, SimTK::Real>();
  t20.constructor<SimTK::GeneralForceSubsystem &, const SimTK::SimbodyMatterSubsystem &, const SimTK::UnitVec3 &, SimTK::Real, SimTK::Real>();


  DEBUG_MSG("Adding wrapper for void SimTK::Force::Gravity::Gravity(SimTK::GeneralForceSubsystem &, const SimTK::SimbodyMatterSubsystem &, const SimTK::Vec3 &) (" __HERE__ ")");
  // defined in simbody/internal/Force_Gravity.h:158:1
  t20.constructor<SimTK::GeneralForceSubsystem &, const SimTK::SimbodyMatterSubsystem &, const SimTK::Vec3 &>();


  DEBUG_MSG("Adding wrapper for void SimTK::Force::Gravity::Gravity(SimTK::GeneralForceSubsystem &, const SimTK::SimbodyMatterSubsystem &, SimTK::Real) (" __HERE__ ")");
  // defined in simbody/internal/Force_Gravity.h:186:1
  t20.constructor<SimTK::GeneralForceSubsystem &, const SimTK::SimbodyMatterSubsystem &, SimTK::Real>();

  DEBUG_MSG("Adding wrapper for SimTK::Force::Gravity & SimTK::Force::Gravity::setDefaultBodyIsExcluded(SimTK::MobilizedBodyIndex, bool) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Force::Gravity & SimTK::Force::Gravity::setDefaultBodyIsExcluded(SimTK::MobilizedBodyIndex, bool)
  // defined in simbody/internal/Force_Gravity.h:210:10
  t20.method("setDefaultBodyIsExcluded", static_cast<SimTK::Force::Gravity & (SimTK::Force::Gravity::*)(SimTK::MobilizedBodyIndex, bool) >(&SimTK::Force::Gravity::setDefaultBodyIsExcluded));

  DEBUG_MSG("Adding wrapper for SimTK::Force::Gravity & SimTK::Force::Gravity::setDefaultGravityVector(const SimTK::Vec3 &) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Force::Gravity & SimTK::Force::Gravity::setDefaultGravityVector(const SimTK::Vec3 &)
  // defined in simbody/internal/Force_Gravity.h:221:10
  t20.method("setDefaultGravityVector", static_cast<SimTK::Force::Gravity & (SimTK::Force::Gravity::*)(const SimTK::Vec3 &) >(&SimTK::Force::Gravity::setDefaultGravityVector));

  DEBUG_MSG("Adding wrapper for SimTK::Force::Gravity & SimTK::Force::Gravity::setDefaultDownDirection(const SimTK::UnitVec3 &) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Force::Gravity & SimTK::Force::Gravity::setDefaultDownDirection(const SimTK::UnitVec3 &)
  // defined in simbody/internal/Force_Gravity.h:231:10
  t20.method("setDefaultDownDirection", static_cast<SimTK::Force::Gravity & (SimTK::Force::Gravity::*)(const SimTK::UnitVec3 &) >(&SimTK::Force::Gravity::setDefaultDownDirection));

  DEBUG_MSG("Adding wrapper for SimTK::Force::Gravity & SimTK::Force::Gravity::setDefaultDownDirection(const SimTK::Vec3 &) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Force::Gravity & SimTK::Force::Gravity::setDefaultDownDirection(const SimTK::Vec3 &)
  // defined in simbody/internal/Force_Gravity.h:236:10
  t20.method("setDefaultDownDirection", static_cast<SimTK::Force::Gravity & (SimTK::Force::Gravity::*)(const SimTK::Vec3 &) >(&SimTK::Force::Gravity::setDefaultDownDirection));

  DEBUG_MSG("Adding wrapper for SimTK::Force::Gravity & SimTK::Force::Gravity::setDefaultMagnitude(SimTK::Real) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Force::Gravity & SimTK::Force::Gravity::setDefaultMagnitude(SimTK::Real)
  // defined in simbody/internal/Force_Gravity.h:249:10
  t20.method("setDefaultMagnitude", static_cast<SimTK::Force::Gravity & (SimTK::Force::Gravity::*)(SimTK::Real) >(&SimTK::Force::Gravity::setDefaultMagnitude));

  DEBUG_MSG("Adding wrapper for SimTK::Force::Gravity & SimTK::Force::Gravity::setDefaultZeroHeight(SimTK::Real) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Force::Gravity & SimTK::Force::Gravity::setDefaultZeroHeight(SimTK::Real)
  // defined in simbody/internal/Force_Gravity.h:259:10
  t20.method("setDefaultZeroHeight", static_cast<SimTK::Force::Gravity & (SimTK::Force::Gravity::*)(SimTK::Real) >(&SimTK::Force::Gravity::setDefaultZeroHeight));

  DEBUG_MSG("Adding wrapper for bool SimTK::Force::Gravity::getDefaultBodyIsExcluded(SimTK::MobilizedBodyIndex) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::Force::Gravity::getDefaultBodyIsExcluded(SimTK::MobilizedBodyIndex)
  // defined in simbody/internal/Force_Gravity.h:270:6
  t20.method("getDefaultBodyIsExcluded", static_cast<bool (SimTK::Force::Gravity::*)(SimTK::MobilizedBodyIndex)  const>(&SimTK::Force::Gravity::getDefaultBodyIsExcluded));

  DEBUG_MSG("Adding wrapper for SimTK::Vec3 SimTK::Force::Gravity::getDefaultGravityVector() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Vec3 SimTK::Force::Gravity::getDefaultGravityVector()
  // defined in simbody/internal/Force_Gravity.h:273:6
  t20.method("getDefaultGravityVector", static_cast<SimTK::Vec3 (SimTK::Force::Gravity::*)()  const>(&SimTK::Force::Gravity::getDefaultGravityVector));

  DEBUG_MSG("Adding wrapper for const SimTK::UnitVec3 & SimTK::Force::Gravity::getDefaultDownDirection() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::UnitVec3 & SimTK::Force::Gravity::getDefaultDownDirection()
  // defined in simbody/internal/Force_Gravity.h:276:17
  t20.method("getDefaultDownDirection", static_cast<const SimTK::UnitVec3 & (SimTK::Force::Gravity::*)()  const>(&SimTK::Force::Gravity::getDefaultDownDirection));

  DEBUG_MSG("Adding wrapper for SimTK::Real SimTK::Force::Gravity::getDefaultMagnitude() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Real SimTK::Force::Gravity::getDefaultMagnitude()
  // defined in simbody/internal/Force_Gravity.h:278:6
  t20.method("getDefaultMagnitude", static_cast<SimTK::Real (SimTK::Force::Gravity::*)()  const>(&SimTK::Force::Gravity::getDefaultMagnitude));

  DEBUG_MSG("Adding wrapper for SimTK::Real SimTK::Force::Gravity::getDefaultZeroHeight() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Real SimTK::Force::Gravity::getDefaultZeroHeight()
  // defined in simbody/internal/Force_Gravity.h:281:6
  t20.method("getDefaultZeroHeight", static_cast<SimTK::Real (SimTK::Force::Gravity::*)()  const>(&SimTK::Force::Gravity::getDefaultZeroHeight));

  DEBUG_MSG("Adding wrapper for const SimTK::Force::Gravity & SimTK::Force::Gravity::setBodyIsExcluded(SimTK::State &, SimTK::MobilizedBodyIndex, bool) (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::Force::Gravity & SimTK::Force::Gravity::setBodyIsExcluded(SimTK::State &, SimTK::MobilizedBodyIndex, bool)
  // defined in simbody/internal/Force_Gravity.h:323:16
  t20.method("setBodyIsExcluded", static_cast<const SimTK::Force::Gravity & (SimTK::Force::Gravity::*)(SimTK::State &, SimTK::MobilizedBodyIndex, bool)  const>(&SimTK::Force::Gravity::setBodyIsExcluded));

  DEBUG_MSG("Adding wrapper for const SimTK::Force::Gravity & SimTK::Force::Gravity::setGravityVector(SimTK::State &, const SimTK::Vec3 &) (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::Force::Gravity & SimTK::Force::Gravity::setGravityVector(SimTK::State &, const SimTK::Vec3 &)
  // defined in simbody/internal/Force_Gravity.h:341:16
  t20.method("setGravityVector", static_cast<const SimTK::Force::Gravity & (SimTK::Force::Gravity::*)(SimTK::State &, const SimTK::Vec3 &)  const>(&SimTK::Force::Gravity::setGravityVector));

  DEBUG_MSG("Adding wrapper for const SimTK::Force::Gravity & SimTK::Force::Gravity::setDownDirection(SimTK::State &, const SimTK::UnitVec3 &) (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::Force::Gravity & SimTK::Force::Gravity::setDownDirection(SimTK::State &, const SimTK::UnitVec3 &)
  // defined in simbody/internal/Force_Gravity.h:356:16
  t20.method("setDownDirection", static_cast<const SimTK::Force::Gravity & (SimTK::Force::Gravity::*)(SimTK::State &, const SimTK::UnitVec3 &)  const>(&SimTK::Force::Gravity::setDownDirection));

  DEBUG_MSG("Adding wrapper for const SimTK::Force::Gravity & SimTK::Force::Gravity::setDownDirection(SimTK::State &, const SimTK::Vec3 &) (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::Force::Gravity & SimTK::Force::Gravity::setDownDirection(SimTK::State &, const SimTK::Vec3 &)
  // defined in simbody/internal/Force_Gravity.h:361:16
  t20.method("setDownDirection", static_cast<const SimTK::Force::Gravity & (SimTK::Force::Gravity::*)(SimTK::State &, const SimTK::Vec3 &)  const>(&SimTK::Force::Gravity::setDownDirection));

  DEBUG_MSG("Adding wrapper for const SimTK::Force::Gravity & SimTK::Force::Gravity::setMagnitude(SimTK::State &, SimTK::Real) (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::Force::Gravity & SimTK::Force::Gravity::setMagnitude(SimTK::State &, SimTK::Real)
  // defined in simbody/internal/Force_Gravity.h:378:16
  t20.method("setMagnitude", static_cast<const SimTK::Force::Gravity & (SimTK::Force::Gravity::*)(SimTK::State &, SimTK::Real)  const>(&SimTK::Force::Gravity::setMagnitude));

  DEBUG_MSG("Adding wrapper for const SimTK::Force::Gravity & SimTK::Force::Gravity::setZeroHeight(SimTK::State &, SimTK::Real) (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::Force::Gravity & SimTK::Force::Gravity::setZeroHeight(SimTK::State &, SimTK::Real)
  // defined in simbody/internal/Force_Gravity.h:392:16
  t20.method("setZeroHeight", static_cast<const SimTK::Force::Gravity & (SimTK::Force::Gravity::*)(SimTK::State &, SimTK::Real)  const>(&SimTK::Force::Gravity::setZeroHeight));

  DEBUG_MSG("Adding wrapper for bool SimTK::Force::Gravity::getBodyIsExcluded(const SimTK::State &, SimTK::MobilizedBodyIndex) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::Force::Gravity::getBodyIsExcluded(const SimTK::State &, SimTK::MobilizedBodyIndex)
  // defined in simbody/internal/Force_Gravity.h:406:6
  t20.method("getBodyIsExcluded", static_cast<bool (SimTK::Force::Gravity::*)(const SimTK::State &, SimTK::MobilizedBodyIndex)  const>(&SimTK::Force::Gravity::getBodyIsExcluded));

  DEBUG_MSG("Adding wrapper for SimTK::Vec3 SimTK::Force::Gravity::getGravityVector(const SimTK::State &) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Vec3 SimTK::Force::Gravity::getGravityVector(const SimTK::State &)
  // defined in simbody/internal/Force_Gravity.h:415:6
  t20.method("getGravityVector", static_cast<SimTK::Vec3 (SimTK::Force::Gravity::*)(const SimTK::State &)  const>(&SimTK::Force::Gravity::getGravityVector));

  DEBUG_MSG("Adding wrapper for const SimTK::UnitVec3 & SimTK::Force::Gravity::getDownDirection(const SimTK::State &) (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::UnitVec3 & SimTK::Force::Gravity::getDownDirection(const SimTK::State &)
  // defined in simbody/internal/Force_Gravity.h:423:17
  t20.method("getDownDirection", static_cast<const SimTK::UnitVec3 & (SimTK::Force::Gravity::*)(const SimTK::State &)  const>(&SimTK::Force::Gravity::getDownDirection));

  DEBUG_MSG("Adding wrapper for SimTK::Real SimTK::Force::Gravity::getMagnitude(const SimTK::State &) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Real SimTK::Force::Gravity::getMagnitude(const SimTK::State &)
  // defined in simbody/internal/Force_Gravity.h:431:6
  t20.method("getMagnitude", static_cast<SimTK::Real (SimTK::Force::Gravity::*)(const SimTK::State &)  const>(&SimTK::Force::Gravity::getMagnitude));

  DEBUG_MSG("Adding wrapper for SimTK::Real SimTK::Force::Gravity::getZeroHeight(const SimTK::State &) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Real SimTK::Force::Gravity::getZeroHeight(const SimTK::State &)
  // defined in simbody/internal/Force_Gravity.h:440:6
  t20.method("getZeroHeight", static_cast<SimTK::Real (SimTK::Force::Gravity::*)(const SimTK::State &)  const>(&SimTK::Force::Gravity::getZeroHeight));

  DEBUG_MSG("Adding wrapper for SimTK::Real SimTK::Force::Gravity::getPotentialEnergy(const SimTK::State &) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Real SimTK::Force::Gravity::getPotentialEnergy(const SimTK::State &)
  // defined in simbody/internal/Force_Gravity.h:466:6
  t20.method("getPotentialEnergy", static_cast<SimTK::Real (SimTK::Force::Gravity::*)(const SimTK::State &)  const>(&SimTK::Force::Gravity::getPotentialEnergy));

  DEBUG_MSG("Adding wrapper for const SimTK::Vector_<SimTK::SpatialVec> & SimTK::Force::Gravity::getBodyForces(const SimTK::State &) (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::Vector_<SimTK::SpatialVec> & SimTK::Force::Gravity::getBodyForces(const SimTK::State &)
  // defined in simbody/internal/Force_Gravity.h:492:28
  t20.method("getBodyForces", static_cast<const SimTK::Vector_<SimTK::SpatialVec> & (SimTK::Force::Gravity::*)(const SimTK::State &)  const>(&SimTK::Force::Gravity::getBodyForces));

  DEBUG_MSG("Adding wrapper for const SimTK::SpatialVec & SimTK::Force::Gravity::getBodyForce(const SimTK::State &, SimTK::MobilizedBodyIndex) (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::SpatialVec & SimTK::Force::Gravity::getBodyForce(const SimTK::State &, SimTK::MobilizedBodyIndex)
  // defined in simbody/internal/Force_Gravity.h:506:1
  t20.method("getBodyForce", static_cast<const SimTK::SpatialVec & (SimTK::Force::Gravity::*)(const SimTK::State &, SimTK::MobilizedBodyIndex)  const>(&SimTK::Force::Gravity::getBodyForce));

  DEBUG_MSG("Adding wrapper for const SimTK::Vector_<SimTK::Vec3> & SimTK::Force::Gravity::getParticleForces(const SimTK::State &) (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::Vector_<SimTK::Vec3> & SimTK::Force::Gravity::getParticleForces(const SimTK::State &)
  // defined in simbody/internal/Force_Gravity.h:516:22
  t20.method("getParticleForces", static_cast<const SimTK::Vector_<SimTK::Vec3> & (SimTK::Force::Gravity::*)(const SimTK::State &)  const>(&SimTK::Force::Gravity::getParticleForces));

  DEBUG_MSG("Adding wrapper for long long SimTK::Force::Gravity::getNumEvaluations() (" __HERE__ ")");
  // signature to use in the veto list: long long SimTK::Force::Gravity::getNumEvaluations()
  // defined in simbody/internal/Force_Gravity.h:533:11
  t20.method("getNumEvaluations", static_cast<long long (SimTK::Force::Gravity::*)()  const>(&SimTK::Force::Gravity::getNumEvaluations));

  DEBUG_MSG("Adding wrapper for bool SimTK::Force::Gravity::isForceCacheValid(const SimTK::State &) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::Force::Gravity::isForceCacheValid(const SimTK::State &)
  // defined in simbody/internal/Force_Gravity.h:538:6
  t20.method("isForceCacheValid", static_cast<bool (SimTK::Force::Gravity::*)(const SimTK::State &)  const>(&SimTK::Force::Gravity::isForceCacheValid));

  DEBUG_MSG("Adding wrapper for void SimTK::Force::Gravity::invalidateForceCache(const SimTK::State &) (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::Force::Gravity::invalidateForceCache(const SimTK::State &)
  // defined in simbody/internal/Force_Gravity.h:543:6
  t20.method("invalidateForceCache", static_cast<void (SimTK::Force::Gravity::*)(const SimTK::State &)  const>(&SimTK::Force::Gravity::invalidateForceCache));

  /* End of SimTK::Force::Gravity class method wrappers
   **********************************************************************/


  /**********************************************************************/
  /* Wrappers for the methods of class SimTK::Force::LinearBushing
   */


  DEBUG_MSG("Adding wrapper for void SimTK::Force::LinearBushing::LinearBushing(SimTK::GeneralForceSubsystem &, const SimTK::MobilizedBody &, const SimTK::Transform &, const SimTK::MobilizedBody &, const SimTK::Transform &, const SimTK::Vec6 &, const SimTK::Vec6 &) (" __HERE__ ")");
  // defined in simbody/internal/Force_LinearBushing.h:124:5
  t22.constructor<SimTK::GeneralForceSubsystem &, const SimTK::MobilizedBody &, const SimTK::Transform &, const SimTK::MobilizedBody &, const SimTK::Transform &, const SimTK::Vec6 &, const SimTK::Vec6 &>();


  DEBUG_MSG("Adding wrapper for void SimTK::Force::LinearBushing::LinearBushing(SimTK::GeneralForceSubsystem &, const SimTK::MobilizedBody &, const SimTK::MobilizedBody &, const SimTK::Vec6 &, const SimTK::Vec6 &) (" __HERE__ ")");
  // defined in simbody/internal/Force_LinearBushing.h:146:5
  t22.constructor<SimTK::GeneralForceSubsystem &, const SimTK::MobilizedBody &, const SimTK::MobilizedBody &, const SimTK::Vec6 &, const SimTK::Vec6 &>();

  DEBUG_MSG("Adding wrapper for SimTK::Force::LinearBushing & SimTK::Force::LinearBushing::setDefaultFrameOnBody1(const SimTK::Transform &) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Force::LinearBushing & SimTK::Force::LinearBushing::setDefaultFrameOnBody1(const SimTK::Transform &)
  // defined in simbody/internal/Force_LinearBushing.h:179:20
  t22.method("setDefaultFrameOnBody1", static_cast<SimTK::Force::LinearBushing & (SimTK::Force::LinearBushing::*)(const SimTK::Transform &) >(&SimTK::Force::LinearBushing::setDefaultFrameOnBody1));

  DEBUG_MSG("Adding wrapper for SimTK::Force::LinearBushing & SimTK::Force::LinearBushing::setDefaultFrameOnBody2(const SimTK::Transform &) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Force::LinearBushing & SimTK::Force::LinearBushing::setDefaultFrameOnBody2(const SimTK::Transform &)
  // defined in simbody/internal/Force_LinearBushing.h:189:20
  t22.method("setDefaultFrameOnBody2", static_cast<SimTK::Force::LinearBushing & (SimTK::Force::LinearBushing::*)(const SimTK::Transform &) >(&SimTK::Force::LinearBushing::setDefaultFrameOnBody2));

  DEBUG_MSG("Adding wrapper for SimTK::Force::LinearBushing & SimTK::Force::LinearBushing::setDefaultStiffness(const SimTK::Vec6 &) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Force::LinearBushing & SimTK::Force::LinearBushing::setDefaultStiffness(const SimTK::Vec6 &)
  // defined in simbody/internal/Force_LinearBushing.h:198:20
  t22.method("setDefaultStiffness", static_cast<SimTK::Force::LinearBushing & (SimTK::Force::LinearBushing::*)(const SimTK::Vec6 &) >(&SimTK::Force::LinearBushing::setDefaultStiffness));

  DEBUG_MSG("Adding wrapper for SimTK::Force::LinearBushing & SimTK::Force::LinearBushing::setDefaultDamping(const SimTK::Vec6 &) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Force::LinearBushing & SimTK::Force::LinearBushing::setDefaultDamping(const SimTK::Vec6 &)
  // defined in simbody/internal/Force_LinearBushing.h:207:20
  t22.method("setDefaultDamping", static_cast<SimTK::Force::LinearBushing & (SimTK::Force::LinearBushing::*)(const SimTK::Vec6 &) >(&SimTK::Force::LinearBushing::setDefaultDamping));

  DEBUG_MSG("Adding wrapper for const SimTK::Transform & SimTK::Force::LinearBushing::getDefaultFrameOnBody1() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::Transform & SimTK::Force::LinearBushing::getDefaultFrameOnBody1()
  // defined in simbody/internal/Force_LinearBushing.h:215:22
  t22.method("getDefaultFrameOnBody1", static_cast<const SimTK::Transform & (SimTK::Force::LinearBushing::*)()  const>(&SimTK::Force::LinearBushing::getDefaultFrameOnBody1));

  DEBUG_MSG("Adding wrapper for const SimTK::Transform & SimTK::Force::LinearBushing::getDefaultFrameOnBody2() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::Transform & SimTK::Force::LinearBushing::getDefaultFrameOnBody2()
  // defined in simbody/internal/Force_LinearBushing.h:222:22
  t22.method("getDefaultFrameOnBody2", static_cast<const SimTK::Transform & (SimTK::Force::LinearBushing::*)()  const>(&SimTK::Force::LinearBushing::getDefaultFrameOnBody2));

  DEBUG_MSG("Adding wrapper for const SimTK::Vec6 & SimTK::Force::LinearBushing::getDefaultStiffness() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::Vec6 & SimTK::Force::LinearBushing::getDefaultStiffness()
  // defined in simbody/internal/Force_LinearBushing.h:227:17
  t22.method("getDefaultStiffness", static_cast<const SimTK::Vec6 & (SimTK::Force::LinearBushing::*)()  const>(&SimTK::Force::LinearBushing::getDefaultStiffness));

  DEBUG_MSG("Adding wrapper for const SimTK::Vec6 & SimTK::Force::LinearBushing::getDefaultDamping() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::Vec6 & SimTK::Force::LinearBushing::getDefaultDamping()
  // defined in simbody/internal/Force_LinearBushing.h:233:17
  t22.method("getDefaultDamping", static_cast<const SimTK::Vec6 & (SimTK::Force::LinearBushing::*)()  const>(&SimTK::Force::LinearBushing::getDefaultDamping));

  DEBUG_MSG("Adding wrapper for const SimTK::Force::LinearBushing & SimTK::Force::LinearBushing::setFrameOnBody1(SimTK::State &, const SimTK::Transform &) (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::Force::LinearBushing & SimTK::Force::LinearBushing::setFrameOnBody1(SimTK::State &, const SimTK::Transform &)
  // defined in simbody/internal/Force_LinearBushing.h:268:26
  t22.method("setFrameOnBody1", static_cast<const SimTK::Force::LinearBushing & (SimTK::Force::LinearBushing::*)(SimTK::State &, const SimTK::Transform &)  const>(&SimTK::Force::LinearBushing::setFrameOnBody1));

  DEBUG_MSG("Adding wrapper for const SimTK::Force::LinearBushing & SimTK::Force::LinearBushing::setFrameOnBody2(SimTK::State &, const SimTK::Transform &) (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::Force::LinearBushing & SimTK::Force::LinearBushing::setFrameOnBody2(SimTK::State &, const SimTK::Transform &)
  // defined in simbody/internal/Force_LinearBushing.h:282:26
  t22.method("setFrameOnBody2", static_cast<const SimTK::Force::LinearBushing & (SimTK::Force::LinearBushing::*)(SimTK::State &, const SimTK::Transform &)  const>(&SimTK::Force::LinearBushing::setFrameOnBody2));

  DEBUG_MSG("Adding wrapper for const SimTK::Force::LinearBushing & SimTK::Force::LinearBushing::setStiffness(SimTK::State &, const SimTK::Vec6 &) (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::Force::LinearBushing & SimTK::Force::LinearBushing::setStiffness(SimTK::State &, const SimTK::Vec6 &)
  // defined in simbody/internal/Force_LinearBushing.h:295:26
  t22.method("setStiffness", static_cast<const SimTK::Force::LinearBushing & (SimTK::Force::LinearBushing::*)(SimTK::State &, const SimTK::Vec6 &)  const>(&SimTK::Force::LinearBushing::setStiffness));

  DEBUG_MSG("Adding wrapper for const SimTK::Force::LinearBushing & SimTK::Force::LinearBushing::setDamping(SimTK::State &, const SimTK::Vec6 &) (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::Force::LinearBushing & SimTK::Force::LinearBushing::setDamping(SimTK::State &, const SimTK::Vec6 &)
  // defined in simbody/internal/Force_LinearBushing.h:308:26
  t22.method("setDamping", static_cast<const SimTK::Force::LinearBushing & (SimTK::Force::LinearBushing::*)(SimTK::State &, const SimTK::Vec6 &)  const>(&SimTK::Force::LinearBushing::setDamping));

  DEBUG_MSG("Adding wrapper for const SimTK::Transform & SimTK::Force::LinearBushing::getFrameOnBody1(const SimTK::State &) (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::Transform & SimTK::Force::LinearBushing::getFrameOnBody1(const SimTK::State &)
  // defined in simbody/internal/Force_LinearBushing.h:320:22
  t22.method("getFrameOnBody1", static_cast<const SimTK::Transform & (SimTK::Force::LinearBushing::*)(const SimTK::State &)  const>(&SimTK::Force::LinearBushing::getFrameOnBody1));

  DEBUG_MSG("Adding wrapper for const SimTK::Transform & SimTK::Force::LinearBushing::getFrameOnBody2(const SimTK::State &) (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::Transform & SimTK::Force::LinearBushing::getFrameOnBody2(const SimTK::State &)
  // defined in simbody/internal/Force_LinearBushing.h:330:22
  t22.method("getFrameOnBody2", static_cast<const SimTK::Transform & (SimTK::Force::LinearBushing::*)(const SimTK::State &)  const>(&SimTK::Force::LinearBushing::getFrameOnBody2));

  DEBUG_MSG("Adding wrapper for const SimTK::Vec6 & SimTK::Force::LinearBushing::getStiffness(const SimTK::State &) (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::Vec6 & SimTK::Force::LinearBushing::getStiffness(const SimTK::State &)
  // defined in simbody/internal/Force_LinearBushing.h:340:17
  t22.method("getStiffness", static_cast<const SimTK::Vec6 & (SimTK::Force::LinearBushing::*)(const SimTK::State &)  const>(&SimTK::Force::LinearBushing::getStiffness));

  DEBUG_MSG("Adding wrapper for const SimTK::Vec6 & SimTK::Force::LinearBushing::getDamping(const SimTK::State &) (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::Vec6 & SimTK::Force::LinearBushing::getDamping(const SimTK::State &)
  // defined in simbody/internal/Force_LinearBushing.h:350:17
  t22.method("getDamping", static_cast<const SimTK::Vec6 & (SimTK::Force::LinearBushing::*)(const SimTK::State &)  const>(&SimTK::Force::LinearBushing::getDamping));

  DEBUG_MSG("Adding wrapper for const SimTK::Vec6 & SimTK::Force::LinearBushing::getQ(const SimTK::State &) (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::Vec6 & SimTK::Force::LinearBushing::getQ(const SimTK::State &)
  // defined in simbody/internal/Force_LinearBushing.h:379:17
  t22.method("getQ", static_cast<const SimTK::Vec6 & (SimTK::Force::LinearBushing::*)(const SimTK::State &)  const>(&SimTK::Force::LinearBushing::getQ));

  DEBUG_MSG("Adding wrapper for const SimTK::Transform & SimTK::Force::LinearBushing::getX_GF(const SimTK::State &) (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::Transform & SimTK::Force::LinearBushing::getX_GF(const SimTK::State &)
  // defined in simbody/internal/Force_LinearBushing.h:388:22
  t22.method("getX_GF", static_cast<const SimTK::Transform & (SimTK::Force::LinearBushing::*)(const SimTK::State &)  const>(&SimTK::Force::LinearBushing::getX_GF));

  DEBUG_MSG("Adding wrapper for const SimTK::Transform & SimTK::Force::LinearBushing::getX_GM(const SimTK::State &) (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::Transform & SimTK::Force::LinearBushing::getX_GM(const SimTK::State &)
  // defined in simbody/internal/Force_LinearBushing.h:397:22
  t22.method("getX_GM", static_cast<const SimTK::Transform & (SimTK::Force::LinearBushing::*)(const SimTK::State &)  const>(&SimTK::Force::LinearBushing::getX_GM));

  DEBUG_MSG("Adding wrapper for const SimTK::Transform & SimTK::Force::LinearBushing::getX_FM(const SimTK::State &) (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::Transform & SimTK::Force::LinearBushing::getX_FM(const SimTK::State &)
  // defined in simbody/internal/Force_LinearBushing.h:406:22
  t22.method("getX_FM", static_cast<const SimTK::Transform & (SimTK::Force::LinearBushing::*)(const SimTK::State &)  const>(&SimTK::Force::LinearBushing::getX_FM));

  DEBUG_MSG("Adding wrapper for const SimTK::Vec6 & SimTK::Force::LinearBushing::getQDot(const SimTK::State &) (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::Vec6 & SimTK::Force::LinearBushing::getQDot(const SimTK::State &)
  // defined in simbody/internal/Force_LinearBushing.h:435:17
  t22.method("getQDot", static_cast<const SimTK::Vec6 & (SimTK::Force::LinearBushing::*)(const SimTK::State &)  const>(&SimTK::Force::LinearBushing::getQDot));

  DEBUG_MSG("Adding wrapper for const SimTK::SpatialVec & SimTK::Force::LinearBushing::getV_GF(const SimTK::State &) (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::SpatialVec & SimTK::Force::LinearBushing::getV_GF(const SimTK::State &)
  // defined in simbody/internal/Force_LinearBushing.h:448:23
  t22.method("getV_GF", static_cast<const SimTK::SpatialVec & (SimTK::Force::LinearBushing::*)(const SimTK::State &)  const>(&SimTK::Force::LinearBushing::getV_GF));

  DEBUG_MSG("Adding wrapper for const SimTK::SpatialVec & SimTK::Force::LinearBushing::getV_GM(const SimTK::State &) (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::SpatialVec & SimTK::Force::LinearBushing::getV_GM(const SimTK::State &)
  // defined in simbody/internal/Force_LinearBushing.h:461:23
  t22.method("getV_GM", static_cast<const SimTK::SpatialVec & (SimTK::Force::LinearBushing::*)(const SimTK::State &)  const>(&SimTK::Force::LinearBushing::getV_GM));

  DEBUG_MSG("Adding wrapper for const SimTK::SpatialVec & SimTK::Force::LinearBushing::getV_FM(const SimTK::State &) (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::SpatialVec & SimTK::Force::LinearBushing::getV_FM(const SimTK::State &)
  // defined in simbody/internal/Force_LinearBushing.h:475:23
  t22.method("getV_FM", static_cast<const SimTK::SpatialVec & (SimTK::Force::LinearBushing::*)(const SimTK::State &)  const>(&SimTK::Force::LinearBushing::getV_FM));

  DEBUG_MSG("Adding wrapper for const SimTK::Vec6 & SimTK::Force::LinearBushing::getF(const SimTK::State &) (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::Vec6 & SimTK::Force::LinearBushing::getF(const SimTK::State &)
  // defined in simbody/internal/Force_LinearBushing.h:505:17
  t22.method("getF", static_cast<const SimTK::Vec6 & (SimTK::Force::LinearBushing::*)(const SimTK::State &)  const>(&SimTK::Force::LinearBushing::getF));

  DEBUG_MSG("Adding wrapper for const SimTK::SpatialVec & SimTK::Force::LinearBushing::getF_GM(const SimTK::State &) (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::SpatialVec & SimTK::Force::LinearBushing::getF_GM(const SimTK::State &)
  // defined in simbody/internal/Force_LinearBushing.h:516:23
  t22.method("getF_GM", static_cast<const SimTK::SpatialVec & (SimTK::Force::LinearBushing::*)(const SimTK::State &)  const>(&SimTK::Force::LinearBushing::getF_GM));

  DEBUG_MSG("Adding wrapper for const SimTK::SpatialVec & SimTK::Force::LinearBushing::getF_GF(const SimTK::State &) (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::SpatialVec & SimTK::Force::LinearBushing::getF_GF(const SimTK::State &)
  // defined in simbody/internal/Force_LinearBushing.h:528:23
  t22.method("getF_GF", static_cast<const SimTK::SpatialVec & (SimTK::Force::LinearBushing::*)(const SimTK::State &)  const>(&SimTK::Force::LinearBushing::getF_GF));

  DEBUG_MSG("Adding wrapper for SimTK::Real SimTK::Force::LinearBushing::getPotentialEnergy(const SimTK::State &) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Real SimTK::Force::LinearBushing::getPotentialEnergy(const SimTK::State &)
  // defined in simbody/internal/Force_LinearBushing.h:548:10
  t22.method("getPotentialEnergy", static_cast<SimTK::Real (SimTK::Force::LinearBushing::*)(const SimTK::State &)  const>(&SimTK::Force::LinearBushing::getPotentialEnergy));

  DEBUG_MSG("Adding wrapper for SimTK::Real SimTK::Force::LinearBushing::getPowerDissipation(const SimTK::State &) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Real SimTK::Force::LinearBushing::getPowerDissipation(const SimTK::State &)
  // defined in simbody/internal/Force_LinearBushing.h:560:10
  t22.method("getPowerDissipation", static_cast<SimTK::Real (SimTK::Force::LinearBushing::*)(const SimTK::State &)  const>(&SimTK::Force::LinearBushing::getPowerDissipation));

  DEBUG_MSG("Adding wrapper for SimTK::Real SimTK::Force::LinearBushing::getDissipatedEnergy(const SimTK::State &) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Real SimTK::Force::LinearBushing::getDissipatedEnergy(const SimTK::State &)
  // defined in simbody/internal/Force_LinearBushing.h:575:10
  t22.method("getDissipatedEnergy", static_cast<SimTK::Real (SimTK::Force::LinearBushing::*)(const SimTK::State &)  const>(&SimTK::Force::LinearBushing::getDissipatedEnergy));

  DEBUG_MSG("Adding wrapper for void SimTK::Force::LinearBushing::setDissipatedEnergy(SimTK::State &, SimTK::Real) (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::Force::LinearBushing::setDissipatedEnergy(SimTK::State &, SimTK::Real)
  // defined in simbody/internal/Force_LinearBushing.h:589:10
  t22.method("setDissipatedEnergy", static_cast<void (SimTK::Force::LinearBushing::*)(SimTK::State &, SimTK::Real)  const>(&SimTK::Force::LinearBushing::setDissipatedEnergy));

  /* End of SimTK::Force::LinearBushing class method wrappers
   **********************************************************************/


  /**********************************************************************/
  /* Wrappers for the methods of class SimTK::Force::MobilityConstantForce
   */


  DEBUG_MSG("Adding wrapper for void SimTK::Force::MobilityConstantForce::MobilityConstantForce(SimTK::GeneralForceSubsystem &, const SimTK::MobilizedBody &, SimTK::MobilizerUIndex, SimTK::Real) (" __HERE__ ")");
  // defined in simbody/internal/Force_MobilityConstantForce.h:53:5
  t23.constructor<SimTK::GeneralForceSubsystem &, const SimTK::MobilizedBody &, SimTK::MobilizerUIndex, SimTK::Real>();


  DEBUG_MSG("Adding wrapper for void SimTK::Force::MobilityConstantForce::MobilityConstantForce(SimTK::GeneralForceSubsystem &, const SimTK::MobilizedBody &, SimTK::Real) (" __HERE__ ")");
  // defined in simbody/internal/Force_MobilityConstantForce.h:61:5
  t23.constructor<SimTK::GeneralForceSubsystem &, const SimTK::MobilizedBody &, SimTK::Real>();

  DEBUG_MSG("Adding wrapper for SimTK::Force::MobilityConstantForce & SimTK::Force::MobilityConstantForce::setDefaultForce(SimTK::Real) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Force::MobilityConstantForce & SimTK::Force::MobilityConstantForce::setDefaultForce(SimTK::Real)
  // defined in simbody/internal/Force_MobilityConstantForce.h:82:28
  t23.method("setDefaultForce", static_cast<SimTK::Force::MobilityConstantForce & (SimTK::Force::MobilityConstantForce::*)(SimTK::Real) >(&SimTK::Force::MobilityConstantForce::setDefaultForce));

  DEBUG_MSG("Adding wrapper for SimTK::Real SimTK::Force::MobilityConstantForce::getDefaultForce() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Real SimTK::Force::MobilityConstantForce::getDefaultForce()
  // defined in simbody/internal/Force_MobilityConstantForce.h:87:10
  t23.method("getDefaultForce", static_cast<SimTK::Real (SimTK::Force::MobilityConstantForce::*)()  const>(&SimTK::Force::MobilityConstantForce::getDefaultForce));

  DEBUG_MSG("Adding wrapper for void SimTK::Force::MobilityConstantForce::setForce(SimTK::State &, SimTK::Real) (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::Force::MobilityConstantForce::setForce(SimTK::State &, SimTK::Real)
  // defined in simbody/internal/Force_MobilityConstantForce.h:98:10
  t23.method("setForce", static_cast<void (SimTK::Force::MobilityConstantForce::*)(SimTK::State &, SimTK::Real)  const>(&SimTK::Force::MobilityConstantForce::setForce));

  DEBUG_MSG("Adding wrapper for SimTK::Real SimTK::Force::MobilityConstantForce::getForce(const SimTK::State &) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Real SimTK::Force::MobilityConstantForce::getForce(const SimTK::State &)
  // defined in simbody/internal/Force_MobilityConstantForce.h:104:10
  t23.method("getForce", static_cast<SimTK::Real (SimTK::Force::MobilityConstantForce::*)(const SimTK::State &)  const>(&SimTK::Force::MobilityConstantForce::getForce));


  DEBUG_MSG("Adding wrapper for void SimTK::Force::MobilityConstantForce::MobilityConstantForce(SimTK::GeneralForceSubsystem &, const SimTK::MobilizedBody &, int, SimTK::Real) (" __HERE__ ")");
  // defined in simbody/internal/Force_MobilityConstantForce.h:113:5
  t23.constructor<SimTK::GeneralForceSubsystem &, const SimTK::MobilizedBody &, int, SimTK::Real>();

  /* End of SimTK::Force::MobilityConstantForce class method wrappers
   **********************************************************************/


  /**********************************************************************/
  /* Wrappers for the methods of class SimTK::Force::MobilityDiscreteForce
   */


  DEBUG_MSG("Adding wrapper for void SimTK::Force::MobilityDiscreteForce::MobilityDiscreteForce(SimTK::GeneralForceSubsystem &, const SimTK::MobilizedBody &, SimTK::MobilizerUIndex, SimTK::Real) (" __HERE__ ")");
  // defined in simbody/internal/Force_MobilityDiscreteForce.h:72:5
  t24.constructor<SimTK::GeneralForceSubsystem &, const SimTK::MobilizedBody &, SimTK::MobilizerUIndex>();
  t24.constructor<SimTK::GeneralForceSubsystem &, const SimTK::MobilizedBody &, SimTK::MobilizerUIndex, SimTK::Real>();


  DEBUG_MSG("Adding wrapper for void SimTK::Force::MobilityDiscreteForce::MobilityDiscreteForce(SimTK::GeneralForceSubsystem &, const SimTK::MobilizedBody &, SimTK::Real) (" __HERE__ ")");
  // defined in simbody/internal/Force_MobilityDiscreteForce.h:81:5
  t24.constructor<SimTK::GeneralForceSubsystem &, const SimTK::MobilizedBody &>();
  t24.constructor<SimTK::GeneralForceSubsystem &, const SimTK::MobilizedBody &, SimTK::Real>();

  DEBUG_MSG("Adding wrapper for SimTK::Force::MobilityDiscreteForce & SimTK::Force::MobilityDiscreteForce::setDefaultMobilityForce(SimTK::Real) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Force::MobilityDiscreteForce & SimTK::Force::MobilityDiscreteForce::setDefaultMobilityForce(SimTK::Real)
  // defined in simbody/internal/Force_MobilityDiscreteForce.h:102:28
  t24.method("setDefaultMobilityForce", static_cast<SimTK::Force::MobilityDiscreteForce & (SimTK::Force::MobilityDiscreteForce::*)(SimTK::Real) >(&SimTK::Force::MobilityDiscreteForce::setDefaultMobilityForce));

  DEBUG_MSG("Adding wrapper for SimTK::Real SimTK::Force::MobilityDiscreteForce::getDefaultMobilityForce() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Real SimTK::Force::MobilityDiscreteForce::getDefaultMobilityForce()
  // defined in simbody/internal/Force_MobilityDiscreteForce.h:109:10
  t24.method("getDefaultMobilityForce", static_cast<SimTK::Real (SimTK::Force::MobilityDiscreteForce::*)()  const>(&SimTK::Force::MobilityDiscreteForce::getDefaultMobilityForce));

  DEBUG_MSG("Adding wrapper for void SimTK::Force::MobilityDiscreteForce::setMobilityForce(SimTK::State &, SimTK::Real) (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::Force::MobilityDiscreteForce::setMobilityForce(SimTK::State &, SimTK::Real)
  // defined in simbody/internal/Force_MobilityDiscreteForce.h:114:10
  t24.method("setMobilityForce", static_cast<void (SimTK::Force::MobilityDiscreteForce::*)(SimTK::State &, SimTK::Real)  const>(&SimTK::Force::MobilityDiscreteForce::setMobilityForce));

  DEBUG_MSG("Adding wrapper for SimTK::Real SimTK::Force::MobilityDiscreteForce::getMobilityForce(const SimTK::State &) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Real SimTK::Force::MobilityDiscreteForce::getMobilityForce(const SimTK::State &)
  // defined in simbody/internal/Force_MobilityDiscreteForce.h:120:10
  t24.method("getMobilityForce", static_cast<SimTK::Real (SimTK::Force::MobilityDiscreteForce::*)(const SimTK::State &)  const>(&SimTK::Force::MobilityDiscreteForce::getMobilityForce));

  /* End of SimTK::Force::MobilityDiscreteForce class method wrappers
   **********************************************************************/


  /**********************************************************************/
  /* Wrappers for the methods of class SimTK::Force::MobilityLinearDamper
   */


  DEBUG_MSG("Adding wrapper for void SimTK::Force::MobilityLinearDamper::MobilityLinearDamper(SimTK::GeneralForceSubsystem &, const SimTK::MobilizedBody &, SimTK::MobilizerUIndex, SimTK::Real) (" __HERE__ ")");
  // defined in simbody/internal/Force_MobilityLinearDamper.h:61:5
  t25.constructor<SimTK::GeneralForceSubsystem &, const SimTK::MobilizedBody &, SimTK::MobilizerUIndex, SimTK::Real>();

  DEBUG_MSG("Adding wrapper for SimTK::Force::MobilityLinearDamper & SimTK::Force::MobilityLinearDamper::setDefaultDamping(SimTK::Real) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Force::MobilityLinearDamper & SimTK::Force::MobilityLinearDamper::setDefaultDamping(SimTK::Real)
  // defined in simbody/internal/Force_MobilityLinearDamper.h:82:27
  t25.method("setDefaultDamping", static_cast<SimTK::Force::MobilityLinearDamper & (SimTK::Force::MobilityLinearDamper::*)(SimTK::Real) >(&SimTK::Force::MobilityLinearDamper::setDefaultDamping));

  DEBUG_MSG("Adding wrapper for SimTK::Real SimTK::Force::MobilityLinearDamper::getDefaultDamping() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Real SimTK::Force::MobilityLinearDamper::getDefaultDamping()
  // defined in simbody/internal/Force_MobilityLinearDamper.h:87:10
  t25.method("getDefaultDamping", static_cast<SimTK::Real (SimTK::Force::MobilityLinearDamper::*)()  const>(&SimTK::Force::MobilityLinearDamper::getDefaultDamping));

  DEBUG_MSG("Adding wrapper for const SimTK::Force::MobilityLinearDamper & SimTK::Force::MobilityLinearDamper::setDamping(SimTK::State &, SimTK::Real) (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::Force::MobilityLinearDamper & SimTK::Force::MobilityLinearDamper::setDamping(SimTK::State &, SimTK::Real)
  // defined in simbody/internal/Force_MobilityLinearDamper.h:102:33
  t25.method("setDamping", static_cast<const SimTK::Force::MobilityLinearDamper & (SimTK::Force::MobilityLinearDamper::*)(SimTK::State &, SimTK::Real)  const>(&SimTK::Force::MobilityLinearDamper::setDamping));

  DEBUG_MSG("Adding wrapper for SimTK::Real SimTK::Force::MobilityLinearDamper::getDamping(const SimTK::State &) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Real SimTK::Force::MobilityLinearDamper::getDamping(const SimTK::State &)
  // defined in simbody/internal/Force_MobilityLinearDamper.h:110:10
  t25.method("getDamping", static_cast<SimTK::Real (SimTK::Force::MobilityLinearDamper::*)(const SimTK::State &)  const>(&SimTK::Force::MobilityLinearDamper::getDamping));


  DEBUG_MSG("Adding wrapper for void SimTK::Force::MobilityLinearDamper::MobilityLinearDamper(SimTK::GeneralForceSubsystem &, const SimTK::MobilizedBody &, int, SimTK::Real) (" __HERE__ ")");
  // defined in simbody/internal/Force_MobilityLinearDamper.h:119:5
  t25.constructor<SimTK::GeneralForceSubsystem &, const SimTK::MobilizedBody &, int, SimTK::Real>();

  /* End of SimTK::Force::MobilityLinearDamper class method wrappers
   **********************************************************************/


  /**********************************************************************/
  /* Wrappers for the methods of class SimTK::Force::MobilityLinearSpring
   */


  DEBUG_MSG("Adding wrapper for void SimTK::Force::MobilityLinearSpring::MobilityLinearSpring(SimTK::GeneralForceSubsystem &, const SimTK::MobilizedBody &, SimTK::MobilizerQIndex, SimTK::Real, SimTK::Real) (" __HERE__ ")");
  // defined in simbody/internal/Force_MobilityLinearSpring.h:66:5
  t26.constructor<SimTK::GeneralForceSubsystem &, const SimTK::MobilizedBody &, SimTK::MobilizerQIndex, SimTK::Real, SimTK::Real>();

  DEBUG_MSG("Adding wrapper for SimTK::Force::MobilityLinearSpring & SimTK::Force::MobilityLinearSpring::setDefaultStiffness(SimTK::Real) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Force::MobilityLinearSpring & SimTK::Force::MobilityLinearSpring::setDefaultStiffness(SimTK::Real)
  // defined in simbody/internal/Force_MobilityLinearSpring.h:88:27
  t26.method("setDefaultStiffness", static_cast<SimTK::Force::MobilityLinearSpring & (SimTK::Force::MobilityLinearSpring::*)(SimTK::Real) >(&SimTK::Force::MobilityLinearSpring::setDefaultStiffness));

  DEBUG_MSG("Adding wrapper for SimTK::Force::MobilityLinearSpring & SimTK::Force::MobilityLinearSpring::setDefaultQZero(SimTK::Real) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Force::MobilityLinearSpring & SimTK::Force::MobilityLinearSpring::setDefaultQZero(SimTK::Real)
  // defined in simbody/internal/Force_MobilityLinearSpring.h:104:27
  t26.method("setDefaultQZero", static_cast<SimTK::Force::MobilityLinearSpring & (SimTK::Force::MobilityLinearSpring::*)(SimTK::Real) >(&SimTK::Force::MobilityLinearSpring::setDefaultQZero));

  DEBUG_MSG("Adding wrapper for SimTK::Real SimTK::Force::MobilityLinearSpring::getDefaultStiffness() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Real SimTK::Force::MobilityLinearSpring::getDefaultStiffness()
  // defined in simbody/internal/Force_MobilityLinearSpring.h:109:10
  t26.method("getDefaultStiffness", static_cast<SimTK::Real (SimTK::Force::MobilityLinearSpring::*)()  const>(&SimTK::Force::MobilityLinearSpring::getDefaultStiffness));

  DEBUG_MSG("Adding wrapper for SimTK::Real SimTK::Force::MobilityLinearSpring::getDefaultQZero() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Real SimTK::Force::MobilityLinearSpring::getDefaultQZero()
  // defined in simbody/internal/Force_MobilityLinearSpring.h:113:10
  t26.method("getDefaultQZero", static_cast<SimTK::Real (SimTK::Force::MobilityLinearSpring::*)()  const>(&SimTK::Force::MobilityLinearSpring::getDefaultQZero));

  DEBUG_MSG("Adding wrapper for const SimTK::Force::MobilityLinearSpring & SimTK::Force::MobilityLinearSpring::setStiffness(SimTK::State &, SimTK::Real) (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::Force::MobilityLinearSpring & SimTK::Force::MobilityLinearSpring::setStiffness(SimTK::State &, SimTK::Real)
  // defined in simbody/internal/Force_MobilityLinearSpring.h:128:33
  t26.method("setStiffness", static_cast<const SimTK::Force::MobilityLinearSpring & (SimTK::Force::MobilityLinearSpring::*)(SimTK::State &, SimTK::Real)  const>(&SimTK::Force::MobilityLinearSpring::setStiffness));

  DEBUG_MSG("Adding wrapper for const SimTK::Force::MobilityLinearSpring & SimTK::Force::MobilityLinearSpring::setQZero(SimTK::State &, SimTK::Real) (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::Force::MobilityLinearSpring & SimTK::Force::MobilityLinearSpring::setQZero(SimTK::State &, SimTK::Real)
  // defined in simbody/internal/Force_MobilityLinearSpring.h:145:33
  t26.method("setQZero", static_cast<const SimTK::Force::MobilityLinearSpring & (SimTK::Force::MobilityLinearSpring::*)(SimTK::State &, SimTK::Real)  const>(&SimTK::Force::MobilityLinearSpring::setQZero));

  DEBUG_MSG("Adding wrapper for SimTK::Real SimTK::Force::MobilityLinearSpring::getStiffness(const SimTK::State &) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Real SimTK::Force::MobilityLinearSpring::getStiffness(const SimTK::State &)
  // defined in simbody/internal/Force_MobilityLinearSpring.h:152:10
  t26.method("getStiffness", static_cast<SimTK::Real (SimTK::Force::MobilityLinearSpring::*)(const SimTK::State &)  const>(&SimTK::Force::MobilityLinearSpring::getStiffness));

  DEBUG_MSG("Adding wrapper for SimTK::Real SimTK::Force::MobilityLinearSpring::getQZero(const SimTK::State &) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Real SimTK::Force::MobilityLinearSpring::getQZero(const SimTK::State &)
  // defined in simbody/internal/Force_MobilityLinearSpring.h:158:10
  t26.method("getQZero", static_cast<SimTK::Real (SimTK::Force::MobilityLinearSpring::*)(const SimTK::State &)  const>(&SimTK::Force::MobilityLinearSpring::getQZero));


  DEBUG_MSG("Adding wrapper for void SimTK::Force::MobilityLinearSpring::MobilityLinearSpring(SimTK::GeneralForceSubsystem &, const SimTK::MobilizedBody &, int, SimTK::Real, SimTK::Real) (" __HERE__ ")");
  // defined in simbody/internal/Force_MobilityLinearSpring.h:167:5
  t26.constructor<SimTK::GeneralForceSubsystem &, const SimTK::MobilizedBody &, int, SimTK::Real, SimTK::Real>();

  /* End of SimTK::Force::MobilityLinearSpring class method wrappers
   **********************************************************************/


  /**********************************************************************/
  /* Wrappers for the methods of class SimTK::Force::MobilityLinearStop
   */


  DEBUG_MSG("Adding wrapper for void SimTK::Force::MobilityLinearStop::MobilityLinearStop(SimTK::GeneralForceSubsystem &, const SimTK::MobilizedBody &, SimTK::MobilizerQIndex, SimTK::Real, SimTK::Real, SimTK::Real, SimTK::Real) (" __HERE__ ")");
  // defined in simbody/internal/Force_MobilityLinearStop.h:89:5
  t28.constructor<SimTK::GeneralForceSubsystem &, const SimTK::MobilizedBody &, SimTK::MobilizerQIndex, SimTK::Real, SimTK::Real>();
  t28.constructor<SimTK::GeneralForceSubsystem &, const SimTK::MobilizedBody &, SimTK::MobilizerQIndex, SimTK::Real, SimTK::Real, SimTK::Real>();
  t28.constructor<SimTK::GeneralForceSubsystem &, const SimTK::MobilizedBody &, SimTK::MobilizerQIndex, SimTK::Real, SimTK::Real, SimTK::Real, SimTK::Real>();

  DEBUG_MSG("Adding wrapper for SimTK::Force::MobilityLinearStop & SimTK::Force::MobilityLinearStop::setDefaultBounds(SimTK::Real, SimTK::Real) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Force::MobilityLinearStop & SimTK::Force::MobilityLinearStop::setDefaultBounds(SimTK::Real, SimTK::Real)
  // defined in simbody/internal/Force_MobilityLinearStop.h:117:25
  t28.method("setDefaultBounds", static_cast<SimTK::Force::MobilityLinearStop & (SimTK::Force::MobilityLinearStop::*)(SimTK::Real, SimTK::Real) >(&SimTK::Force::MobilityLinearStop::setDefaultBounds));

  DEBUG_MSG("Adding wrapper for SimTK::Force::MobilityLinearStop & SimTK::Force::MobilityLinearStop::setDefaultMaterialProperties(SimTK::Real, SimTK::Real) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Force::MobilityLinearStop & SimTK::Force::MobilityLinearStop::setDefaultMaterialProperties(SimTK::Real, SimTK::Real)
  // defined in simbody/internal/Force_MobilityLinearStop.h:134:25
  t28.method("setDefaultMaterialProperties", static_cast<SimTK::Force::MobilityLinearStop & (SimTK::Force::MobilityLinearStop::*)(SimTK::Real, SimTK::Real) >(&SimTK::Force::MobilityLinearStop::setDefaultMaterialProperties));

  DEBUG_MSG("Adding wrapper for SimTK::Real SimTK::Force::MobilityLinearStop::getDefaultLowerBound() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Real SimTK::Force::MobilityLinearStop::getDefaultLowerBound()
  // defined in simbody/internal/Force_MobilityLinearStop.h:140:10
  t28.method("getDefaultLowerBound", static_cast<SimTK::Real (SimTK::Force::MobilityLinearStop::*)()  const>(&SimTK::Force::MobilityLinearStop::getDefaultLowerBound));

  DEBUG_MSG("Adding wrapper for SimTK::Real SimTK::Force::MobilityLinearStop::getDefaultUpperBound() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Real SimTK::Force::MobilityLinearStop::getDefaultUpperBound()
  // defined in simbody/internal/Force_MobilityLinearStop.h:145:10
  t28.method("getDefaultUpperBound", static_cast<SimTK::Real (SimTK::Force::MobilityLinearStop::*)()  const>(&SimTK::Force::MobilityLinearStop::getDefaultUpperBound));

  DEBUG_MSG("Adding wrapper for SimTK::Real SimTK::Force::MobilityLinearStop::getDefaultStiffness() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Real SimTK::Force::MobilityLinearStop::getDefaultStiffness()
  // defined in simbody/internal/Force_MobilityLinearStop.h:150:10
  t28.method("getDefaultStiffness", static_cast<SimTK::Real (SimTK::Force::MobilityLinearStop::*)()  const>(&SimTK::Force::MobilityLinearStop::getDefaultStiffness));

  DEBUG_MSG("Adding wrapper for SimTK::Real SimTK::Force::MobilityLinearStop::getDefaultDissipation() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Real SimTK::Force::MobilityLinearStop::getDefaultDissipation()
  // defined in simbody/internal/Force_MobilityLinearStop.h:155:10
  t28.method("getDefaultDissipation", static_cast<SimTK::Real (SimTK::Force::MobilityLinearStop::*)()  const>(&SimTK::Force::MobilityLinearStop::getDefaultDissipation));

  DEBUG_MSG("Adding wrapper for void SimTK::Force::MobilityLinearStop::setBounds(SimTK::State &, SimTK::Real, SimTK::Real) (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::Force::MobilityLinearStop::setBounds(SimTK::State &, SimTK::Real, SimTK::Real)
  // defined in simbody/internal/Force_MobilityLinearStop.h:172:10
  t28.method("setBounds", static_cast<void (SimTK::Force::MobilityLinearStop::*)(SimTK::State &, SimTK::Real, SimTK::Real)  const>(&SimTK::Force::MobilityLinearStop::setBounds));

  DEBUG_MSG("Adding wrapper for void SimTK::Force::MobilityLinearStop::setMaterialProperties(SimTK::State &, SimTK::Real, SimTK::Real) (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::Force::MobilityLinearStop::setMaterialProperties(SimTK::State &, SimTK::Real, SimTK::Real)
  // defined in simbody/internal/Force_MobilityLinearStop.h:187:10
  t28.method("setMaterialProperties", static_cast<void (SimTK::Force::MobilityLinearStop::*)(SimTK::State &, SimTK::Real, SimTK::Real)  const>(&SimTK::Force::MobilityLinearStop::setMaterialProperties));

  DEBUG_MSG("Adding wrapper for SimTK::Real SimTK::Force::MobilityLinearStop::getLowerBound(const SimTK::State &) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Real SimTK::Force::MobilityLinearStop::getLowerBound(const SimTK::State &)
  // defined in simbody/internal/Force_MobilityLinearStop.h:194:10
  t28.method("getLowerBound", static_cast<SimTK::Real (SimTK::Force::MobilityLinearStop::*)(const SimTK::State &)  const>(&SimTK::Force::MobilityLinearStop::getLowerBound));

  DEBUG_MSG("Adding wrapper for SimTK::Real SimTK::Force::MobilityLinearStop::getUpperBound(const SimTK::State &) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Real SimTK::Force::MobilityLinearStop::getUpperBound(const SimTK::State &)
  // defined in simbody/internal/Force_MobilityLinearStop.h:200:10
  t28.method("getUpperBound", static_cast<SimTK::Real (SimTK::Force::MobilityLinearStop::*)(const SimTK::State &)  const>(&SimTK::Force::MobilityLinearStop::getUpperBound));

  DEBUG_MSG("Adding wrapper for SimTK::Real SimTK::Force::MobilityLinearStop::getStiffness(const SimTK::State &) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Real SimTK::Force::MobilityLinearStop::getStiffness(const SimTK::State &)
  // defined in simbody/internal/Force_MobilityLinearStop.h:206:10
  t28.method("getStiffness", static_cast<SimTK::Real (SimTK::Force::MobilityLinearStop::*)(const SimTK::State &)  const>(&SimTK::Force::MobilityLinearStop::getStiffness));

  DEBUG_MSG("Adding wrapper for SimTK::Real SimTK::Force::MobilityLinearStop::getDissipation(const SimTK::State &) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Real SimTK::Force::MobilityLinearStop::getDissipation(const SimTK::State &)
  // defined in simbody/internal/Force_MobilityLinearStop.h:212:10
  t28.method("getDissipation", static_cast<SimTK::Real (SimTK::Force::MobilityLinearStop::*)(const SimTK::State &)  const>(&SimTK::Force::MobilityLinearStop::getDissipation));

  /* End of SimTK::Force::MobilityLinearStop class method wrappers
   **********************************************************************/


  /**********************************************************************/
  /* Wrappers for the methods of class SimTK::Force::Thermostat
   */


  DEBUG_MSG("Adding wrapper for void SimTK::Force::Thermostat::Thermostat(SimTK::GeneralForceSubsystem &, const SimTK::SimbodyMatterSubsystem &, SimTK::Real, SimTK::Real, SimTK::Real, int) (" __HERE__ ")");
  // defined in simbody/internal/Force_Thermostat.h:136:5
  t29.constructor<SimTK::GeneralForceSubsystem &, const SimTK::SimbodyMatterSubsystem &, SimTK::Real, SimTK::Real, SimTK::Real>();
  t29.constructor<SimTK::GeneralForceSubsystem &, const SimTK::SimbodyMatterSubsystem &, SimTK::Real, SimTK::Real, SimTK::Real, int>();

  DEBUG_MSG("Adding wrapper for SimTK::Force::Thermostat & SimTK::Force::Thermostat::setDefaultNumChains(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Force::Thermostat & SimTK::Force::Thermostat::setDefaultNumChains(int)
  // defined in simbody/internal/Force_Thermostat.h:155:17
  t29.method("setDefaultNumChains", static_cast<SimTK::Force::Thermostat & (SimTK::Force::Thermostat::*)(int) >(&SimTK::Force::Thermostat::setDefaultNumChains));

  DEBUG_MSG("Adding wrapper for SimTK::Force::Thermostat & SimTK::Force::Thermostat::setDefaultBathTemperature(SimTK::Real) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Force::Thermostat & SimTK::Force::Thermostat::setDefaultBathTemperature(SimTK::Real)
  // defined in simbody/internal/Force_Thermostat.h:160:17
  t29.method("setDefaultBathTemperature", static_cast<SimTK::Force::Thermostat & (SimTK::Force::Thermostat::*)(SimTK::Real) >(&SimTK::Force::Thermostat::setDefaultBathTemperature));

  DEBUG_MSG("Adding wrapper for SimTK::Force::Thermostat & SimTK::Force::Thermostat::setDefaultRelaxationTime(SimTK::Real) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Force::Thermostat & SimTK::Force::Thermostat::setDefaultRelaxationTime(SimTK::Real)
  // defined in simbody/internal/Force_Thermostat.h:163:17
  t29.method("setDefaultRelaxationTime", static_cast<SimTK::Force::Thermostat & (SimTK::Force::Thermostat::*)(SimTK::Real) >(&SimTK::Force::Thermostat::setDefaultRelaxationTime));

  DEBUG_MSG("Adding wrapper for SimTK::Force::Thermostat & SimTK::Force::Thermostat::setDefaultNumExcludedDofs(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Force::Thermostat & SimTK::Force::Thermostat::setDefaultNumExcludedDofs(int)
  // defined in simbody/internal/Force_Thermostat.h:169:17
  t29.method("setDefaultNumExcludedDofs", static_cast<SimTK::Force::Thermostat & (SimTK::Force::Thermostat::*)(int) >(&SimTK::Force::Thermostat::setDefaultNumExcludedDofs));

  DEBUG_MSG("Adding wrapper for int SimTK::Force::Thermostat::getDefaultNumChains() (" __HERE__ ")");
  // signature to use in the veto list: int SimTK::Force::Thermostat::getDefaultNumChains()
  // defined in simbody/internal/Force_Thermostat.h:174:9
  t29.method("getDefaultNumChains", static_cast<int (SimTK::Force::Thermostat::*)()  const>(&SimTK::Force::Thermostat::getDefaultNumChains));

  DEBUG_MSG("Adding wrapper for SimTK::Real SimTK::Force::Thermostat::getDefaultBathTemperature() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Real SimTK::Force::Thermostat::getDefaultBathTemperature()
  // defined in simbody/internal/Force_Thermostat.h:178:10
  t29.method("getDefaultBathTemperature", static_cast<SimTK::Real (SimTK::Force::Thermostat::*)()  const>(&SimTK::Force::Thermostat::getDefaultBathTemperature));

  DEBUG_MSG("Adding wrapper for SimTK::Real SimTK::Force::Thermostat::getDefaultRelaxationTime() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Real SimTK::Force::Thermostat::getDefaultRelaxationTime()
  // defined in simbody/internal/Force_Thermostat.h:181:10
  t29.method("getDefaultRelaxationTime", static_cast<SimTK::Real (SimTK::Force::Thermostat::*)()  const>(&SimTK::Force::Thermostat::getDefaultRelaxationTime));

  DEBUG_MSG("Adding wrapper for int SimTK::Force::Thermostat::getDefaultNumExcludedDofs() (" __HERE__ ")");
  // signature to use in the veto list: int SimTK::Force::Thermostat::getDefaultNumExcludedDofs()
  // defined in simbody/internal/Force_Thermostat.h:186:9
  t29.method("getDefaultNumExcludedDofs", static_cast<int (SimTK::Force::Thermostat::*)()  const>(&SimTK::Force::Thermostat::getDefaultNumExcludedDofs));

  DEBUG_MSG("Adding wrapper for SimTK::Real SimTK::Force::Thermostat::getBoltzmannsConstant() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Real SimTK::Force::Thermostat::getBoltzmannsConstant()
  // defined in simbody/internal/Force_Thermostat.h:190:10
  t29.method("getBoltzmannsConstant", static_cast<SimTK::Real (SimTK::Force::Thermostat::*)()  const>(&SimTK::Force::Thermostat::getBoltzmannsConstant));

  DEBUG_MSG("Adding wrapper for const SimTK::Force::Thermostat & SimTK::Force::Thermostat::setNumChains(SimTK::State &, int) (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::Force::Thermostat & SimTK::Force::Thermostat::setNumChains(SimTK::State &, int)
  // defined in simbody/internal/Force_Thermostat.h:195:23
  t29.method("setNumChains", static_cast<const SimTK::Force::Thermostat & (SimTK::Force::Thermostat::*)(SimTK::State &, int)  const>(&SimTK::Force::Thermostat::setNumChains));

  DEBUG_MSG("Adding wrapper for const SimTK::Force::Thermostat & SimTK::Force::Thermostat::setBathTemperature(SimTK::State &, SimTK::Real) (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::Force::Thermostat & SimTK::Force::Thermostat::setBathTemperature(SimTK::State &, SimTK::Real)
  // defined in simbody/internal/Force_Thermostat.h:201:23
  t29.method("setBathTemperature", static_cast<const SimTK::Force::Thermostat & (SimTK::Force::Thermostat::*)(SimTK::State &, SimTK::Real)  const>(&SimTK::Force::Thermostat::setBathTemperature));

  DEBUG_MSG("Adding wrapper for const SimTK::Force::Thermostat & SimTK::Force::Thermostat::setRelaxationTime(SimTK::State &, SimTK::Real) (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::Force::Thermostat & SimTK::Force::Thermostat::setRelaxationTime(SimTK::State &, SimTK::Real)
  // defined in simbody/internal/Force_Thermostat.h:206:23
  t29.method("setRelaxationTime", static_cast<const SimTK::Force::Thermostat & (SimTK::Force::Thermostat::*)(SimTK::State &, SimTK::Real)  const>(&SimTK::Force::Thermostat::setRelaxationTime));

  DEBUG_MSG("Adding wrapper for const SimTK::Force::Thermostat & SimTK::Force::Thermostat::setNumExcludedDofs(SimTK::State &, int) (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::Force::Thermostat & SimTK::Force::Thermostat::setNumExcludedDofs(SimTK::State &, int)
  // defined in simbody/internal/Force_Thermostat.h:211:23
  t29.method("setNumExcludedDofs", static_cast<const SimTK::Force::Thermostat & (SimTK::Force::Thermostat::*)(SimTK::State &, int)  const>(&SimTK::Force::Thermostat::setNumExcludedDofs));

  DEBUG_MSG("Adding wrapper for int SimTK::Force::Thermostat::getNumChains(const SimTK::State &) (" __HERE__ ")");
  // signature to use in the veto list: int SimTK::Force::Thermostat::getNumChains(const SimTK::State &)
  // defined in simbody/internal/Force_Thermostat.h:216:9
  t29.method("getNumChains", static_cast<int (SimTK::Force::Thermostat::*)(const SimTK::State &)  const>(&SimTK::Force::Thermostat::getNumChains));

  DEBUG_MSG("Adding wrapper for SimTK::Real SimTK::Force::Thermostat::getBathTemperature(const SimTK::State &) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Real SimTK::Force::Thermostat::getBathTemperature(const SimTK::State &)
  // defined in simbody/internal/Force_Thermostat.h:221:10
  t29.method("getBathTemperature", static_cast<SimTK::Real (SimTK::Force::Thermostat::*)(const SimTK::State &)  const>(&SimTK::Force::Thermostat::getBathTemperature));

  DEBUG_MSG("Adding wrapper for SimTK::Real SimTK::Force::Thermostat::getRelaxationTime(const SimTK::State &) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Real SimTK::Force::Thermostat::getRelaxationTime(const SimTK::State &)
  // defined in simbody/internal/Force_Thermostat.h:224:10
  t29.method("getRelaxationTime", static_cast<SimTK::Real (SimTK::Force::Thermostat::*)(const SimTK::State &)  const>(&SimTK::Force::Thermostat::getRelaxationTime));

  DEBUG_MSG("Adding wrapper for int SimTK::Force::Thermostat::getNumExcludedDofs(const SimTK::State &) (" __HERE__ ")");
  // signature to use in the veto list: int SimTK::Force::Thermostat::getNumExcludedDofs(const SimTK::State &)
  // defined in simbody/internal/Force_Thermostat.h:229:9
  t29.method("getNumExcludedDofs", static_cast<int (SimTK::Force::Thermostat::*)(const SimTK::State &)  const>(&SimTK::Force::Thermostat::getNumExcludedDofs));

  DEBUG_MSG("Adding wrapper for int SimTK::Force::Thermostat::getNumThermalDofs(const SimTK::State &) (" __HERE__ ")");
  // signature to use in the veto list: int SimTK::Force::Thermostat::getNumThermalDofs(const SimTK::State &)
  // defined in simbody/internal/Force_Thermostat.h:235:9
  t29.method("getNumThermalDofs", static_cast<int (SimTK::Force::Thermostat::*)(const SimTK::State &)  const>(&SimTK::Force::Thermostat::getNumThermalDofs));

  DEBUG_MSG("Adding wrapper for SimTK::Real SimTK::Force::Thermostat::getCurrentTemperature(const SimTK::State &) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Real SimTK::Force::Thermostat::getCurrentTemperature(const SimTK::State &)
  // defined in simbody/internal/Force_Thermostat.h:240:10
  t29.method("getCurrentTemperature", static_cast<SimTK::Real (SimTK::Force::Thermostat::*)(const SimTK::State &)  const>(&SimTK::Force::Thermostat::getCurrentTemperature));

  DEBUG_MSG("Adding wrapper for void SimTK::Force::Thermostat::initializeChainState(SimTK::State &) (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::Force::Thermostat::initializeChainState(SimTK::State &)
  // defined in simbody/internal/Force_Thermostat.h:243:10
  t29.method("initializeChainState", static_cast<void (SimTK::Force::Thermostat::*)(SimTK::State &)  const>(&SimTK::Force::Thermostat::initializeChainState));

  DEBUG_MSG("Adding wrapper for void SimTK::Force::Thermostat::setChainState(SimTK::State &, const SimTK::Vector &) (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::Force::Thermostat::setChainState(SimTK::State &, const SimTK::Vector &)
  // defined in simbody/internal/Force_Thermostat.h:247:10
  t29.method("setChainState", static_cast<void (SimTK::Force::Thermostat::*)(SimTK::State &, const SimTK::Vector &)  const>(&SimTK::Force::Thermostat::setChainState));

  DEBUG_MSG("Adding wrapper for SimTK::Vector SimTK::Force::Thermostat::getChainState(const SimTK::State &) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Vector SimTK::Force::Thermostat::getChainState(const SimTK::State &)
  // defined in simbody/internal/Force_Thermostat.h:252:12
  t29.method("getChainState", static_cast<SimTK::Vector (SimTK::Force::Thermostat::*)(const SimTK::State &)  const>(&SimTK::Force::Thermostat::getChainState));

  DEBUG_MSG("Adding wrapper for SimTK::Real SimTK::Force::Thermostat::calcBathEnergy(const SimTK::State &) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Real SimTK::Force::Thermostat::calcBathEnergy(const SimTK::State &)
  // defined in simbody/internal/Force_Thermostat.h:257:10
  t29.method("calcBathEnergy", static_cast<SimTK::Real (SimTK::Force::Thermostat::*)(const SimTK::State &)  const>(&SimTK::Force::Thermostat::calcBathEnergy));

  DEBUG_MSG("Adding wrapper for SimTK::Real SimTK::Force::Thermostat::getExternalPower(const SimTK::State &) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Real SimTK::Force::Thermostat::getExternalPower(const SimTK::State &)
  // defined in simbody/internal/Force_Thermostat.h:261:10
  t29.method("getExternalPower", static_cast<SimTK::Real (SimTK::Force::Thermostat::*)(const SimTK::State &)  const>(&SimTK::Force::Thermostat::getExternalPower));

  DEBUG_MSG("Adding wrapper for SimTK::Real SimTK::Force::Thermostat::getExternalWork(const SimTK::State &) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Real SimTK::Force::Thermostat::getExternalWork(const SimTK::State &)
  // defined in simbody/internal/Force_Thermostat.h:265:10
  t29.method("getExternalWork", static_cast<SimTK::Real (SimTK::Force::Thermostat::*)(const SimTK::State &)  const>(&SimTK::Force::Thermostat::getExternalWork));

  DEBUG_MSG("Adding wrapper for void SimTK::Force::Thermostat::setExternalWork(SimTK::State &, SimTK::Real) (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::Force::Thermostat::setExternalWork(SimTK::State &, SimTK::Real)
  // defined in simbody/internal/Force_Thermostat.h:269:10
  t29.method("setExternalWork", static_cast<void (SimTK::Force::Thermostat::*)(SimTK::State &, SimTK::Real)  const>(&SimTK::Force::Thermostat::setExternalWork));

  /* End of SimTK::Force::Thermostat class method wrappers
   **********************************************************************/


  /**********************************************************************/
  /* Wrappers for the methods of class SimTK::HuntCrossleyForce
   */


  DEBUG_MSG("Adding wrapper for void SimTK::HuntCrossleyForce::HuntCrossleyForce(SimTK::GeneralForceSubsystem &, SimTK::GeneralContactSubsystem &, SimTK::ContactSetIndex) (" __HERE__ ")");
  // defined in simbody/internal/HuntCrossleyForce.h:131:5
  t30.constructor<SimTK::GeneralForceSubsystem &, SimTK::GeneralContactSubsystem &, SimTK::ContactSetIndex>();

  DEBUG_MSG("Adding wrapper for void SimTK::HuntCrossleyForce::setBodyParameters(SimTK::ContactSurfaceIndex, SimTK::Real, SimTK::Real, SimTK::Real, SimTK::Real, SimTK::Real) (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::HuntCrossleyForce::setBodyParameters(SimTK::ContactSurfaceIndex, SimTK::Real, SimTK::Real, SimTK::Real, SimTK::Real, SimTK::Real)
  // defined in simbody/internal/HuntCrossleyForce.h:144:10
  t30.method("setBodyParameters", static_cast<void (SimTK::HuntCrossleyForce::*)(SimTK::ContactSurfaceIndex, SimTK::Real, SimTK::Real, SimTK::Real, SimTK::Real, SimTK::Real) >(&SimTK::HuntCrossleyForce::setBodyParameters));

  DEBUG_MSG("Adding wrapper for SimTK::Real SimTK::HuntCrossleyForce::getTransitionVelocity() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Real SimTK::HuntCrossleyForce::getTransitionVelocity()
  // defined in simbody/internal/HuntCrossleyForce.h:150:10
  t30.method("getTransitionVelocity", static_cast<SimTK::Real (SimTK::HuntCrossleyForce::*)()  const>(&SimTK::HuntCrossleyForce::getTransitionVelocity));

  DEBUG_MSG("Adding wrapper for void SimTK::HuntCrossleyForce::setTransitionVelocity(SimTK::Real) (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::HuntCrossleyForce::setTransitionVelocity(SimTK::Real)
  // defined in simbody/internal/HuntCrossleyForce.h:154:10
  t30.method("setTransitionVelocity", static_cast<void (SimTK::HuntCrossleyForce::*)(SimTK::Real) >(&SimTK::HuntCrossleyForce::setTransitionVelocity));

  DEBUG_MSG("Adding wrapper for SimTK::ContactSetIndex SimTK::HuntCrossleyForce::getContactSetIndex() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::ContactSetIndex SimTK::HuntCrossleyForce::getContactSetIndex()
  // defined in simbody/internal/HuntCrossleyForce.h:159:21
  t30.method("getContactSetIndex", static_cast<SimTK::ContactSetIndex (SimTK::HuntCrossleyForce::*)()  const>(&SimTK::HuntCrossleyForce::getContactSetIndex));

  /* End of SimTK::HuntCrossleyForce class method wrappers
   **********************************************************************/


  /**********************************************************************/
  /* Wrappers for the methods of class SimTK::CableSpring
   */


  DEBUG_MSG("Adding wrapper for void SimTK::CableSpring::CableSpring(SimTK::GeneralForceSubsystem &, const SimTK::CablePath &, SimTK::Real, SimTK::Real, SimTK::Real) (" __HERE__ ")");
  // defined in simbody/internal/CableSpring.h:115:1
  t33.constructor<SimTK::GeneralForceSubsystem &, const SimTK::CablePath &, SimTK::Real, SimTK::Real, SimTK::Real>();

  DEBUG_MSG("Adding wrapper for SimTK::CableSpring & SimTK::CableSpring::setDefaultStiffness(SimTK::Real) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::CableSpring & SimTK::CableSpring::setDefaultStiffness(SimTK::Real)
  // defined in simbody/internal/CableSpring.h:146:14
  t33.method("setDefaultStiffness", static_cast<SimTK::CableSpring & (SimTK::CableSpring::*)(SimTK::Real) >(&SimTK::CableSpring::setDefaultStiffness));

  DEBUG_MSG("Adding wrapper for SimTK::CableSpring & SimTK::CableSpring::setDefaultSlackLength(SimTK::Real) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::CableSpring & SimTK::CableSpring::setDefaultSlackLength(SimTK::Real)
  // defined in simbody/internal/CableSpring.h:152:14
  t33.method("setDefaultSlackLength", static_cast<SimTK::CableSpring & (SimTK::CableSpring::*)(SimTK::Real) >(&SimTK::CableSpring::setDefaultSlackLength));

  DEBUG_MSG("Adding wrapper for SimTK::CableSpring & SimTK::CableSpring::setDefaultDissipationCoef(SimTK::Real) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::CableSpring & SimTK::CableSpring::setDefaultDissipationCoef(SimTK::Real)
  // defined in simbody/internal/CableSpring.h:158:14
  t33.method("setDefaultDissipationCoef", static_cast<SimTK::CableSpring & (SimTK::CableSpring::*)(SimTK::Real) >(&SimTK::CableSpring::setDefaultDissipationCoef));

  DEBUG_MSG("Adding wrapper for SimTK::Real SimTK::CableSpring::getDefaultStiffness() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Real SimTK::CableSpring::getDefaultStiffness()
  // defined in simbody/internal/CableSpring.h:162:6
  t33.method("getDefaultStiffness", static_cast<SimTK::Real (SimTK::CableSpring::*)()  const>(&SimTK::CableSpring::getDefaultStiffness));

  DEBUG_MSG("Adding wrapper for SimTK::Real SimTK::CableSpring::getDefaultSlackLength() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Real SimTK::CableSpring::getDefaultSlackLength()
  // defined in simbody/internal/CableSpring.h:165:6
  t33.method("getDefaultSlackLength", static_cast<SimTK::Real (SimTK::CableSpring::*)()  const>(&SimTK::CableSpring::getDefaultSlackLength));

  DEBUG_MSG("Adding wrapper for SimTK::Real SimTK::CableSpring::getDefaultDissipationCoef() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Real SimTK::CableSpring::getDefaultDissipationCoef()
  // defined in simbody/internal/CableSpring.h:169:6
  t33.method("getDefaultDissipationCoef", static_cast<SimTK::Real (SimTK::CableSpring::*)()  const>(&SimTK::CableSpring::getDefaultDissipationCoef));

  DEBUG_MSG("Adding wrapper for const SimTK::CableSpring & SimTK::CableSpring::setStiffness(SimTK::State &, SimTK::Real) (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::CableSpring & SimTK::CableSpring::setStiffness(SimTK::State &, SimTK::Real)
  // defined in simbody/internal/CableSpring.h:199:20
  t33.method("setStiffness", static_cast<const SimTK::CableSpring & (SimTK::CableSpring::*)(SimTK::State &, SimTK::Real)  const>(&SimTK::CableSpring::setStiffness));

  DEBUG_MSG("Adding wrapper for const SimTK::CableSpring & SimTK::CableSpring::setSlackLength(SimTK::State &, SimTK::Real) (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::CableSpring & SimTK::CableSpring::setSlackLength(SimTK::State &, SimTK::Real)
  // defined in simbody/internal/CableSpring.h:208:20
  t33.method("setSlackLength", static_cast<const SimTK::CableSpring & (SimTK::CableSpring::*)(SimTK::State &, SimTK::Real)  const>(&SimTK::CableSpring::setSlackLength));

  DEBUG_MSG("Adding wrapper for const SimTK::CableSpring & SimTK::CableSpring::setDissipationCoef(SimTK::State &, SimTK::Real) (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::CableSpring & SimTK::CableSpring::setDissipationCoef(SimTK::State &, SimTK::Real)
  // defined in simbody/internal/CableSpring.h:217:20
  t33.method("setDissipationCoef", static_cast<const SimTK::CableSpring & (SimTK::CableSpring::*)(SimTK::State &, SimTK::Real)  const>(&SimTK::CableSpring::setDissipationCoef));

  DEBUG_MSG("Adding wrapper for SimTK::Real SimTK::CableSpring::getStiffness(const SimTK::State &) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Real SimTK::CableSpring::getStiffness(const SimTK::State &)
  // defined in simbody/internal/CableSpring.h:225:6
  t33.method("getStiffness", static_cast<SimTK::Real (SimTK::CableSpring::*)(const SimTK::State &)  const>(&SimTK::CableSpring::getStiffness));

  DEBUG_MSG("Adding wrapper for SimTK::Real SimTK::CableSpring::getSlackLength(const SimTK::State &) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Real SimTK::CableSpring::getSlackLength(const SimTK::State &)
  // defined in simbody/internal/CableSpring.h:231:6
  t33.method("getSlackLength", static_cast<SimTK::Real (SimTK::CableSpring::*)(const SimTK::State &)  const>(&SimTK::CableSpring::getSlackLength));

  DEBUG_MSG("Adding wrapper for SimTK::Real SimTK::CableSpring::getDissipationCoef(const SimTK::State &) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Real SimTK::CableSpring::getDissipationCoef(const SimTK::State &)
  // defined in simbody/internal/CableSpring.h:239:6
  t33.method("getDissipationCoef", static_cast<SimTK::Real (SimTK::CableSpring::*)(const SimTK::State &)  const>(&SimTK::CableSpring::getDissipationCoef));

  DEBUG_MSG("Adding wrapper for SimTK::Real SimTK::CableSpring::getLength(const SimTK::State &) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Real SimTK::CableSpring::getLength(const SimTK::State &)
  // defined in simbody/internal/CableSpring.h:262:6
  t33.method("getLength", static_cast<SimTK::Real (SimTK::CableSpring::*)(const SimTK::State &)  const>(&SimTK::CableSpring::getLength));

  DEBUG_MSG("Adding wrapper for SimTK::Real SimTK::CableSpring::getLengthDot(const SimTK::State &) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Real SimTK::CableSpring::getLengthDot(const SimTK::State &)
  // defined in simbody/internal/CableSpring.h:286:6
  t33.method("getLengthDot", static_cast<SimTK::Real (SimTK::CableSpring::*)(const SimTK::State &)  const>(&SimTK::CableSpring::getLengthDot));

  DEBUG_MSG("Adding wrapper for SimTK::Real SimTK::CableSpring::getTension(const SimTK::State &) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Real SimTK::CableSpring::getTension(const SimTK::State &)
  // defined in simbody/internal/CableSpring.h:311:6
  t33.method("getTension", static_cast<SimTK::Real (SimTK::CableSpring::*)(const SimTK::State &)  const>(&SimTK::CableSpring::getTension));

  DEBUG_MSG("Adding wrapper for SimTK::Real SimTK::CableSpring::getPotentialEnergy(const SimTK::State &) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Real SimTK::CableSpring::getPotentialEnergy(const SimTK::State &)
  // defined in simbody/internal/CableSpring.h:330:6
  t33.method("getPotentialEnergy", static_cast<SimTK::Real (SimTK::CableSpring::*)(const SimTK::State &)  const>(&SimTK::CableSpring::getPotentialEnergy));

  DEBUG_MSG("Adding wrapper for SimTK::Real SimTK::CableSpring::getPowerDissipation(const SimTK::State &) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Real SimTK::CableSpring::getPowerDissipation(const SimTK::State &)
  // defined in simbody/internal/CableSpring.h:342:6
  t33.method("getPowerDissipation", static_cast<SimTK::Real (SimTK::CableSpring::*)(const SimTK::State &)  const>(&SimTK::CableSpring::getPowerDissipation));

  DEBUG_MSG("Adding wrapper for SimTK::Real SimTK::CableSpring::getDissipatedEnergy(const SimTK::State &) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Real SimTK::CableSpring::getDissipatedEnergy(const SimTK::State &)
  // defined in simbody/internal/CableSpring.h:356:6
  t33.method("getDissipatedEnergy", static_cast<SimTK::Real (SimTK::CableSpring::*)(const SimTK::State &)  const>(&SimTK::CableSpring::getDissipatedEnergy));

  DEBUG_MSG("Adding wrapper for void SimTK::CableSpring::setDissipatedEnergy(SimTK::State &, SimTK::Real) (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::CableSpring::setDissipatedEnergy(SimTK::State &, SimTK::Real)
  // defined in simbody/internal/CableSpring.h:370:6
  t33.method("setDissipatedEnergy", static_cast<void (SimTK::CableSpring::*)(SimTK::State &, SimTK::Real)  const>(&SimTK::CableSpring::setDissipatedEnergy));

  DEBUG_MSG("Adding wrapper for const SimTK::CablePath & SimTK::CableSpring::getCablePath() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::CablePath & SimTK::CableSpring::getCablePath()
  // defined in simbody/internal/CableSpring.h:379:18
  t33.method("getCablePath", static_cast<const SimTK::CablePath & (SimTK::CableSpring::*)()  const>(&SimTK::CableSpring::getCablePath));

  /* End of SimTK::CableSpring class method wrappers
   **********************************************************************/


  /**********************************************************************/
  /* Wrappers for the methods of class SimTK::ElasticFoundationForce
   */


  DEBUG_MSG("Adding wrapper for void SimTK::ElasticFoundationForce::ElasticFoundationForce(SimTK::GeneralForceSubsystem &, SimTK::GeneralContactSubsystem &, SimTK::ContactSetIndex) (" __HERE__ ")");
  // defined in simbody/internal/ElasticFoundationForce.h:105:5
  t35.constructor<SimTK::GeneralForceSubsystem &, SimTK::GeneralContactSubsystem &, SimTK::ContactSetIndex>();

  DEBUG_MSG("Adding wrapper for void SimTK::ElasticFoundationForce::setBodyParameters(SimTK::ContactSurfaceIndex, SimTK::Real, SimTK::Real, SimTK::Real, SimTK::Real, SimTK::Real) (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::ElasticFoundationForce::setBodyParameters(SimTK::ContactSurfaceIndex, SimTK::Real, SimTK::Real, SimTK::Real, SimTK::Real, SimTK::Real)
  // defined in simbody/internal/ElasticFoundationForce.h:117:10
  t35.method("setBodyParameters", static_cast<void (SimTK::ElasticFoundationForce::*)(SimTK::ContactSurfaceIndex, SimTK::Real, SimTK::Real, SimTK::Real, SimTK::Real, SimTK::Real) >(&SimTK::ElasticFoundationForce::setBodyParameters));

  DEBUG_MSG("Adding wrapper for SimTK::Real SimTK::ElasticFoundationForce::getTransitionVelocity() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Real SimTK::ElasticFoundationForce::getTransitionVelocity()
  // defined in simbody/internal/ElasticFoundationForce.h:123:10
  t35.method("getTransitionVelocity", static_cast<SimTK::Real (SimTK::ElasticFoundationForce::*)()  const>(&SimTK::ElasticFoundationForce::getTransitionVelocity));

  DEBUG_MSG("Adding wrapper for void SimTK::ElasticFoundationForce::setTransitionVelocity(SimTK::Real) (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::ElasticFoundationForce::setTransitionVelocity(SimTK::Real)
  // defined in simbody/internal/ElasticFoundationForce.h:127:10
  t35.method("setTransitionVelocity", static_cast<void (SimTK::ElasticFoundationForce::*)(SimTK::Real) >(&SimTK::ElasticFoundationForce::setTransitionVelocity));

  /* End of SimTK::ElasticFoundationForce class method wrappers
   **********************************************************************/

  DEBUG_MSG("End of wrapper definitions");

}
}
