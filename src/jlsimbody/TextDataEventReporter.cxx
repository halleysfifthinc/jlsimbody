// this file was auto-generated by wrapit v1.3.3
#include "jlsimbody/common.h"

#include "jlsimbody/TextDataEventReporter.h"

namespace jlsimbody {

class TextDataEventReporter_JuliaRealUserFunction;
class TextDataEventReporter_JuliaVectorUserFunction;

std::shared_ptr<Wrapper> newTextDataEventReporter_JuliaRealUserFunction(jlcxx::Module&);
std::shared_ptr<Wrapper> newTextDataEventReporter_JuliaVectorUserFunction(jlcxx::Module&);

jl_module_t* JuliaRealUserFunction::m_simbody_mod = nullptr;
jl_module_t* JuliaVectorUserFunction::m_simbody_mod = nullptr;

JuliaRealUserFunction::JuliaRealUserFunction(jl_function_t* f) : m_f(f) {
  jlcxx::protect_from_gc(m_f);
}

JuliaRealUserFunction::~JuliaRealUserFunction() {
  jlcxx::unprotect_from_gc(m_f);
}

SimTK::Real JuliaRealUserFunction::evaluate(const SimTK::System & system, const SimTK::State & state) {
  using call_julia_func_t = double (*) (jl_value_t*, const void*, const void*);
  static call_julia_func_t call_func = reinterpret_cast<call_julia_func_t>(
    jlcxx::unbox<void*>(
      jlcxx::JuliaFunction(jl_get_function(m_simbody_mod, "get_julia_userfunction_real"))()
    ));
  double result_var = call_func(m_f, &system, &state);
  return result_var;
}

JuliaVectorUserFunction::JuliaVectorUserFunction(jl_function_t* f) : m_f(f) {
  jlcxx::protect_from_gc(m_f);
}

JuliaVectorUserFunction::~JuliaVectorUserFunction() {
  jlcxx::unprotect_from_gc(m_f);
}

SimTK::Vector JuliaVectorUserFunction::evaluate(const SimTK::System & system, const SimTK::State & state) {
  using call_julia_func_t = void* (*) (jl_value_t*, const void*, const void*);
  static call_julia_func_t call_func = reinterpret_cast<call_julia_func_t>(
    jlcxx::unbox<void*>(
      jlcxx::JuliaFunction(jl_get_function(m_simbody_mod, "get_julia_userfunction_vector"))()
    ));
  SimTK::Vector result_var = *reinterpret_cast<SimTK::Vector*>(call_func(m_f, &system, &state));
  return result_var;
}

// Class generating the wrapper for type SimTK::TextDataEventReporter
struct JlSimTK_TextDataEventReporter: public Wrapper {

  JlSimTK_TextDataEventReporter(jlcxx::Module& module): Wrapper(module){
    DEBUG_MSG("Adding wrapper for type SimTK::TextDataEventReporter (" __HERE__ ")");
    // defined in simbody/internal/TextDataEventReporter.h:41:28
    jlcxx::TypeWrapper<SimTK::TextDataEventReporter>  t = module.add_type<SimTK::TextDataEventReporter>("TextDataEventReporter",
      jlcxx::julia_base_type<SimTK::PeriodicEventHandler>());
    CLEAR_DEBUG_MSG();

    type_ = std::unique_ptr<jlcxx::TypeWrapper<SimTK::TextDataEventReporter>>(new jlcxx::TypeWrapper<SimTK::TextDataEventReporter>(module, t));
  }

  void add_methods() const{
    auto& t = *type_;

    DEBUG_MSG("Adding wrapper for void SimTK::TextDataEventReporter::TextDataEventReporter(const SimTK::System &, SimTK::TextDataEventReporter::UserFunction<SimTK::Real> *, SimTK::Real) (" __HERE__ ")");
    // defined in simbody/internal/TextDataEventReporter.h:57:5
    t.constructor([] (const SimTK::System & system, jlsimbody::JuliaRealUserFunction * userFunction, SimTK::Real reportInterval) -> SimTK::TextDataEventReporter* {
      return new SimTK::TextDataEventReporter(system, userFunction, reportInterval);
    });
    CLEAR_DEBUG_MSG();


    DEBUG_MSG("Adding wrapper for void SimTK::TextDataEventReporter::TextDataEventReporter(const SimTK::System &, SimTK::TextDataEventReporter::UserFunction<SimTK::Vector> *, SimTK::Real) (" __HERE__ ")");
    // defined in simbody/internal/TextDataEventReporter.h:64:5
    t.constructor([] (const SimTK::System & system, jlsimbody::JuliaVectorUserFunction * userFunction, SimTK::Real reportInterval) -> SimTK::TextDataEventReporter* {
      return new SimTK::TextDataEventReporter(system, userFunction, reportInterval);
    });
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("Adding wrapper for void SimTK::TextDataEventReporter::handleEvent(const SimTK::State &) (" __HERE__ ")");
    // defined in simbody/internal/TextDataEventReporter.h:72:10
    t.method("handleEvent", static_cast<void (SimTK::TextDataEventReporter::*)(const SimTK::State &)  const>(&SimTK::TextDataEventReporter::handleEvent));
    CLEAR_DEBUG_MSG();
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<SimTK::TextDataEventReporter>> type_;
};
std::shared_ptr<Wrapper> newJlSimTK_TextDataEventReporter(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlSimTK_TextDataEventReporter(module));
}

void define_simbody_TextDataEventReporter_JuliaUserFunctions(jlcxx::Module& module){

  std::vector<std::shared_ptr<Wrapper>> wrappers = {
    std::shared_ptr<Wrapper>(newTextDataEventReporter_JuliaRealUserFunction(module)),
    std::shared_ptr<Wrapper>(newTextDataEventReporter_JuliaVectorUserFunction(module)),
    std::shared_ptr<Wrapper>(newJlSimTK_TextDataEventReporter(module))
  };

  for(const auto& w: wrappers) w->add_methods();

}

}
