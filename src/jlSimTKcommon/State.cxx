// this file was auto-generated by wrapit v0.1.0-61-g71d8603-dirty
#include <type_traits>
#include "jlcxx/jlcxx.hpp"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

#include "jlSimTKcommon/State.h"
#include "jlSimTKcommon/Array.h"

#ifdef VERBOSE_IMPORT
#  define DEBUG_MSG(a) std::cerr << a << "\n"
#else
#  define DEBUG_MSG(a)
#endif
#define __HERE__  __FILE__ ":" QUOTE2(__LINE__)
#define QUOTE(arg) #arg
#define QUOTE2(arg) QUOTE(arg)

namespace jlsimbody {

void define_SimTKcommon_State(jlcxx::Module& types, const ArrayWrapper& array_wrapper){

  DEBUG_MSG("Adding wrapper for enum SimTK::Event::Cause::Num (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:128:14
  types.add_bits<SimTK::Event::Cause::Num>("SimTK!Event!Cause!Num", jlcxx::julia_type("CppEnum"));
  types.set_const("SimTK!Event!Cause!Initialization", SimTK::Event::Cause::Initialization);
  types.set_const("SimTK!Event!Cause!Triggered", SimTK::Event::Cause::Triggered);
  types.set_const("SimTK!Event!Cause!Scheduled", SimTK::Event::Cause::Scheduled);
  types.set_const("SimTK!Event!Cause!TimeAdvanced", SimTK::Event::Cause::TimeAdvanced);
  types.set_const("SimTK!Event!Cause!Signaled", SimTK::Event::Cause::Signaled);
  types.set_const("SimTK!Event!Cause!Termination", SimTK::Event::Cause::Termination);
  types.set_const("SimTK!Event!Cause!Invalid", SimTK::Event::Cause::Invalid);

  DEBUG_MSG("Adding wrapper for enum SimTK::Event::Trigger (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:158:10
  types.add_bits<SimTK::Event::Trigger>("SimTK!Event!Trigger", jlcxx::julia_type("CppEnum"));
  types.set_const("SimTK!Event!NoEventTrigger", SimTK::Event::NoEventTrigger);
  types.set_const("SimTK!Event!PositiveToNegative", SimTK::Event::PositiveToNegative);
  types.set_const("SimTK!Event!NegativeToPositive", SimTK::Event::NegativeToPositive);
  types.set_const("SimTK!Event!Falling", SimTK::Event::Falling);
  types.set_const("SimTK!Event!Rising", SimTK::Event::Rising);
  types.set_const("SimTK!Event!AnySignChange", SimTK::Event::AnySignChange);

  DEBUG_MSG("Adding wrapper for enum SimTK::HandleEventsOptions::Option (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:271:10
  types.add_bits<SimTK::HandleEventsOptions::Option>("SimTK!HandleEventsOptions!Option", jlcxx::julia_type("CppEnum"));
  types.set_const("SimTK!HandleEventsOptions!None", SimTK::HandleEventsOptions::None);
  types.set_const("SimTK!HandleEventsOptions!DontThrow", SimTK::HandleEventsOptions::DontThrow);
  types.set_const("SimTK!HandleEventsOptions!UseInfinityNorm", SimTK::HandleEventsOptions::UseInfinityNorm);

  DEBUG_MSG("Adding wrapper for enum SimTK::HandleEventsResults::Status (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:349:10
  types.add_bits<SimTK::HandleEventsResults::Status>("SimTK!HandleEventsResults!Status", jlcxx::julia_type("CppEnum"));
  types.set_const("SimTK!HandleEventsResults!Invalid", SimTK::HandleEventsResults::Invalid);
  types.set_const("SimTK!HandleEventsResults!Succeeded", SimTK::HandleEventsResults::Succeeded);
  types.set_const("SimTK!HandleEventsResults!ShouldTerminate", SimTK::HandleEventsResults::ShouldTerminate);
  types.set_const("SimTK!HandleEventsResults!Failed", SimTK::HandleEventsResults::Failed);

  DEBUG_MSG("Adding wrapper for type SimTK::EventId (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:32
  auto t0 = types.add_type<SimTK::EventId>("SimTK!EventId");
  t0.template constructor<>();

  DEBUG_MSG("Adding wrapper for type SimTK::SystemEventTriggerIndex (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:32
  auto t1 = types.add_type<SimTK::SystemEventTriggerIndex>("SimTK!SystemEventTriggerIndex");
  t1.template constructor<>();

  DEBUG_MSG("Adding wrapper for type SimTK::SystemEventTriggerByStageIndex (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:32
  auto t2 = types.add_type<SimTK::SystemEventTriggerByStageIndex>("SimTK!SystemEventTriggerByStageIndex");
  t2.template constructor<>();

  DEBUG_MSG("Adding wrapper for type SimTK::EventTriggerByStageIndex (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:32
  auto t3 = types.add_type<SimTK::EventTriggerByStageIndex>("SimTK!EventTriggerByStageIndex");
  t3.template constructor<>();

  DEBUG_MSG("Adding wrapper for type SimTK::Event (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:76:7
  auto t4 = types.add_type<SimTK::Event>("SimTK!Event");
  t4.template constructor<>();

  DEBUG_MSG("Adding wrapper for type SimTK::Event::Cause (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:126:11
  auto t5 = types.add_type<SimTK::Event::Cause>("SimTK!Event!Cause");
  t5.template constructor<>();

  DEBUG_MSG("Adding wrapper for type SimTK::EventTriggerInfo (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:209:32
  auto t8 = types.add_type<SimTK::EventTriggerInfo>("SimTK!EventTriggerInfo");
  t8.template constructor<>();

  DEBUG_MSG("Adding wrapper for type SimTK::HandleEventsOptions (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:269:7
  auto t9 = types.add_type<SimTK::HandleEventsOptions>("SimTK!HandleEventsOptions");
  t9.template constructor<>();

  DEBUG_MSG("Adding wrapper for type SimTK::HandleEventsResults (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:345:7
  auto t11 = types.add_type<SimTK::HandleEventsResults>("SimTK!HandleEventsResults");
  t11.template constructor<>();

  DEBUG_MSG("Adding wrapper for type SimTK::SubsystemIndex (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:32
  auto t15 = types.add_type<SimTK::SubsystemIndex>("SimTK!SubsystemIndex");
  t15.template constructor<>();

  DEBUG_MSG("Adding wrapper for type SimTK::SystemYIndex (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:32
  auto t16 = types.add_type<SimTK::SystemYIndex>("SimTK!SystemYIndex");
  t16.template constructor<>();

  DEBUG_MSG("Adding wrapper for type SimTK::SystemQIndex (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:32
  auto t17 = types.add_type<SimTK::SystemQIndex>("SimTK!SystemQIndex");
  t17.template constructor<>();

  DEBUG_MSG("Adding wrapper for type SimTK::QIndex (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:32
  auto t18 = types.add_type<SimTK::QIndex>("SimTK!QIndex");
  t18.template constructor<>();

  DEBUG_MSG("Adding wrapper for type SimTK::SystemUIndex (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:32
  auto t19 = types.add_type<SimTK::SystemUIndex>("SimTK!SystemUIndex");
  t19.template constructor<>();

  DEBUG_MSG("Adding wrapper for type SimTK::UIndex (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:32
  auto t20 = types.add_type<SimTK::UIndex>("SimTK!UIndex");
  t20.template constructor<>();

  DEBUG_MSG("Adding wrapper for type SimTK::SystemZIndex (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:32
  auto t21 = types.add_type<SimTK::SystemZIndex>("SimTK!SystemZIndex");
  t21.template constructor<>();

  DEBUG_MSG("Adding wrapper for type SimTK::ZIndex (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:32
  auto t22 = types.add_type<SimTK::ZIndex>("SimTK!ZIndex");
  t22.template constructor<>();

  DEBUG_MSG("Adding wrapper for type SimTK::DiscreteVariableIndex (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:32
  auto t23 = types.add_type<SimTK::DiscreteVariableIndex>("SimTK!DiscreteVariableIndex");
  t23.template constructor<>();

  DEBUG_MSG("Adding wrapper for type SimTK::CacheEntryIndex (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:32
  auto t24 = types.add_type<SimTK::CacheEntryIndex>("SimTK!CacheEntryIndex");
  t24.template constructor<>();

  DEBUG_MSG("Adding wrapper for type SimTK::SystemYErrIndex (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:32
  auto t25 = types.add_type<SimTK::SystemYErrIndex>("SimTK!SystemYErrIndex");
  t25.template constructor<>();

  DEBUG_MSG("Adding wrapper for type SimTK::SystemQErrIndex (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:32
  auto t26 = types.add_type<SimTK::SystemQErrIndex>("SimTK!SystemQErrIndex");
  t26.template constructor<>();

  DEBUG_MSG("Adding wrapper for type SimTK::QErrIndex (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:32
  auto t27 = types.add_type<SimTK::QErrIndex>("SimTK!QErrIndex");
  t27.template constructor<>();

  DEBUG_MSG("Adding wrapper for type SimTK::SystemUErrIndex (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:32
  auto t28 = types.add_type<SimTK::SystemUErrIndex>("SimTK!SystemUErrIndex");
  t28.template constructor<>();

  DEBUG_MSG("Adding wrapper for type SimTK::UErrIndex (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:32
  auto t29 = types.add_type<SimTK::UErrIndex>("SimTK!UErrIndex");
  t29.template constructor<>();

  DEBUG_MSG("Adding wrapper for type SimTK::SystemUDotErrIndex (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:32
  auto t30 = types.add_type<SimTK::SystemUDotErrIndex>("SimTK!SystemUDotErrIndex");
  t30.template constructor<>();

  DEBUG_MSG("Adding wrapper for type SimTK::UDotErrIndex (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:32
  auto t31 = types.add_type<SimTK::UDotErrIndex>("SimTK!UDotErrIndex");
  t31.template constructor<>();

  DEBUG_MSG("Adding wrapper for type SimTK::SystemMultiplierIndex (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:32
  auto t32 = types.add_type<SimTK::SystemMultiplierIndex>("SimTK!SystemMultiplierIndex");
  t32.template constructor<>();

  DEBUG_MSG("Adding wrapper for type SimTK::MultiplierIndex (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:32
  auto t33 = types.add_type<SimTK::MultiplierIndex>("SimTK!MultiplierIndex");
  t33.template constructor<>();

  DEBUG_MSG("Adding wrapper for type SimTK::State (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:280:32
  auto t34 = types.add_type<SimTK::State>("SimTK!State");
  t34.template constructor<>();

  DEBUG_MSG("Adding wrapper for type SimTK::AbstractValue (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Value.h:49:7
  types.add_type<SimTK::AbstractValue>("SimTK!AbstractValue");

  DEBUG_MSG("Adding wrapper for type SimTK::ListOfDependents (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/StateImpl.h:62:7
  auto t36 = types.add_type<SimTK::ListOfDependents>("SimTK!ListOfDependents");
  t36.template constructor<>();

  DEBUG_MSG("Adding wrapper for type SimTK::DiscreteVarInfo (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/StateImpl.h:155:7
  auto t37 = types.add_type<SimTK::DiscreteVarInfo>("SimTK!DiscreteVarInfo");
  t37.template constructor<>();

  DEBUG_MSG("Adding wrapper for type SimTK::PerSubsystemInfo (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/StateImpl.h:611:32
  types.add_type<SimTK::PerSubsystemInfo>("SimTK!PerSubsystemInfo");

  /**********************************************************************/
  /* Wrappers for the methods of class SimTK::EventId
   */


  DEBUG_MSG("Adding wrapper for void SimTK::EventId::EventId(int) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:32
  t0.constructor<int>();


  DEBUG_MSG("Adding wrapper for void SimTK::EventId::EventId(long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:32
  t0.constructor<long>();


  DEBUG_MSG("Adding wrapper for void SimTK::EventId::EventId(long long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:32
  t0.constructor<long long>();


  DEBUG_MSG("Adding wrapper for void SimTK::EventId::EventId(unsigned int) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:32
  t0.constructor<unsigned int>();


  DEBUG_MSG("Adding wrapper for void SimTK::EventId::EventId(unsigned long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:32
  t0.constructor<unsigned long>();


  DEBUG_MSG("Adding wrapper for void SimTK::EventId::EventId(unsigned long long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:32
  t0.constructor<unsigned long long>();

  DEBUG_MSG("Adding wrapper for bool SimTK::EventId::isValid() (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventId::isValid()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("isValid", static_cast<bool (SimTK::EventId::*)()  const>(&SimTK::EventId::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventId::isValidExtended() (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventId::isValidExtended()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("isValidExtended", static_cast<bool (SimTK::EventId::*)()  const>(&SimTK::EventId::isValidExtended));

  DEBUG_MSG("Adding wrapper for void SimTK::EventId::invalidate() (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::EventId::invalidate()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("invalidate", static_cast<void (SimTK::EventId::*)() >(&SimTK::EventId::invalidate));

  DEBUG_MSG("Adding wrapper for void SimTK::EventId::clear() (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::EventId::clear()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("clear", static_cast<void (SimTK::EventId::*)() >(&SimTK::EventId::clear));
  types.set_override_module(jl_base_module);

  DEBUG_MSG("Adding wrapper for bool SimTK::EventId::operator==(const SimTK::EventId &) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventId::operator==(const SimTK::EventId &)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("==", static_cast<bool (SimTK::EventId::*)(const SimTK::EventId &)  const>(&SimTK::EventId::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventId::operator==(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventId::operator==(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("==", static_cast<bool (SimTK::EventId::*)(int)  const>(&SimTK::EventId::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventId::operator==(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventId::operator==(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("==", static_cast<bool (SimTK::EventId::*)(short)  const>(&SimTK::EventId::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventId::operator==(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventId::operator==(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("==", static_cast<bool (SimTK::EventId::*)(long)  const>(&SimTK::EventId::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventId::operator==(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventId::operator==(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("==", static_cast<bool (SimTK::EventId::*)(long long)  const>(&SimTK::EventId::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventId::operator==(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventId::operator==(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("==", static_cast<bool (SimTK::EventId::*)(unsigned int)  const>(&SimTK::EventId::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventId::operator==(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventId::operator==(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("==", static_cast<bool (SimTK::EventId::*)(unsigned short)  const>(&SimTK::EventId::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventId::operator==(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventId::operator==(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("==", static_cast<bool (SimTK::EventId::*)(unsigned long)  const>(&SimTK::EventId::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventId::operator==(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventId::operator==(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("==", static_cast<bool (SimTK::EventId::*)(unsigned long long)  const>(&SimTK::EventId::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventId::operator!=(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventId::operator!=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("!=", static_cast<bool (SimTK::EventId::*)(int)  const>(&SimTK::EventId::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventId::operator!=(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventId::operator!=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("!=", static_cast<bool (SimTK::EventId::*)(short)  const>(&SimTK::EventId::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventId::operator!=(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventId::operator!=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("!=", static_cast<bool (SimTK::EventId::*)(long)  const>(&SimTK::EventId::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventId::operator!=(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventId::operator!=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("!=", static_cast<bool (SimTK::EventId::*)(long long)  const>(&SimTK::EventId::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventId::operator!=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventId::operator!=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("!=", static_cast<bool (SimTK::EventId::*)(unsigned int)  const>(&SimTK::EventId::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventId::operator!=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventId::operator!=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("!=", static_cast<bool (SimTK::EventId::*)(unsigned long)  const>(&SimTK::EventId::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventId::operator!=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventId::operator!=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("!=", static_cast<bool (SimTK::EventId::*)(unsigned long long)  const>(&SimTK::EventId::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventId::operator<(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventId::operator<(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("<", static_cast<bool (SimTK::EventId::*)(int)  const>(&SimTK::EventId::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventId::operator<(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventId::operator<(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("<", static_cast<bool (SimTK::EventId::*)(short)  const>(&SimTK::EventId::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventId::operator<(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventId::operator<(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("<", static_cast<bool (SimTK::EventId::*)(long)  const>(&SimTK::EventId::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventId::operator<(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventId::operator<(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("<", static_cast<bool (SimTK::EventId::*)(long long)  const>(&SimTK::EventId::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventId::operator<(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventId::operator<(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("<", static_cast<bool (SimTK::EventId::*)(unsigned int)  const>(&SimTK::EventId::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventId::operator<(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventId::operator<(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("<", static_cast<bool (SimTK::EventId::*)(unsigned short)  const>(&SimTK::EventId::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventId::operator<(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventId::operator<(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("<", static_cast<bool (SimTK::EventId::*)(unsigned long)  const>(&SimTK::EventId::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventId::operator<(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventId::operator<(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("<", static_cast<bool (SimTK::EventId::*)(unsigned long long)  const>(&SimTK::EventId::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventId::operator>=(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventId::operator>=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method(">=", static_cast<bool (SimTK::EventId::*)(int)  const>(&SimTK::EventId::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventId::operator>=(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventId::operator>=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method(">=", static_cast<bool (SimTK::EventId::*)(short)  const>(&SimTK::EventId::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventId::operator>=(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventId::operator>=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method(">=", static_cast<bool (SimTK::EventId::*)(long)  const>(&SimTK::EventId::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventId::operator>=(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventId::operator>=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method(">=", static_cast<bool (SimTK::EventId::*)(long long)  const>(&SimTK::EventId::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventId::operator>=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventId::operator>=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method(">=", static_cast<bool (SimTK::EventId::*)(unsigned int)  const>(&SimTK::EventId::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventId::operator>=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventId::operator>=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method(">=", static_cast<bool (SimTK::EventId::*)(unsigned short)  const>(&SimTK::EventId::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventId::operator>=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventId::operator>=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method(">=", static_cast<bool (SimTK::EventId::*)(unsigned long)  const>(&SimTK::EventId::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventId::operator>=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventId::operator>=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method(">=", static_cast<bool (SimTK::EventId::*)(unsigned long long)  const>(&SimTK::EventId::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventId::operator>(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventId::operator>(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method(">", static_cast<bool (SimTK::EventId::*)(int)  const>(&SimTK::EventId::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventId::operator>(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventId::operator>(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method(">", static_cast<bool (SimTK::EventId::*)(short)  const>(&SimTK::EventId::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventId::operator>(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventId::operator>(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method(">", static_cast<bool (SimTK::EventId::*)(long)  const>(&SimTK::EventId::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventId::operator>(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventId::operator>(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method(">", static_cast<bool (SimTK::EventId::*)(long long)  const>(&SimTK::EventId::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventId::operator>(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventId::operator>(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method(">", static_cast<bool (SimTK::EventId::*)(unsigned int)  const>(&SimTK::EventId::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventId::operator>(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventId::operator>(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method(">", static_cast<bool (SimTK::EventId::*)(unsigned short)  const>(&SimTK::EventId::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventId::operator>(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventId::operator>(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method(">", static_cast<bool (SimTK::EventId::*)(unsigned long)  const>(&SimTK::EventId::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventId::operator>(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventId::operator>(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method(">", static_cast<bool (SimTK::EventId::*)(unsigned long long)  const>(&SimTK::EventId::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventId::operator<=(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventId::operator<=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("<=", static_cast<bool (SimTK::EventId::*)(int)  const>(&SimTK::EventId::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventId::operator<=(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventId::operator<=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("<=", static_cast<bool (SimTK::EventId::*)(short)  const>(&SimTK::EventId::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventId::operator<=(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventId::operator<=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("<=", static_cast<bool (SimTK::EventId::*)(long)  const>(&SimTK::EventId::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventId::operator<=(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventId::operator<=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("<=", static_cast<bool (SimTK::EventId::*)(long long)  const>(&SimTK::EventId::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventId::operator<=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventId::operator<=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("<=", static_cast<bool (SimTK::EventId::*)(unsigned int)  const>(&SimTK::EventId::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventId::operator<=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventId::operator<=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("<=", static_cast<bool (SimTK::EventId::*)(unsigned short)  const>(&SimTK::EventId::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventId::operator<=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventId::operator<=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("<=", static_cast<bool (SimTK::EventId::*)(unsigned long)  const>(&SimTK::EventId::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventId::operator<=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventId::operator<=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("<=", static_cast<bool (SimTK::EventId::*)(unsigned long long)  const>(&SimTK::EventId::operator<=));
  types.unset_override_module();

  DEBUG_MSG("Adding wrapper for const SimTK::EventId & SimTK::EventId::operator++() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::EventId & SimTK::EventId::operator++()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("inc!", static_cast<const SimTK::EventId & (SimTK::EventId::*)() >(&SimTK::EventId::operator++));

  DEBUG_MSG("Adding wrapper for SimTK::EventId SimTK::EventId::operator++(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::EventId SimTK::EventId::operator++(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("inc!", static_cast<SimTK::EventId (SimTK::EventId::*)(int) >(&SimTK::EventId::operator++));

  DEBUG_MSG("Adding wrapper for const SimTK::EventId & SimTK::EventId::operator--() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::EventId & SimTK::EventId::operator--()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("dec!", static_cast<const SimTK::EventId & (SimTK::EventId::*)() >(&SimTK::EventId::operator--));

  DEBUG_MSG("Adding wrapper for SimTK::EventId SimTK::EventId::operator--(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::EventId SimTK::EventId::operator--(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("dec!", static_cast<SimTK::EventId (SimTK::EventId::*)(int) >(&SimTK::EventId::operator--));

  DEBUG_MSG("Adding wrapper for SimTK::EventId SimTK::EventId::next() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::EventId SimTK::EventId::next()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("next", static_cast<SimTK::EventId (SimTK::EventId::*)()  const>(&SimTK::EventId::next));

  DEBUG_MSG("Adding wrapper for SimTK::EventId SimTK::EventId::prev() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::EventId SimTK::EventId::prev()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("prev", static_cast<SimTK::EventId (SimTK::EventId::*)()  const>(&SimTK::EventId::prev));

  DEBUG_MSG("Adding wrapper for SimTK::EventId & SimTK::EventId::operator+=(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::EventId & SimTK::EventId::operator+=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("add!", static_cast<SimTK::EventId & (SimTK::EventId::*)(int) >(&SimTK::EventId::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::EventId & SimTK::EventId::operator-=(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::EventId & SimTK::EventId::operator-=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("sub!", static_cast<SimTK::EventId & (SimTK::EventId::*)(int) >(&SimTK::EventId::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::EventId & SimTK::EventId::operator+=(short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::EventId & SimTK::EventId::operator+=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("add!", static_cast<SimTK::EventId & (SimTK::EventId::*)(short) >(&SimTK::EventId::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::EventId & SimTK::EventId::operator-=(short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::EventId & SimTK::EventId::operator-=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("sub!", static_cast<SimTK::EventId & (SimTK::EventId::*)(short) >(&SimTK::EventId::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::EventId & SimTK::EventId::operator+=(long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::EventId & SimTK::EventId::operator+=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("add!", static_cast<SimTK::EventId & (SimTK::EventId::*)(long) >(&SimTK::EventId::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::EventId & SimTK::EventId::operator-=(long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::EventId & SimTK::EventId::operator-=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("sub!", static_cast<SimTK::EventId & (SimTK::EventId::*)(long) >(&SimTK::EventId::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::EventId & SimTK::EventId::operator+=(long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::EventId & SimTK::EventId::operator+=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("add!", static_cast<SimTK::EventId & (SimTK::EventId::*)(long long) >(&SimTK::EventId::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::EventId & SimTK::EventId::operator-=(long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::EventId & SimTK::EventId::operator-=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("sub!", static_cast<SimTK::EventId & (SimTK::EventId::*)(long long) >(&SimTK::EventId::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::EventId & SimTK::EventId::operator+=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::EventId & SimTK::EventId::operator+=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("add!", static_cast<SimTK::EventId & (SimTK::EventId::*)(unsigned int) >(&SimTK::EventId::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::EventId & SimTK::EventId::operator-=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::EventId & SimTK::EventId::operator-=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("sub!", static_cast<SimTK::EventId & (SimTK::EventId::*)(unsigned int) >(&SimTK::EventId::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::EventId & SimTK::EventId::operator+=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::EventId & SimTK::EventId::operator+=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("add!", static_cast<SimTK::EventId & (SimTK::EventId::*)(unsigned short) >(&SimTK::EventId::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::EventId & SimTK::EventId::operator-=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::EventId & SimTK::EventId::operator-=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("sub!", static_cast<SimTK::EventId & (SimTK::EventId::*)(unsigned short) >(&SimTK::EventId::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::EventId & SimTK::EventId::operator+=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::EventId & SimTK::EventId::operator+=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("add!", static_cast<SimTK::EventId & (SimTK::EventId::*)(unsigned long) >(&SimTK::EventId::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::EventId & SimTK::EventId::operator-=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::EventId & SimTK::EventId::operator-=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("sub!", static_cast<SimTK::EventId & (SimTK::EventId::*)(unsigned long) >(&SimTK::EventId::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::EventId & SimTK::EventId::operator+=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::EventId & SimTK::EventId::operator+=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("add!", static_cast<SimTK::EventId & (SimTK::EventId::*)(unsigned long long) >(&SimTK::EventId::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::EventId & SimTK::EventId::operator-=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::EventId & SimTK::EventId::operator-=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("sub!", static_cast<SimTK::EventId & (SimTK::EventId::*)(unsigned long long) >(&SimTK::EventId::operator-=));

  DEBUG_MSG("Adding wrapper for const SimTK::EventId & SimTK::EventId::Invalid() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::EventId & SimTK::EventId::Invalid()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("SimTK!EventId!Invalid", static_cast<const SimTK::EventId & (*)() >(&SimTK::EventId::Invalid));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventId::isValid(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventId::isValid(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("SimTK!EventId!isValid", static_cast<bool (*)(int) >(&SimTK::EventId::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventId::isValid(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventId::isValid(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("SimTK!EventId!isValid", static_cast<bool (*)(short) >(&SimTK::EventId::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventId::isValid(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventId::isValid(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("SimTK!EventId!isValid", static_cast<bool (*)(long) >(&SimTK::EventId::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventId::isValid(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventId::isValid(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("SimTK!EventId!isValid", static_cast<bool (*)(long long) >(&SimTK::EventId::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventId::isValid(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventId::isValid(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("SimTK!EventId!isValid", static_cast<bool (*)(unsigned int) >(&SimTK::EventId::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventId::isValid(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventId::isValid(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("SimTK!EventId!isValid", static_cast<bool (*)(unsigned short) >(&SimTK::EventId::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventId::isValid(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventId::isValid(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("SimTK!EventId!isValid", static_cast<bool (*)(unsigned long) >(&SimTK::EventId::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventId::isValid(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventId::isValid(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("SimTK!EventId!isValid", static_cast<bool (*)(unsigned long long) >(&SimTK::EventId::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventId::isValidExtended(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventId::isValidExtended(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("SimTK!EventId!isValidExtended", static_cast<bool (*)(int) >(&SimTK::EventId::isValidExtended));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventId::isValidExtended(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventId::isValidExtended(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("SimTK!EventId!isValidExtended", static_cast<bool (*)(short) >(&SimTK::EventId::isValidExtended));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventId::isValidExtended(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventId::isValidExtended(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("SimTK!EventId!isValidExtended", static_cast<bool (*)(long) >(&SimTK::EventId::isValidExtended));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventId::isValidExtended(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventId::isValidExtended(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("SimTK!EventId!isValidExtended", static_cast<bool (*)(long long) >(&SimTK::EventId::isValidExtended));

  DEBUG_MSG("Adding wrapper for SimTK::EventId::size_type SimTK::EventId::max_size() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::EventId::size_type SimTK::EventId::max_size()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  t0.method("SimTK!EventId!max_size", static_cast<SimTK::EventId::size_type (*)() >(&SimTK::EventId::max_size));

  /* End of SimTK::EventId class method wrappers
   **********************************************************************/


  /**********************************************************************/
  /* Wrappers for the methods of class SimTK::SystemEventTriggerIndex
   */


  DEBUG_MSG("Adding wrapper for void SimTK::SystemEventTriggerIndex::SystemEventTriggerIndex(int) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:32
  t1.constructor<int>();


  DEBUG_MSG("Adding wrapper for void SimTK::SystemEventTriggerIndex::SystemEventTriggerIndex(long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:32
  t1.constructor<long>();


  DEBUG_MSG("Adding wrapper for void SimTK::SystemEventTriggerIndex::SystemEventTriggerIndex(long long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:32
  t1.constructor<long long>();


  DEBUG_MSG("Adding wrapper for void SimTK::SystemEventTriggerIndex::SystemEventTriggerIndex(unsigned int) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:32
  t1.constructor<unsigned int>();


  DEBUG_MSG("Adding wrapper for void SimTK::SystemEventTriggerIndex::SystemEventTriggerIndex(unsigned long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:32
  t1.constructor<unsigned long>();


  DEBUG_MSG("Adding wrapper for void SimTK::SystemEventTriggerIndex::SystemEventTriggerIndex(unsigned long long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:32
  t1.constructor<unsigned long long>();

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerIndex::isValid() (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerIndex::isValid()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("isValid", static_cast<bool (SimTK::SystemEventTriggerIndex::*)()  const>(&SimTK::SystemEventTriggerIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerIndex::isValidExtended() (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerIndex::isValidExtended()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("isValidExtended", static_cast<bool (SimTK::SystemEventTriggerIndex::*)()  const>(&SimTK::SystemEventTriggerIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for void SimTK::SystemEventTriggerIndex::invalidate() (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::SystemEventTriggerIndex::invalidate()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("invalidate", static_cast<void (SimTK::SystemEventTriggerIndex::*)() >(&SimTK::SystemEventTriggerIndex::invalidate));

  DEBUG_MSG("Adding wrapper for void SimTK::SystemEventTriggerIndex::clear() (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::SystemEventTriggerIndex::clear()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("clear", static_cast<void (SimTK::SystemEventTriggerIndex::*)() >(&SimTK::SystemEventTriggerIndex::clear));
  types.set_override_module(jl_base_module);

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerIndex::operator==(const SimTK::SystemEventTriggerIndex &) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerIndex::operator==(const SimTK::SystemEventTriggerIndex &)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("==", static_cast<bool (SimTK::SystemEventTriggerIndex::*)(const SimTK::SystemEventTriggerIndex &)  const>(&SimTK::SystemEventTriggerIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerIndex::operator==(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerIndex::operator==(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("==", static_cast<bool (SimTK::SystemEventTriggerIndex::*)(int)  const>(&SimTK::SystemEventTriggerIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerIndex::operator==(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerIndex::operator==(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("==", static_cast<bool (SimTK::SystemEventTriggerIndex::*)(short)  const>(&SimTK::SystemEventTriggerIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerIndex::operator==(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerIndex::operator==(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("==", static_cast<bool (SimTK::SystemEventTriggerIndex::*)(long)  const>(&SimTK::SystemEventTriggerIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerIndex::operator==(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerIndex::operator==(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("==", static_cast<bool (SimTK::SystemEventTriggerIndex::*)(long long)  const>(&SimTK::SystemEventTriggerIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerIndex::operator==(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerIndex::operator==(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("==", static_cast<bool (SimTK::SystemEventTriggerIndex::*)(unsigned int)  const>(&SimTK::SystemEventTriggerIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerIndex::operator==(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerIndex::operator==(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("==", static_cast<bool (SimTK::SystemEventTriggerIndex::*)(unsigned short)  const>(&SimTK::SystemEventTriggerIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerIndex::operator==(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerIndex::operator==(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("==", static_cast<bool (SimTK::SystemEventTriggerIndex::*)(unsigned long)  const>(&SimTK::SystemEventTriggerIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerIndex::operator==(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerIndex::operator==(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("==", static_cast<bool (SimTK::SystemEventTriggerIndex::*)(unsigned long long)  const>(&SimTK::SystemEventTriggerIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerIndex::operator!=(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerIndex::operator!=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("!=", static_cast<bool (SimTK::SystemEventTriggerIndex::*)(int)  const>(&SimTK::SystemEventTriggerIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerIndex::operator!=(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerIndex::operator!=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("!=", static_cast<bool (SimTK::SystemEventTriggerIndex::*)(short)  const>(&SimTK::SystemEventTriggerIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerIndex::operator!=(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerIndex::operator!=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("!=", static_cast<bool (SimTK::SystemEventTriggerIndex::*)(long)  const>(&SimTK::SystemEventTriggerIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerIndex::operator!=(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerIndex::operator!=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("!=", static_cast<bool (SimTK::SystemEventTriggerIndex::*)(long long)  const>(&SimTK::SystemEventTriggerIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerIndex::operator!=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerIndex::operator!=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("!=", static_cast<bool (SimTK::SystemEventTriggerIndex::*)(unsigned int)  const>(&SimTK::SystemEventTriggerIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerIndex::operator!=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerIndex::operator!=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("!=", static_cast<bool (SimTK::SystemEventTriggerIndex::*)(unsigned long)  const>(&SimTK::SystemEventTriggerIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerIndex::operator!=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerIndex::operator!=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("!=", static_cast<bool (SimTK::SystemEventTriggerIndex::*)(unsigned long long)  const>(&SimTK::SystemEventTriggerIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerIndex::operator<(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerIndex::operator<(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("<", static_cast<bool (SimTK::SystemEventTriggerIndex::*)(int)  const>(&SimTK::SystemEventTriggerIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerIndex::operator<(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerIndex::operator<(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("<", static_cast<bool (SimTK::SystemEventTriggerIndex::*)(short)  const>(&SimTK::SystemEventTriggerIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerIndex::operator<(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerIndex::operator<(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("<", static_cast<bool (SimTK::SystemEventTriggerIndex::*)(long)  const>(&SimTK::SystemEventTriggerIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerIndex::operator<(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerIndex::operator<(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("<", static_cast<bool (SimTK::SystemEventTriggerIndex::*)(long long)  const>(&SimTK::SystemEventTriggerIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerIndex::operator<(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerIndex::operator<(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("<", static_cast<bool (SimTK::SystemEventTriggerIndex::*)(unsigned int)  const>(&SimTK::SystemEventTriggerIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerIndex::operator<(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerIndex::operator<(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("<", static_cast<bool (SimTK::SystemEventTriggerIndex::*)(unsigned short)  const>(&SimTK::SystemEventTriggerIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerIndex::operator<(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerIndex::operator<(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("<", static_cast<bool (SimTK::SystemEventTriggerIndex::*)(unsigned long)  const>(&SimTK::SystemEventTriggerIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerIndex::operator<(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerIndex::operator<(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("<", static_cast<bool (SimTK::SystemEventTriggerIndex::*)(unsigned long long)  const>(&SimTK::SystemEventTriggerIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerIndex::operator>=(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerIndex::operator>=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method(">=", static_cast<bool (SimTK::SystemEventTriggerIndex::*)(int)  const>(&SimTK::SystemEventTriggerIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerIndex::operator>=(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerIndex::operator>=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method(">=", static_cast<bool (SimTK::SystemEventTriggerIndex::*)(short)  const>(&SimTK::SystemEventTriggerIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerIndex::operator>=(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerIndex::operator>=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method(">=", static_cast<bool (SimTK::SystemEventTriggerIndex::*)(long)  const>(&SimTK::SystemEventTriggerIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerIndex::operator>=(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerIndex::operator>=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method(">=", static_cast<bool (SimTK::SystemEventTriggerIndex::*)(long long)  const>(&SimTK::SystemEventTriggerIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerIndex::operator>=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerIndex::operator>=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method(">=", static_cast<bool (SimTK::SystemEventTriggerIndex::*)(unsigned int)  const>(&SimTK::SystemEventTriggerIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerIndex::operator>=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerIndex::operator>=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method(">=", static_cast<bool (SimTK::SystemEventTriggerIndex::*)(unsigned short)  const>(&SimTK::SystemEventTriggerIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerIndex::operator>=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerIndex::operator>=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method(">=", static_cast<bool (SimTK::SystemEventTriggerIndex::*)(unsigned long)  const>(&SimTK::SystemEventTriggerIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerIndex::operator>=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerIndex::operator>=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method(">=", static_cast<bool (SimTK::SystemEventTriggerIndex::*)(unsigned long long)  const>(&SimTK::SystemEventTriggerIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerIndex::operator>(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerIndex::operator>(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method(">", static_cast<bool (SimTK::SystemEventTriggerIndex::*)(int)  const>(&SimTK::SystemEventTriggerIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerIndex::operator>(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerIndex::operator>(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method(">", static_cast<bool (SimTK::SystemEventTriggerIndex::*)(short)  const>(&SimTK::SystemEventTriggerIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerIndex::operator>(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerIndex::operator>(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method(">", static_cast<bool (SimTK::SystemEventTriggerIndex::*)(long)  const>(&SimTK::SystemEventTriggerIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerIndex::operator>(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerIndex::operator>(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method(">", static_cast<bool (SimTK::SystemEventTriggerIndex::*)(long long)  const>(&SimTK::SystemEventTriggerIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerIndex::operator>(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerIndex::operator>(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method(">", static_cast<bool (SimTK::SystemEventTriggerIndex::*)(unsigned int)  const>(&SimTK::SystemEventTriggerIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerIndex::operator>(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerIndex::operator>(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method(">", static_cast<bool (SimTK::SystemEventTriggerIndex::*)(unsigned short)  const>(&SimTK::SystemEventTriggerIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerIndex::operator>(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerIndex::operator>(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method(">", static_cast<bool (SimTK::SystemEventTriggerIndex::*)(unsigned long)  const>(&SimTK::SystemEventTriggerIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerIndex::operator>(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerIndex::operator>(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method(">", static_cast<bool (SimTK::SystemEventTriggerIndex::*)(unsigned long long)  const>(&SimTK::SystemEventTriggerIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerIndex::operator<=(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerIndex::operator<=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("<=", static_cast<bool (SimTK::SystemEventTriggerIndex::*)(int)  const>(&SimTK::SystemEventTriggerIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerIndex::operator<=(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerIndex::operator<=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("<=", static_cast<bool (SimTK::SystemEventTriggerIndex::*)(short)  const>(&SimTK::SystemEventTriggerIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerIndex::operator<=(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerIndex::operator<=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("<=", static_cast<bool (SimTK::SystemEventTriggerIndex::*)(long)  const>(&SimTK::SystemEventTriggerIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerIndex::operator<=(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerIndex::operator<=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("<=", static_cast<bool (SimTK::SystemEventTriggerIndex::*)(long long)  const>(&SimTK::SystemEventTriggerIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerIndex::operator<=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerIndex::operator<=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("<=", static_cast<bool (SimTK::SystemEventTriggerIndex::*)(unsigned int)  const>(&SimTK::SystemEventTriggerIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerIndex::operator<=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerIndex::operator<=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("<=", static_cast<bool (SimTK::SystemEventTriggerIndex::*)(unsigned short)  const>(&SimTK::SystemEventTriggerIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerIndex::operator<=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerIndex::operator<=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("<=", static_cast<bool (SimTK::SystemEventTriggerIndex::*)(unsigned long)  const>(&SimTK::SystemEventTriggerIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerIndex::operator<=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerIndex::operator<=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("<=", static_cast<bool (SimTK::SystemEventTriggerIndex::*)(unsigned long long)  const>(&SimTK::SystemEventTriggerIndex::operator<=));
  types.unset_override_module();

  DEBUG_MSG("Adding wrapper for const SimTK::SystemEventTriggerIndex & SimTK::SystemEventTriggerIndex::operator++() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::SystemEventTriggerIndex & SimTK::SystemEventTriggerIndex::operator++()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("inc!", static_cast<const SimTK::SystemEventTriggerIndex & (SimTK::SystemEventTriggerIndex::*)() >(&SimTK::SystemEventTriggerIndex::operator++));

  DEBUG_MSG("Adding wrapper for SimTK::SystemEventTriggerIndex SimTK::SystemEventTriggerIndex::operator++(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemEventTriggerIndex SimTK::SystemEventTriggerIndex::operator++(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("inc!", static_cast<SimTK::SystemEventTriggerIndex (SimTK::SystemEventTriggerIndex::*)(int) >(&SimTK::SystemEventTriggerIndex::operator++));

  DEBUG_MSG("Adding wrapper for const SimTK::SystemEventTriggerIndex & SimTK::SystemEventTriggerIndex::operator--() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::SystemEventTriggerIndex & SimTK::SystemEventTriggerIndex::operator--()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("dec!", static_cast<const SimTK::SystemEventTriggerIndex & (SimTK::SystemEventTriggerIndex::*)() >(&SimTK::SystemEventTriggerIndex::operator--));

  DEBUG_MSG("Adding wrapper for SimTK::SystemEventTriggerIndex SimTK::SystemEventTriggerIndex::operator--(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemEventTriggerIndex SimTK::SystemEventTriggerIndex::operator--(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("dec!", static_cast<SimTK::SystemEventTriggerIndex (SimTK::SystemEventTriggerIndex::*)(int) >(&SimTK::SystemEventTriggerIndex::operator--));

  DEBUG_MSG("Adding wrapper for SimTK::SystemEventTriggerIndex SimTK::SystemEventTriggerIndex::next() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemEventTriggerIndex SimTK::SystemEventTriggerIndex::next()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("next", static_cast<SimTK::SystemEventTriggerIndex (SimTK::SystemEventTriggerIndex::*)()  const>(&SimTK::SystemEventTriggerIndex::next));

  DEBUG_MSG("Adding wrapper for SimTK::SystemEventTriggerIndex SimTK::SystemEventTriggerIndex::prev() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemEventTriggerIndex SimTK::SystemEventTriggerIndex::prev()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("prev", static_cast<SimTK::SystemEventTriggerIndex (SimTK::SystemEventTriggerIndex::*)()  const>(&SimTK::SystemEventTriggerIndex::prev));

  DEBUG_MSG("Adding wrapper for SimTK::SystemEventTriggerIndex & SimTK::SystemEventTriggerIndex::operator+=(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemEventTriggerIndex & SimTK::SystemEventTriggerIndex::operator+=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("add!", static_cast<SimTK::SystemEventTriggerIndex & (SimTK::SystemEventTriggerIndex::*)(int) >(&SimTK::SystemEventTriggerIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemEventTriggerIndex & SimTK::SystemEventTriggerIndex::operator-=(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemEventTriggerIndex & SimTK::SystemEventTriggerIndex::operator-=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("sub!", static_cast<SimTK::SystemEventTriggerIndex & (SimTK::SystemEventTriggerIndex::*)(int) >(&SimTK::SystemEventTriggerIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemEventTriggerIndex & SimTK::SystemEventTriggerIndex::operator+=(short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemEventTriggerIndex & SimTK::SystemEventTriggerIndex::operator+=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("add!", static_cast<SimTK::SystemEventTriggerIndex & (SimTK::SystemEventTriggerIndex::*)(short) >(&SimTK::SystemEventTriggerIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemEventTriggerIndex & SimTK::SystemEventTriggerIndex::operator-=(short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemEventTriggerIndex & SimTK::SystemEventTriggerIndex::operator-=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("sub!", static_cast<SimTK::SystemEventTriggerIndex & (SimTK::SystemEventTriggerIndex::*)(short) >(&SimTK::SystemEventTriggerIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemEventTriggerIndex & SimTK::SystemEventTriggerIndex::operator+=(long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemEventTriggerIndex & SimTK::SystemEventTriggerIndex::operator+=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("add!", static_cast<SimTK::SystemEventTriggerIndex & (SimTK::SystemEventTriggerIndex::*)(long) >(&SimTK::SystemEventTriggerIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemEventTriggerIndex & SimTK::SystemEventTriggerIndex::operator-=(long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemEventTriggerIndex & SimTK::SystemEventTriggerIndex::operator-=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("sub!", static_cast<SimTK::SystemEventTriggerIndex & (SimTK::SystemEventTriggerIndex::*)(long) >(&SimTK::SystemEventTriggerIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemEventTriggerIndex & SimTK::SystemEventTriggerIndex::operator+=(long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemEventTriggerIndex & SimTK::SystemEventTriggerIndex::operator+=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("add!", static_cast<SimTK::SystemEventTriggerIndex & (SimTK::SystemEventTriggerIndex::*)(long long) >(&SimTK::SystemEventTriggerIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemEventTriggerIndex & SimTK::SystemEventTriggerIndex::operator-=(long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemEventTriggerIndex & SimTK::SystemEventTriggerIndex::operator-=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("sub!", static_cast<SimTK::SystemEventTriggerIndex & (SimTK::SystemEventTriggerIndex::*)(long long) >(&SimTK::SystemEventTriggerIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemEventTriggerIndex & SimTK::SystemEventTriggerIndex::operator+=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemEventTriggerIndex & SimTK::SystemEventTriggerIndex::operator+=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("add!", static_cast<SimTK::SystemEventTriggerIndex & (SimTK::SystemEventTriggerIndex::*)(unsigned int) >(&SimTK::SystemEventTriggerIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemEventTriggerIndex & SimTK::SystemEventTriggerIndex::operator-=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemEventTriggerIndex & SimTK::SystemEventTriggerIndex::operator-=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("sub!", static_cast<SimTK::SystemEventTriggerIndex & (SimTK::SystemEventTriggerIndex::*)(unsigned int) >(&SimTK::SystemEventTriggerIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemEventTriggerIndex & SimTK::SystemEventTriggerIndex::operator+=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemEventTriggerIndex & SimTK::SystemEventTriggerIndex::operator+=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("add!", static_cast<SimTK::SystemEventTriggerIndex & (SimTK::SystemEventTriggerIndex::*)(unsigned short) >(&SimTK::SystemEventTriggerIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemEventTriggerIndex & SimTK::SystemEventTriggerIndex::operator-=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemEventTriggerIndex & SimTK::SystemEventTriggerIndex::operator-=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("sub!", static_cast<SimTK::SystemEventTriggerIndex & (SimTK::SystemEventTriggerIndex::*)(unsigned short) >(&SimTK::SystemEventTriggerIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemEventTriggerIndex & SimTK::SystemEventTriggerIndex::operator+=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemEventTriggerIndex & SimTK::SystemEventTriggerIndex::operator+=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("add!", static_cast<SimTK::SystemEventTriggerIndex & (SimTK::SystemEventTriggerIndex::*)(unsigned long) >(&SimTK::SystemEventTriggerIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemEventTriggerIndex & SimTK::SystemEventTriggerIndex::operator-=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemEventTriggerIndex & SimTK::SystemEventTriggerIndex::operator-=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("sub!", static_cast<SimTK::SystemEventTriggerIndex & (SimTK::SystemEventTriggerIndex::*)(unsigned long) >(&SimTK::SystemEventTriggerIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemEventTriggerIndex & SimTK::SystemEventTriggerIndex::operator+=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemEventTriggerIndex & SimTK::SystemEventTriggerIndex::operator+=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("add!", static_cast<SimTK::SystemEventTriggerIndex & (SimTK::SystemEventTriggerIndex::*)(unsigned long long) >(&SimTK::SystemEventTriggerIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemEventTriggerIndex & SimTK::SystemEventTriggerIndex::operator-=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemEventTriggerIndex & SimTK::SystemEventTriggerIndex::operator-=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("sub!", static_cast<SimTK::SystemEventTriggerIndex & (SimTK::SystemEventTriggerIndex::*)(unsigned long long) >(&SimTK::SystemEventTriggerIndex::operator-=));

  DEBUG_MSG("Adding wrapper for const SimTK::SystemEventTriggerIndex & SimTK::SystemEventTriggerIndex::Invalid() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::SystemEventTriggerIndex & SimTK::SystemEventTriggerIndex::Invalid()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("SimTK!SystemEventTriggerIndex!Invalid", static_cast<const SimTK::SystemEventTriggerIndex & (*)() >(&SimTK::SystemEventTriggerIndex::Invalid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerIndex::isValid(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerIndex::isValid(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("SimTK!SystemEventTriggerIndex!isValid", static_cast<bool (*)(int) >(&SimTK::SystemEventTriggerIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerIndex::isValid(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerIndex::isValid(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("SimTK!SystemEventTriggerIndex!isValid", static_cast<bool (*)(short) >(&SimTK::SystemEventTriggerIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerIndex::isValid(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerIndex::isValid(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("SimTK!SystemEventTriggerIndex!isValid", static_cast<bool (*)(long) >(&SimTK::SystemEventTriggerIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerIndex::isValid(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerIndex::isValid(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("SimTK!SystemEventTriggerIndex!isValid", static_cast<bool (*)(long long) >(&SimTK::SystemEventTriggerIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerIndex::isValid(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerIndex::isValid(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("SimTK!SystemEventTriggerIndex!isValid", static_cast<bool (*)(unsigned int) >(&SimTK::SystemEventTriggerIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerIndex::isValid(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerIndex::isValid(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("SimTK!SystemEventTriggerIndex!isValid", static_cast<bool (*)(unsigned short) >(&SimTK::SystemEventTriggerIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerIndex::isValid(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerIndex::isValid(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("SimTK!SystemEventTriggerIndex!isValid", static_cast<bool (*)(unsigned long) >(&SimTK::SystemEventTriggerIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerIndex::isValid(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerIndex::isValid(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("SimTK!SystemEventTriggerIndex!isValid", static_cast<bool (*)(unsigned long long) >(&SimTK::SystemEventTriggerIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerIndex::isValidExtended(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerIndex::isValidExtended(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("SimTK!SystemEventTriggerIndex!isValidExtended", static_cast<bool (*)(int) >(&SimTK::SystemEventTriggerIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerIndex::isValidExtended(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerIndex::isValidExtended(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("SimTK!SystemEventTriggerIndex!isValidExtended", static_cast<bool (*)(short) >(&SimTK::SystemEventTriggerIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerIndex::isValidExtended(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerIndex::isValidExtended(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("SimTK!SystemEventTriggerIndex!isValidExtended", static_cast<bool (*)(long) >(&SimTK::SystemEventTriggerIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerIndex::isValidExtended(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerIndex::isValidExtended(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("SimTK!SystemEventTriggerIndex!isValidExtended", static_cast<bool (*)(long long) >(&SimTK::SystemEventTriggerIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for SimTK::SystemEventTriggerIndex::size_type SimTK::SystemEventTriggerIndex::max_size() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemEventTriggerIndex::size_type SimTK::SystemEventTriggerIndex::max_size()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  t1.method("SimTK!SystemEventTriggerIndex!max_size", static_cast<SimTK::SystemEventTriggerIndex::size_type (*)() >(&SimTK::SystemEventTriggerIndex::max_size));

  /* End of SimTK::SystemEventTriggerIndex class method wrappers
   **********************************************************************/


  /**********************************************************************/
  /* Wrappers for the methods of class SimTK::SystemEventTriggerByStageIndex
   */


  DEBUG_MSG("Adding wrapper for void SimTK::SystemEventTriggerByStageIndex::SystemEventTriggerByStageIndex(int) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:32
  t2.constructor<int>();


  DEBUG_MSG("Adding wrapper for void SimTK::SystemEventTriggerByStageIndex::SystemEventTriggerByStageIndex(long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:32
  t2.constructor<long>();


  DEBUG_MSG("Adding wrapper for void SimTK::SystemEventTriggerByStageIndex::SystemEventTriggerByStageIndex(long long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:32
  t2.constructor<long long>();


  DEBUG_MSG("Adding wrapper for void SimTK::SystemEventTriggerByStageIndex::SystemEventTriggerByStageIndex(unsigned int) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:32
  t2.constructor<unsigned int>();


  DEBUG_MSG("Adding wrapper for void SimTK::SystemEventTriggerByStageIndex::SystemEventTriggerByStageIndex(unsigned long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:32
  t2.constructor<unsigned long>();


  DEBUG_MSG("Adding wrapper for void SimTK::SystemEventTriggerByStageIndex::SystemEventTriggerByStageIndex(unsigned long long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:32
  t2.constructor<unsigned long long>();

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerByStageIndex::isValid() (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerByStageIndex::isValid()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("isValid", static_cast<bool (SimTK::SystemEventTriggerByStageIndex::*)()  const>(&SimTK::SystemEventTriggerByStageIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerByStageIndex::isValidExtended() (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerByStageIndex::isValidExtended()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("isValidExtended", static_cast<bool (SimTK::SystemEventTriggerByStageIndex::*)()  const>(&SimTK::SystemEventTriggerByStageIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for void SimTK::SystemEventTriggerByStageIndex::invalidate() (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::SystemEventTriggerByStageIndex::invalidate()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("invalidate", static_cast<void (SimTK::SystemEventTriggerByStageIndex::*)() >(&SimTK::SystemEventTriggerByStageIndex::invalidate));

  DEBUG_MSG("Adding wrapper for void SimTK::SystemEventTriggerByStageIndex::clear() (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::SystemEventTriggerByStageIndex::clear()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("clear", static_cast<void (SimTK::SystemEventTriggerByStageIndex::*)() >(&SimTK::SystemEventTriggerByStageIndex::clear));
  types.set_override_module(jl_base_module);

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerByStageIndex::operator==(const SimTK::SystemEventTriggerByStageIndex &) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerByStageIndex::operator==(const SimTK::SystemEventTriggerByStageIndex &)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("==", static_cast<bool (SimTK::SystemEventTriggerByStageIndex::*)(const SimTK::SystemEventTriggerByStageIndex &)  const>(&SimTK::SystemEventTriggerByStageIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerByStageIndex::operator==(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerByStageIndex::operator==(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("==", static_cast<bool (SimTK::SystemEventTriggerByStageIndex::*)(int)  const>(&SimTK::SystemEventTriggerByStageIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerByStageIndex::operator==(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerByStageIndex::operator==(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("==", static_cast<bool (SimTK::SystemEventTriggerByStageIndex::*)(short)  const>(&SimTK::SystemEventTriggerByStageIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerByStageIndex::operator==(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerByStageIndex::operator==(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("==", static_cast<bool (SimTK::SystemEventTriggerByStageIndex::*)(long)  const>(&SimTK::SystemEventTriggerByStageIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerByStageIndex::operator==(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerByStageIndex::operator==(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("==", static_cast<bool (SimTK::SystemEventTriggerByStageIndex::*)(long long)  const>(&SimTK::SystemEventTriggerByStageIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerByStageIndex::operator==(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerByStageIndex::operator==(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("==", static_cast<bool (SimTK::SystemEventTriggerByStageIndex::*)(unsigned int)  const>(&SimTK::SystemEventTriggerByStageIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerByStageIndex::operator==(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerByStageIndex::operator==(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("==", static_cast<bool (SimTK::SystemEventTriggerByStageIndex::*)(unsigned short)  const>(&SimTK::SystemEventTriggerByStageIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerByStageIndex::operator==(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerByStageIndex::operator==(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("==", static_cast<bool (SimTK::SystemEventTriggerByStageIndex::*)(unsigned long)  const>(&SimTK::SystemEventTriggerByStageIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerByStageIndex::operator==(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerByStageIndex::operator==(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("==", static_cast<bool (SimTK::SystemEventTriggerByStageIndex::*)(unsigned long long)  const>(&SimTK::SystemEventTriggerByStageIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerByStageIndex::operator!=(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerByStageIndex::operator!=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("!=", static_cast<bool (SimTK::SystemEventTriggerByStageIndex::*)(int)  const>(&SimTK::SystemEventTriggerByStageIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerByStageIndex::operator!=(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerByStageIndex::operator!=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("!=", static_cast<bool (SimTK::SystemEventTriggerByStageIndex::*)(short)  const>(&SimTK::SystemEventTriggerByStageIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerByStageIndex::operator!=(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerByStageIndex::operator!=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("!=", static_cast<bool (SimTK::SystemEventTriggerByStageIndex::*)(long)  const>(&SimTK::SystemEventTriggerByStageIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerByStageIndex::operator!=(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerByStageIndex::operator!=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("!=", static_cast<bool (SimTK::SystemEventTriggerByStageIndex::*)(long long)  const>(&SimTK::SystemEventTriggerByStageIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerByStageIndex::operator!=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerByStageIndex::operator!=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("!=", static_cast<bool (SimTK::SystemEventTriggerByStageIndex::*)(unsigned int)  const>(&SimTK::SystemEventTriggerByStageIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerByStageIndex::operator!=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerByStageIndex::operator!=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("!=", static_cast<bool (SimTK::SystemEventTriggerByStageIndex::*)(unsigned long)  const>(&SimTK::SystemEventTriggerByStageIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerByStageIndex::operator!=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerByStageIndex::operator!=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("!=", static_cast<bool (SimTK::SystemEventTriggerByStageIndex::*)(unsigned long long)  const>(&SimTK::SystemEventTriggerByStageIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerByStageIndex::operator<(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerByStageIndex::operator<(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("<", static_cast<bool (SimTK::SystemEventTriggerByStageIndex::*)(int)  const>(&SimTK::SystemEventTriggerByStageIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerByStageIndex::operator<(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerByStageIndex::operator<(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("<", static_cast<bool (SimTK::SystemEventTriggerByStageIndex::*)(short)  const>(&SimTK::SystemEventTriggerByStageIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerByStageIndex::operator<(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerByStageIndex::operator<(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("<", static_cast<bool (SimTK::SystemEventTriggerByStageIndex::*)(long)  const>(&SimTK::SystemEventTriggerByStageIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerByStageIndex::operator<(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerByStageIndex::operator<(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("<", static_cast<bool (SimTK::SystemEventTriggerByStageIndex::*)(long long)  const>(&SimTK::SystemEventTriggerByStageIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerByStageIndex::operator<(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerByStageIndex::operator<(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("<", static_cast<bool (SimTK::SystemEventTriggerByStageIndex::*)(unsigned int)  const>(&SimTK::SystemEventTriggerByStageIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerByStageIndex::operator<(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerByStageIndex::operator<(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("<", static_cast<bool (SimTK::SystemEventTriggerByStageIndex::*)(unsigned short)  const>(&SimTK::SystemEventTriggerByStageIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerByStageIndex::operator<(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerByStageIndex::operator<(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("<", static_cast<bool (SimTK::SystemEventTriggerByStageIndex::*)(unsigned long)  const>(&SimTK::SystemEventTriggerByStageIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerByStageIndex::operator<(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerByStageIndex::operator<(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("<", static_cast<bool (SimTK::SystemEventTriggerByStageIndex::*)(unsigned long long)  const>(&SimTK::SystemEventTriggerByStageIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerByStageIndex::operator>=(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerByStageIndex::operator>=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method(">=", static_cast<bool (SimTK::SystemEventTriggerByStageIndex::*)(int)  const>(&SimTK::SystemEventTriggerByStageIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerByStageIndex::operator>=(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerByStageIndex::operator>=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method(">=", static_cast<bool (SimTK::SystemEventTriggerByStageIndex::*)(short)  const>(&SimTK::SystemEventTriggerByStageIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerByStageIndex::operator>=(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerByStageIndex::operator>=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method(">=", static_cast<bool (SimTK::SystemEventTriggerByStageIndex::*)(long)  const>(&SimTK::SystemEventTriggerByStageIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerByStageIndex::operator>=(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerByStageIndex::operator>=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method(">=", static_cast<bool (SimTK::SystemEventTriggerByStageIndex::*)(long long)  const>(&SimTK::SystemEventTriggerByStageIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerByStageIndex::operator>=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerByStageIndex::operator>=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method(">=", static_cast<bool (SimTK::SystemEventTriggerByStageIndex::*)(unsigned int)  const>(&SimTK::SystemEventTriggerByStageIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerByStageIndex::operator>=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerByStageIndex::operator>=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method(">=", static_cast<bool (SimTK::SystemEventTriggerByStageIndex::*)(unsigned short)  const>(&SimTK::SystemEventTriggerByStageIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerByStageIndex::operator>=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerByStageIndex::operator>=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method(">=", static_cast<bool (SimTK::SystemEventTriggerByStageIndex::*)(unsigned long)  const>(&SimTK::SystemEventTriggerByStageIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerByStageIndex::operator>=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerByStageIndex::operator>=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method(">=", static_cast<bool (SimTK::SystemEventTriggerByStageIndex::*)(unsigned long long)  const>(&SimTK::SystemEventTriggerByStageIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerByStageIndex::operator>(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerByStageIndex::operator>(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method(">", static_cast<bool (SimTK::SystemEventTriggerByStageIndex::*)(int)  const>(&SimTK::SystemEventTriggerByStageIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerByStageIndex::operator>(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerByStageIndex::operator>(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method(">", static_cast<bool (SimTK::SystemEventTriggerByStageIndex::*)(short)  const>(&SimTK::SystemEventTriggerByStageIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerByStageIndex::operator>(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerByStageIndex::operator>(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method(">", static_cast<bool (SimTK::SystemEventTriggerByStageIndex::*)(long)  const>(&SimTK::SystemEventTriggerByStageIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerByStageIndex::operator>(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerByStageIndex::operator>(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method(">", static_cast<bool (SimTK::SystemEventTriggerByStageIndex::*)(long long)  const>(&SimTK::SystemEventTriggerByStageIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerByStageIndex::operator>(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerByStageIndex::operator>(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method(">", static_cast<bool (SimTK::SystemEventTriggerByStageIndex::*)(unsigned int)  const>(&SimTK::SystemEventTriggerByStageIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerByStageIndex::operator>(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerByStageIndex::operator>(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method(">", static_cast<bool (SimTK::SystemEventTriggerByStageIndex::*)(unsigned short)  const>(&SimTK::SystemEventTriggerByStageIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerByStageIndex::operator>(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerByStageIndex::operator>(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method(">", static_cast<bool (SimTK::SystemEventTriggerByStageIndex::*)(unsigned long)  const>(&SimTK::SystemEventTriggerByStageIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerByStageIndex::operator>(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerByStageIndex::operator>(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method(">", static_cast<bool (SimTK::SystemEventTriggerByStageIndex::*)(unsigned long long)  const>(&SimTK::SystemEventTriggerByStageIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerByStageIndex::operator<=(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerByStageIndex::operator<=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("<=", static_cast<bool (SimTK::SystemEventTriggerByStageIndex::*)(int)  const>(&SimTK::SystemEventTriggerByStageIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerByStageIndex::operator<=(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerByStageIndex::operator<=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("<=", static_cast<bool (SimTK::SystemEventTriggerByStageIndex::*)(short)  const>(&SimTK::SystemEventTriggerByStageIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerByStageIndex::operator<=(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerByStageIndex::operator<=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("<=", static_cast<bool (SimTK::SystemEventTriggerByStageIndex::*)(long)  const>(&SimTK::SystemEventTriggerByStageIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerByStageIndex::operator<=(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerByStageIndex::operator<=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("<=", static_cast<bool (SimTK::SystemEventTriggerByStageIndex::*)(long long)  const>(&SimTK::SystemEventTriggerByStageIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerByStageIndex::operator<=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerByStageIndex::operator<=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("<=", static_cast<bool (SimTK::SystemEventTriggerByStageIndex::*)(unsigned int)  const>(&SimTK::SystemEventTriggerByStageIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerByStageIndex::operator<=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerByStageIndex::operator<=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("<=", static_cast<bool (SimTK::SystemEventTriggerByStageIndex::*)(unsigned short)  const>(&SimTK::SystemEventTriggerByStageIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerByStageIndex::operator<=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerByStageIndex::operator<=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("<=", static_cast<bool (SimTK::SystemEventTriggerByStageIndex::*)(unsigned long)  const>(&SimTK::SystemEventTriggerByStageIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerByStageIndex::operator<=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerByStageIndex::operator<=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("<=", static_cast<bool (SimTK::SystemEventTriggerByStageIndex::*)(unsigned long long)  const>(&SimTK::SystemEventTriggerByStageIndex::operator<=));
  types.unset_override_module();

  DEBUG_MSG("Adding wrapper for const SimTK::SystemEventTriggerByStageIndex & SimTK::SystemEventTriggerByStageIndex::operator++() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::SystemEventTriggerByStageIndex & SimTK::SystemEventTriggerByStageIndex::operator++()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("inc!", static_cast<const SimTK::SystemEventTriggerByStageIndex & (SimTK::SystemEventTriggerByStageIndex::*)() >(&SimTK::SystemEventTriggerByStageIndex::operator++));

  DEBUG_MSG("Adding wrapper for SimTK::SystemEventTriggerByStageIndex SimTK::SystemEventTriggerByStageIndex::operator++(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemEventTriggerByStageIndex SimTK::SystemEventTriggerByStageIndex::operator++(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("inc!", static_cast<SimTK::SystemEventTriggerByStageIndex (SimTK::SystemEventTriggerByStageIndex::*)(int) >(&SimTK::SystemEventTriggerByStageIndex::operator++));

  DEBUG_MSG("Adding wrapper for const SimTK::SystemEventTriggerByStageIndex & SimTK::SystemEventTriggerByStageIndex::operator--() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::SystemEventTriggerByStageIndex & SimTK::SystemEventTriggerByStageIndex::operator--()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("dec!", static_cast<const SimTK::SystemEventTriggerByStageIndex & (SimTK::SystemEventTriggerByStageIndex::*)() >(&SimTK::SystemEventTriggerByStageIndex::operator--));

  DEBUG_MSG("Adding wrapper for SimTK::SystemEventTriggerByStageIndex SimTK::SystemEventTriggerByStageIndex::operator--(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemEventTriggerByStageIndex SimTK::SystemEventTriggerByStageIndex::operator--(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("dec!", static_cast<SimTK::SystemEventTriggerByStageIndex (SimTK::SystemEventTriggerByStageIndex::*)(int) >(&SimTK::SystemEventTriggerByStageIndex::operator--));

  DEBUG_MSG("Adding wrapper for SimTK::SystemEventTriggerByStageIndex SimTK::SystemEventTriggerByStageIndex::next() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemEventTriggerByStageIndex SimTK::SystemEventTriggerByStageIndex::next()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("next", static_cast<SimTK::SystemEventTriggerByStageIndex (SimTK::SystemEventTriggerByStageIndex::*)()  const>(&SimTK::SystemEventTriggerByStageIndex::next));

  DEBUG_MSG("Adding wrapper for SimTK::SystemEventTriggerByStageIndex SimTK::SystemEventTriggerByStageIndex::prev() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemEventTriggerByStageIndex SimTK::SystemEventTriggerByStageIndex::prev()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("prev", static_cast<SimTK::SystemEventTriggerByStageIndex (SimTK::SystemEventTriggerByStageIndex::*)()  const>(&SimTK::SystemEventTriggerByStageIndex::prev));

  DEBUG_MSG("Adding wrapper for SimTK::SystemEventTriggerByStageIndex & SimTK::SystemEventTriggerByStageIndex::operator+=(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemEventTriggerByStageIndex & SimTK::SystemEventTriggerByStageIndex::operator+=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("add!", static_cast<SimTK::SystemEventTriggerByStageIndex & (SimTK::SystemEventTriggerByStageIndex::*)(int) >(&SimTK::SystemEventTriggerByStageIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemEventTriggerByStageIndex & SimTK::SystemEventTriggerByStageIndex::operator-=(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemEventTriggerByStageIndex & SimTK::SystemEventTriggerByStageIndex::operator-=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("sub!", static_cast<SimTK::SystemEventTriggerByStageIndex & (SimTK::SystemEventTriggerByStageIndex::*)(int) >(&SimTK::SystemEventTriggerByStageIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemEventTriggerByStageIndex & SimTK::SystemEventTriggerByStageIndex::operator+=(short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemEventTriggerByStageIndex & SimTK::SystemEventTriggerByStageIndex::operator+=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("add!", static_cast<SimTK::SystemEventTriggerByStageIndex & (SimTK::SystemEventTriggerByStageIndex::*)(short) >(&SimTK::SystemEventTriggerByStageIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemEventTriggerByStageIndex & SimTK::SystemEventTriggerByStageIndex::operator-=(short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemEventTriggerByStageIndex & SimTK::SystemEventTriggerByStageIndex::operator-=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("sub!", static_cast<SimTK::SystemEventTriggerByStageIndex & (SimTK::SystemEventTriggerByStageIndex::*)(short) >(&SimTK::SystemEventTriggerByStageIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemEventTriggerByStageIndex & SimTK::SystemEventTriggerByStageIndex::operator+=(long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemEventTriggerByStageIndex & SimTK::SystemEventTriggerByStageIndex::operator+=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("add!", static_cast<SimTK::SystemEventTriggerByStageIndex & (SimTK::SystemEventTriggerByStageIndex::*)(long) >(&SimTK::SystemEventTriggerByStageIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemEventTriggerByStageIndex & SimTK::SystemEventTriggerByStageIndex::operator-=(long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemEventTriggerByStageIndex & SimTK::SystemEventTriggerByStageIndex::operator-=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("sub!", static_cast<SimTK::SystemEventTriggerByStageIndex & (SimTK::SystemEventTriggerByStageIndex::*)(long) >(&SimTK::SystemEventTriggerByStageIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemEventTriggerByStageIndex & SimTK::SystemEventTriggerByStageIndex::operator+=(long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemEventTriggerByStageIndex & SimTK::SystemEventTriggerByStageIndex::operator+=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("add!", static_cast<SimTK::SystemEventTriggerByStageIndex & (SimTK::SystemEventTriggerByStageIndex::*)(long long) >(&SimTK::SystemEventTriggerByStageIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemEventTriggerByStageIndex & SimTK::SystemEventTriggerByStageIndex::operator-=(long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemEventTriggerByStageIndex & SimTK::SystemEventTriggerByStageIndex::operator-=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("sub!", static_cast<SimTK::SystemEventTriggerByStageIndex & (SimTK::SystemEventTriggerByStageIndex::*)(long long) >(&SimTK::SystemEventTriggerByStageIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemEventTriggerByStageIndex & SimTK::SystemEventTriggerByStageIndex::operator+=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemEventTriggerByStageIndex & SimTK::SystemEventTriggerByStageIndex::operator+=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("add!", static_cast<SimTK::SystemEventTriggerByStageIndex & (SimTK::SystemEventTriggerByStageIndex::*)(unsigned int) >(&SimTK::SystemEventTriggerByStageIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemEventTriggerByStageIndex & SimTK::SystemEventTriggerByStageIndex::operator-=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemEventTriggerByStageIndex & SimTK::SystemEventTriggerByStageIndex::operator-=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("sub!", static_cast<SimTK::SystemEventTriggerByStageIndex & (SimTK::SystemEventTriggerByStageIndex::*)(unsigned int) >(&SimTK::SystemEventTriggerByStageIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemEventTriggerByStageIndex & SimTK::SystemEventTriggerByStageIndex::operator+=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemEventTriggerByStageIndex & SimTK::SystemEventTriggerByStageIndex::operator+=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("add!", static_cast<SimTK::SystemEventTriggerByStageIndex & (SimTK::SystemEventTriggerByStageIndex::*)(unsigned short) >(&SimTK::SystemEventTriggerByStageIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemEventTriggerByStageIndex & SimTK::SystemEventTriggerByStageIndex::operator-=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemEventTriggerByStageIndex & SimTK::SystemEventTriggerByStageIndex::operator-=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("sub!", static_cast<SimTK::SystemEventTriggerByStageIndex & (SimTK::SystemEventTriggerByStageIndex::*)(unsigned short) >(&SimTK::SystemEventTriggerByStageIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemEventTriggerByStageIndex & SimTK::SystemEventTriggerByStageIndex::operator+=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemEventTriggerByStageIndex & SimTK::SystemEventTriggerByStageIndex::operator+=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("add!", static_cast<SimTK::SystemEventTriggerByStageIndex & (SimTK::SystemEventTriggerByStageIndex::*)(unsigned long) >(&SimTK::SystemEventTriggerByStageIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemEventTriggerByStageIndex & SimTK::SystemEventTriggerByStageIndex::operator-=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemEventTriggerByStageIndex & SimTK::SystemEventTriggerByStageIndex::operator-=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("sub!", static_cast<SimTK::SystemEventTriggerByStageIndex & (SimTK::SystemEventTriggerByStageIndex::*)(unsigned long) >(&SimTK::SystemEventTriggerByStageIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemEventTriggerByStageIndex & SimTK::SystemEventTriggerByStageIndex::operator+=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemEventTriggerByStageIndex & SimTK::SystemEventTriggerByStageIndex::operator+=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("add!", static_cast<SimTK::SystemEventTriggerByStageIndex & (SimTK::SystemEventTriggerByStageIndex::*)(unsigned long long) >(&SimTK::SystemEventTriggerByStageIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemEventTriggerByStageIndex & SimTK::SystemEventTriggerByStageIndex::operator-=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemEventTriggerByStageIndex & SimTK::SystemEventTriggerByStageIndex::operator-=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("sub!", static_cast<SimTK::SystemEventTriggerByStageIndex & (SimTK::SystemEventTriggerByStageIndex::*)(unsigned long long) >(&SimTK::SystemEventTriggerByStageIndex::operator-=));

  DEBUG_MSG("Adding wrapper for const SimTK::SystemEventTriggerByStageIndex & SimTK::SystemEventTriggerByStageIndex::Invalid() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::SystemEventTriggerByStageIndex & SimTK::SystemEventTriggerByStageIndex::Invalid()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("SimTK!SystemEventTriggerByStageIndex!Invalid", static_cast<const SimTK::SystemEventTriggerByStageIndex & (*)() >(&SimTK::SystemEventTriggerByStageIndex::Invalid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerByStageIndex::isValid(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerByStageIndex::isValid(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("SimTK!SystemEventTriggerByStageIndex!isValid", static_cast<bool (*)(int) >(&SimTK::SystemEventTriggerByStageIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerByStageIndex::isValid(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerByStageIndex::isValid(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("SimTK!SystemEventTriggerByStageIndex!isValid", static_cast<bool (*)(short) >(&SimTK::SystemEventTriggerByStageIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerByStageIndex::isValid(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerByStageIndex::isValid(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("SimTK!SystemEventTriggerByStageIndex!isValid", static_cast<bool (*)(long) >(&SimTK::SystemEventTriggerByStageIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerByStageIndex::isValid(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerByStageIndex::isValid(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("SimTK!SystemEventTriggerByStageIndex!isValid", static_cast<bool (*)(long long) >(&SimTK::SystemEventTriggerByStageIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerByStageIndex::isValid(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerByStageIndex::isValid(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("SimTK!SystemEventTriggerByStageIndex!isValid", static_cast<bool (*)(unsigned int) >(&SimTK::SystemEventTriggerByStageIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerByStageIndex::isValid(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerByStageIndex::isValid(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("SimTK!SystemEventTriggerByStageIndex!isValid", static_cast<bool (*)(unsigned short) >(&SimTK::SystemEventTriggerByStageIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerByStageIndex::isValid(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerByStageIndex::isValid(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("SimTK!SystemEventTriggerByStageIndex!isValid", static_cast<bool (*)(unsigned long) >(&SimTK::SystemEventTriggerByStageIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerByStageIndex::isValid(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerByStageIndex::isValid(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("SimTK!SystemEventTriggerByStageIndex!isValid", static_cast<bool (*)(unsigned long long) >(&SimTK::SystemEventTriggerByStageIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerByStageIndex::isValidExtended(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerByStageIndex::isValidExtended(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("SimTK!SystemEventTriggerByStageIndex!isValidExtended", static_cast<bool (*)(int) >(&SimTK::SystemEventTriggerByStageIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerByStageIndex::isValidExtended(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerByStageIndex::isValidExtended(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("SimTK!SystemEventTriggerByStageIndex!isValidExtended", static_cast<bool (*)(short) >(&SimTK::SystemEventTriggerByStageIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerByStageIndex::isValidExtended(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerByStageIndex::isValidExtended(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("SimTK!SystemEventTriggerByStageIndex!isValidExtended", static_cast<bool (*)(long) >(&SimTK::SystemEventTriggerByStageIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemEventTriggerByStageIndex::isValidExtended(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemEventTriggerByStageIndex::isValidExtended(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("SimTK!SystemEventTriggerByStageIndex!isValidExtended", static_cast<bool (*)(long long) >(&SimTK::SystemEventTriggerByStageIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for SimTK::SystemEventTriggerByStageIndex::size_type SimTK::SystemEventTriggerByStageIndex::max_size() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemEventTriggerByStageIndex::size_type SimTK::SystemEventTriggerByStageIndex::max_size()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  t2.method("SimTK!SystemEventTriggerByStageIndex!max_size", static_cast<SimTK::SystemEventTriggerByStageIndex::size_type (*)() >(&SimTK::SystemEventTriggerByStageIndex::max_size));

  /* End of SimTK::SystemEventTriggerByStageIndex class method wrappers
   **********************************************************************/


  /**********************************************************************/
  /* Wrappers for the methods of class SimTK::EventTriggerByStageIndex
   */


  DEBUG_MSG("Adding wrapper for void SimTK::EventTriggerByStageIndex::EventTriggerByStageIndex(int) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:32
  t3.constructor<int>();


  DEBUG_MSG("Adding wrapper for void SimTK::EventTriggerByStageIndex::EventTriggerByStageIndex(long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:32
  t3.constructor<long>();


  DEBUG_MSG("Adding wrapper for void SimTK::EventTriggerByStageIndex::EventTriggerByStageIndex(long long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:32
  t3.constructor<long long>();


  DEBUG_MSG("Adding wrapper for void SimTK::EventTriggerByStageIndex::EventTriggerByStageIndex(unsigned int) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:32
  t3.constructor<unsigned int>();


  DEBUG_MSG("Adding wrapper for void SimTK::EventTriggerByStageIndex::EventTriggerByStageIndex(unsigned long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:32
  t3.constructor<unsigned long>();


  DEBUG_MSG("Adding wrapper for void SimTK::EventTriggerByStageIndex::EventTriggerByStageIndex(unsigned long long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:32
  t3.constructor<unsigned long long>();

  DEBUG_MSG("Adding wrapper for bool SimTK::EventTriggerByStageIndex::isValid() (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventTriggerByStageIndex::isValid()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("isValid", static_cast<bool (SimTK::EventTriggerByStageIndex::*)()  const>(&SimTK::EventTriggerByStageIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventTriggerByStageIndex::isValidExtended() (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventTriggerByStageIndex::isValidExtended()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("isValidExtended", static_cast<bool (SimTK::EventTriggerByStageIndex::*)()  const>(&SimTK::EventTriggerByStageIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for void SimTK::EventTriggerByStageIndex::invalidate() (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::EventTriggerByStageIndex::invalidate()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("invalidate", static_cast<void (SimTK::EventTriggerByStageIndex::*)() >(&SimTK::EventTriggerByStageIndex::invalidate));

  DEBUG_MSG("Adding wrapper for void SimTK::EventTriggerByStageIndex::clear() (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::EventTriggerByStageIndex::clear()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("clear", static_cast<void (SimTK::EventTriggerByStageIndex::*)() >(&SimTK::EventTriggerByStageIndex::clear));
  types.set_override_module(jl_base_module);

  DEBUG_MSG("Adding wrapper for bool SimTK::EventTriggerByStageIndex::operator==(const SimTK::EventTriggerByStageIndex &) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventTriggerByStageIndex::operator==(const SimTK::EventTriggerByStageIndex &)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("==", static_cast<bool (SimTK::EventTriggerByStageIndex::*)(const SimTK::EventTriggerByStageIndex &)  const>(&SimTK::EventTriggerByStageIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventTriggerByStageIndex::operator==(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventTriggerByStageIndex::operator==(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("==", static_cast<bool (SimTK::EventTriggerByStageIndex::*)(int)  const>(&SimTK::EventTriggerByStageIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventTriggerByStageIndex::operator==(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventTriggerByStageIndex::operator==(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("==", static_cast<bool (SimTK::EventTriggerByStageIndex::*)(short)  const>(&SimTK::EventTriggerByStageIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventTriggerByStageIndex::operator==(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventTriggerByStageIndex::operator==(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("==", static_cast<bool (SimTK::EventTriggerByStageIndex::*)(long)  const>(&SimTK::EventTriggerByStageIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventTriggerByStageIndex::operator==(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventTriggerByStageIndex::operator==(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("==", static_cast<bool (SimTK::EventTriggerByStageIndex::*)(long long)  const>(&SimTK::EventTriggerByStageIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventTriggerByStageIndex::operator==(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventTriggerByStageIndex::operator==(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("==", static_cast<bool (SimTK::EventTriggerByStageIndex::*)(unsigned int)  const>(&SimTK::EventTriggerByStageIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventTriggerByStageIndex::operator==(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventTriggerByStageIndex::operator==(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("==", static_cast<bool (SimTK::EventTriggerByStageIndex::*)(unsigned short)  const>(&SimTK::EventTriggerByStageIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventTriggerByStageIndex::operator==(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventTriggerByStageIndex::operator==(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("==", static_cast<bool (SimTK::EventTriggerByStageIndex::*)(unsigned long)  const>(&SimTK::EventTriggerByStageIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventTriggerByStageIndex::operator==(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventTriggerByStageIndex::operator==(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("==", static_cast<bool (SimTK::EventTriggerByStageIndex::*)(unsigned long long)  const>(&SimTK::EventTriggerByStageIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventTriggerByStageIndex::operator!=(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventTriggerByStageIndex::operator!=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("!=", static_cast<bool (SimTK::EventTriggerByStageIndex::*)(int)  const>(&SimTK::EventTriggerByStageIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventTriggerByStageIndex::operator!=(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventTriggerByStageIndex::operator!=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("!=", static_cast<bool (SimTK::EventTriggerByStageIndex::*)(short)  const>(&SimTK::EventTriggerByStageIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventTriggerByStageIndex::operator!=(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventTriggerByStageIndex::operator!=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("!=", static_cast<bool (SimTK::EventTriggerByStageIndex::*)(long)  const>(&SimTK::EventTriggerByStageIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventTriggerByStageIndex::operator!=(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventTriggerByStageIndex::operator!=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("!=", static_cast<bool (SimTK::EventTriggerByStageIndex::*)(long long)  const>(&SimTK::EventTriggerByStageIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventTriggerByStageIndex::operator!=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventTriggerByStageIndex::operator!=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("!=", static_cast<bool (SimTK::EventTriggerByStageIndex::*)(unsigned int)  const>(&SimTK::EventTriggerByStageIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventTriggerByStageIndex::operator!=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventTriggerByStageIndex::operator!=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("!=", static_cast<bool (SimTK::EventTriggerByStageIndex::*)(unsigned long)  const>(&SimTK::EventTriggerByStageIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventTriggerByStageIndex::operator!=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventTriggerByStageIndex::operator!=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("!=", static_cast<bool (SimTK::EventTriggerByStageIndex::*)(unsigned long long)  const>(&SimTK::EventTriggerByStageIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventTriggerByStageIndex::operator<(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventTriggerByStageIndex::operator<(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("<", static_cast<bool (SimTK::EventTriggerByStageIndex::*)(int)  const>(&SimTK::EventTriggerByStageIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventTriggerByStageIndex::operator<(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventTriggerByStageIndex::operator<(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("<", static_cast<bool (SimTK::EventTriggerByStageIndex::*)(short)  const>(&SimTK::EventTriggerByStageIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventTriggerByStageIndex::operator<(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventTriggerByStageIndex::operator<(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("<", static_cast<bool (SimTK::EventTriggerByStageIndex::*)(long)  const>(&SimTK::EventTriggerByStageIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventTriggerByStageIndex::operator<(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventTriggerByStageIndex::operator<(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("<", static_cast<bool (SimTK::EventTriggerByStageIndex::*)(long long)  const>(&SimTK::EventTriggerByStageIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventTriggerByStageIndex::operator<(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventTriggerByStageIndex::operator<(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("<", static_cast<bool (SimTK::EventTriggerByStageIndex::*)(unsigned int)  const>(&SimTK::EventTriggerByStageIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventTriggerByStageIndex::operator<(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventTriggerByStageIndex::operator<(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("<", static_cast<bool (SimTK::EventTriggerByStageIndex::*)(unsigned short)  const>(&SimTK::EventTriggerByStageIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventTriggerByStageIndex::operator<(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventTriggerByStageIndex::operator<(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("<", static_cast<bool (SimTK::EventTriggerByStageIndex::*)(unsigned long)  const>(&SimTK::EventTriggerByStageIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventTriggerByStageIndex::operator<(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventTriggerByStageIndex::operator<(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("<", static_cast<bool (SimTK::EventTriggerByStageIndex::*)(unsigned long long)  const>(&SimTK::EventTriggerByStageIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventTriggerByStageIndex::operator>=(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventTriggerByStageIndex::operator>=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method(">=", static_cast<bool (SimTK::EventTriggerByStageIndex::*)(int)  const>(&SimTK::EventTriggerByStageIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventTriggerByStageIndex::operator>=(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventTriggerByStageIndex::operator>=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method(">=", static_cast<bool (SimTK::EventTriggerByStageIndex::*)(short)  const>(&SimTK::EventTriggerByStageIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventTriggerByStageIndex::operator>=(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventTriggerByStageIndex::operator>=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method(">=", static_cast<bool (SimTK::EventTriggerByStageIndex::*)(long)  const>(&SimTK::EventTriggerByStageIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventTriggerByStageIndex::operator>=(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventTriggerByStageIndex::operator>=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method(">=", static_cast<bool (SimTK::EventTriggerByStageIndex::*)(long long)  const>(&SimTK::EventTriggerByStageIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventTriggerByStageIndex::operator>=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventTriggerByStageIndex::operator>=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method(">=", static_cast<bool (SimTK::EventTriggerByStageIndex::*)(unsigned int)  const>(&SimTK::EventTriggerByStageIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventTriggerByStageIndex::operator>=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventTriggerByStageIndex::operator>=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method(">=", static_cast<bool (SimTK::EventTriggerByStageIndex::*)(unsigned short)  const>(&SimTK::EventTriggerByStageIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventTriggerByStageIndex::operator>=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventTriggerByStageIndex::operator>=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method(">=", static_cast<bool (SimTK::EventTriggerByStageIndex::*)(unsigned long)  const>(&SimTK::EventTriggerByStageIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventTriggerByStageIndex::operator>=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventTriggerByStageIndex::operator>=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method(">=", static_cast<bool (SimTK::EventTriggerByStageIndex::*)(unsigned long long)  const>(&SimTK::EventTriggerByStageIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventTriggerByStageIndex::operator>(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventTriggerByStageIndex::operator>(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method(">", static_cast<bool (SimTK::EventTriggerByStageIndex::*)(int)  const>(&SimTK::EventTriggerByStageIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventTriggerByStageIndex::operator>(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventTriggerByStageIndex::operator>(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method(">", static_cast<bool (SimTK::EventTriggerByStageIndex::*)(short)  const>(&SimTK::EventTriggerByStageIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventTriggerByStageIndex::operator>(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventTriggerByStageIndex::operator>(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method(">", static_cast<bool (SimTK::EventTriggerByStageIndex::*)(long)  const>(&SimTK::EventTriggerByStageIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventTriggerByStageIndex::operator>(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventTriggerByStageIndex::operator>(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method(">", static_cast<bool (SimTK::EventTriggerByStageIndex::*)(long long)  const>(&SimTK::EventTriggerByStageIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventTriggerByStageIndex::operator>(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventTriggerByStageIndex::operator>(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method(">", static_cast<bool (SimTK::EventTriggerByStageIndex::*)(unsigned int)  const>(&SimTK::EventTriggerByStageIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventTriggerByStageIndex::operator>(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventTriggerByStageIndex::operator>(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method(">", static_cast<bool (SimTK::EventTriggerByStageIndex::*)(unsigned short)  const>(&SimTK::EventTriggerByStageIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventTriggerByStageIndex::operator>(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventTriggerByStageIndex::operator>(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method(">", static_cast<bool (SimTK::EventTriggerByStageIndex::*)(unsigned long)  const>(&SimTK::EventTriggerByStageIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventTriggerByStageIndex::operator>(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventTriggerByStageIndex::operator>(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method(">", static_cast<bool (SimTK::EventTriggerByStageIndex::*)(unsigned long long)  const>(&SimTK::EventTriggerByStageIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventTriggerByStageIndex::operator<=(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventTriggerByStageIndex::operator<=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("<=", static_cast<bool (SimTK::EventTriggerByStageIndex::*)(int)  const>(&SimTK::EventTriggerByStageIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventTriggerByStageIndex::operator<=(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventTriggerByStageIndex::operator<=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("<=", static_cast<bool (SimTK::EventTriggerByStageIndex::*)(short)  const>(&SimTK::EventTriggerByStageIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventTriggerByStageIndex::operator<=(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventTriggerByStageIndex::operator<=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("<=", static_cast<bool (SimTK::EventTriggerByStageIndex::*)(long)  const>(&SimTK::EventTriggerByStageIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventTriggerByStageIndex::operator<=(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventTriggerByStageIndex::operator<=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("<=", static_cast<bool (SimTK::EventTriggerByStageIndex::*)(long long)  const>(&SimTK::EventTriggerByStageIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventTriggerByStageIndex::operator<=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventTriggerByStageIndex::operator<=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("<=", static_cast<bool (SimTK::EventTriggerByStageIndex::*)(unsigned int)  const>(&SimTK::EventTriggerByStageIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventTriggerByStageIndex::operator<=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventTriggerByStageIndex::operator<=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("<=", static_cast<bool (SimTK::EventTriggerByStageIndex::*)(unsigned short)  const>(&SimTK::EventTriggerByStageIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventTriggerByStageIndex::operator<=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventTriggerByStageIndex::operator<=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("<=", static_cast<bool (SimTK::EventTriggerByStageIndex::*)(unsigned long)  const>(&SimTK::EventTriggerByStageIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventTriggerByStageIndex::operator<=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventTriggerByStageIndex::operator<=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("<=", static_cast<bool (SimTK::EventTriggerByStageIndex::*)(unsigned long long)  const>(&SimTK::EventTriggerByStageIndex::operator<=));
  types.unset_override_module();

  DEBUG_MSG("Adding wrapper for const SimTK::EventTriggerByStageIndex & SimTK::EventTriggerByStageIndex::operator++() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::EventTriggerByStageIndex & SimTK::EventTriggerByStageIndex::operator++()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("inc!", static_cast<const SimTK::EventTriggerByStageIndex & (SimTK::EventTriggerByStageIndex::*)() >(&SimTK::EventTriggerByStageIndex::operator++));

  DEBUG_MSG("Adding wrapper for SimTK::EventTriggerByStageIndex SimTK::EventTriggerByStageIndex::operator++(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::EventTriggerByStageIndex SimTK::EventTriggerByStageIndex::operator++(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("inc!", static_cast<SimTK::EventTriggerByStageIndex (SimTK::EventTriggerByStageIndex::*)(int) >(&SimTK::EventTriggerByStageIndex::operator++));

  DEBUG_MSG("Adding wrapper for const SimTK::EventTriggerByStageIndex & SimTK::EventTriggerByStageIndex::operator--() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::EventTriggerByStageIndex & SimTK::EventTriggerByStageIndex::operator--()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("dec!", static_cast<const SimTK::EventTriggerByStageIndex & (SimTK::EventTriggerByStageIndex::*)() >(&SimTK::EventTriggerByStageIndex::operator--));

  DEBUG_MSG("Adding wrapper for SimTK::EventTriggerByStageIndex SimTK::EventTriggerByStageIndex::operator--(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::EventTriggerByStageIndex SimTK::EventTriggerByStageIndex::operator--(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("dec!", static_cast<SimTK::EventTriggerByStageIndex (SimTK::EventTriggerByStageIndex::*)(int) >(&SimTK::EventTriggerByStageIndex::operator--));

  DEBUG_MSG("Adding wrapper for SimTK::EventTriggerByStageIndex SimTK::EventTriggerByStageIndex::next() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::EventTriggerByStageIndex SimTK::EventTriggerByStageIndex::next()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("next", static_cast<SimTK::EventTriggerByStageIndex (SimTK::EventTriggerByStageIndex::*)()  const>(&SimTK::EventTriggerByStageIndex::next));

  DEBUG_MSG("Adding wrapper for SimTK::EventTriggerByStageIndex SimTK::EventTriggerByStageIndex::prev() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::EventTriggerByStageIndex SimTK::EventTriggerByStageIndex::prev()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("prev", static_cast<SimTK::EventTriggerByStageIndex (SimTK::EventTriggerByStageIndex::*)()  const>(&SimTK::EventTriggerByStageIndex::prev));

  DEBUG_MSG("Adding wrapper for SimTK::EventTriggerByStageIndex & SimTK::EventTriggerByStageIndex::operator+=(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::EventTriggerByStageIndex & SimTK::EventTriggerByStageIndex::operator+=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("add!", static_cast<SimTK::EventTriggerByStageIndex & (SimTK::EventTriggerByStageIndex::*)(int) >(&SimTK::EventTriggerByStageIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::EventTriggerByStageIndex & SimTK::EventTriggerByStageIndex::operator-=(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::EventTriggerByStageIndex & SimTK::EventTriggerByStageIndex::operator-=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("sub!", static_cast<SimTK::EventTriggerByStageIndex & (SimTK::EventTriggerByStageIndex::*)(int) >(&SimTK::EventTriggerByStageIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::EventTriggerByStageIndex & SimTK::EventTriggerByStageIndex::operator+=(short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::EventTriggerByStageIndex & SimTK::EventTriggerByStageIndex::operator+=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("add!", static_cast<SimTK::EventTriggerByStageIndex & (SimTK::EventTriggerByStageIndex::*)(short) >(&SimTK::EventTriggerByStageIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::EventTriggerByStageIndex & SimTK::EventTriggerByStageIndex::operator-=(short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::EventTriggerByStageIndex & SimTK::EventTriggerByStageIndex::operator-=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("sub!", static_cast<SimTK::EventTriggerByStageIndex & (SimTK::EventTriggerByStageIndex::*)(short) >(&SimTK::EventTriggerByStageIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::EventTriggerByStageIndex & SimTK::EventTriggerByStageIndex::operator+=(long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::EventTriggerByStageIndex & SimTK::EventTriggerByStageIndex::operator+=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("add!", static_cast<SimTK::EventTriggerByStageIndex & (SimTK::EventTriggerByStageIndex::*)(long) >(&SimTK::EventTriggerByStageIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::EventTriggerByStageIndex & SimTK::EventTriggerByStageIndex::operator-=(long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::EventTriggerByStageIndex & SimTK::EventTriggerByStageIndex::operator-=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("sub!", static_cast<SimTK::EventTriggerByStageIndex & (SimTK::EventTriggerByStageIndex::*)(long) >(&SimTK::EventTriggerByStageIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::EventTriggerByStageIndex & SimTK::EventTriggerByStageIndex::operator+=(long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::EventTriggerByStageIndex & SimTK::EventTriggerByStageIndex::operator+=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("add!", static_cast<SimTK::EventTriggerByStageIndex & (SimTK::EventTriggerByStageIndex::*)(long long) >(&SimTK::EventTriggerByStageIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::EventTriggerByStageIndex & SimTK::EventTriggerByStageIndex::operator-=(long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::EventTriggerByStageIndex & SimTK::EventTriggerByStageIndex::operator-=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("sub!", static_cast<SimTK::EventTriggerByStageIndex & (SimTK::EventTriggerByStageIndex::*)(long long) >(&SimTK::EventTriggerByStageIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::EventTriggerByStageIndex & SimTK::EventTriggerByStageIndex::operator+=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::EventTriggerByStageIndex & SimTK::EventTriggerByStageIndex::operator+=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("add!", static_cast<SimTK::EventTriggerByStageIndex & (SimTK::EventTriggerByStageIndex::*)(unsigned int) >(&SimTK::EventTriggerByStageIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::EventTriggerByStageIndex & SimTK::EventTriggerByStageIndex::operator-=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::EventTriggerByStageIndex & SimTK::EventTriggerByStageIndex::operator-=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("sub!", static_cast<SimTK::EventTriggerByStageIndex & (SimTK::EventTriggerByStageIndex::*)(unsigned int) >(&SimTK::EventTriggerByStageIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::EventTriggerByStageIndex & SimTK::EventTriggerByStageIndex::operator+=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::EventTriggerByStageIndex & SimTK::EventTriggerByStageIndex::operator+=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("add!", static_cast<SimTK::EventTriggerByStageIndex & (SimTK::EventTriggerByStageIndex::*)(unsigned short) >(&SimTK::EventTriggerByStageIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::EventTriggerByStageIndex & SimTK::EventTriggerByStageIndex::operator-=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::EventTriggerByStageIndex & SimTK::EventTriggerByStageIndex::operator-=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("sub!", static_cast<SimTK::EventTriggerByStageIndex & (SimTK::EventTriggerByStageIndex::*)(unsigned short) >(&SimTK::EventTriggerByStageIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::EventTriggerByStageIndex & SimTK::EventTriggerByStageIndex::operator+=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::EventTriggerByStageIndex & SimTK::EventTriggerByStageIndex::operator+=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("add!", static_cast<SimTK::EventTriggerByStageIndex & (SimTK::EventTriggerByStageIndex::*)(unsigned long) >(&SimTK::EventTriggerByStageIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::EventTriggerByStageIndex & SimTK::EventTriggerByStageIndex::operator-=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::EventTriggerByStageIndex & SimTK::EventTriggerByStageIndex::operator-=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("sub!", static_cast<SimTK::EventTriggerByStageIndex & (SimTK::EventTriggerByStageIndex::*)(unsigned long) >(&SimTK::EventTriggerByStageIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::EventTriggerByStageIndex & SimTK::EventTriggerByStageIndex::operator+=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::EventTriggerByStageIndex & SimTK::EventTriggerByStageIndex::operator+=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("add!", static_cast<SimTK::EventTriggerByStageIndex & (SimTK::EventTriggerByStageIndex::*)(unsigned long long) >(&SimTK::EventTriggerByStageIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::EventTriggerByStageIndex & SimTK::EventTriggerByStageIndex::operator-=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::EventTriggerByStageIndex & SimTK::EventTriggerByStageIndex::operator-=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("sub!", static_cast<SimTK::EventTriggerByStageIndex & (SimTK::EventTriggerByStageIndex::*)(unsigned long long) >(&SimTK::EventTriggerByStageIndex::operator-=));

  DEBUG_MSG("Adding wrapper for const SimTK::EventTriggerByStageIndex & SimTK::EventTriggerByStageIndex::Invalid() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::EventTriggerByStageIndex & SimTK::EventTriggerByStageIndex::Invalid()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("SimTK!EventTriggerByStageIndex!Invalid", static_cast<const SimTK::EventTriggerByStageIndex & (*)() >(&SimTK::EventTriggerByStageIndex::Invalid));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventTriggerByStageIndex::isValid(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventTriggerByStageIndex::isValid(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("SimTK!EventTriggerByStageIndex!isValid", static_cast<bool (*)(int) >(&SimTK::EventTriggerByStageIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventTriggerByStageIndex::isValid(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventTriggerByStageIndex::isValid(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("SimTK!EventTriggerByStageIndex!isValid", static_cast<bool (*)(short) >(&SimTK::EventTriggerByStageIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventTriggerByStageIndex::isValid(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventTriggerByStageIndex::isValid(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("SimTK!EventTriggerByStageIndex!isValid", static_cast<bool (*)(long) >(&SimTK::EventTriggerByStageIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventTriggerByStageIndex::isValid(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventTriggerByStageIndex::isValid(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("SimTK!EventTriggerByStageIndex!isValid", static_cast<bool (*)(long long) >(&SimTK::EventTriggerByStageIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventTriggerByStageIndex::isValid(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventTriggerByStageIndex::isValid(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("SimTK!EventTriggerByStageIndex!isValid", static_cast<bool (*)(unsigned int) >(&SimTK::EventTriggerByStageIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventTriggerByStageIndex::isValid(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventTriggerByStageIndex::isValid(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("SimTK!EventTriggerByStageIndex!isValid", static_cast<bool (*)(unsigned short) >(&SimTK::EventTriggerByStageIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventTriggerByStageIndex::isValid(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventTriggerByStageIndex::isValid(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("SimTK!EventTriggerByStageIndex!isValid", static_cast<bool (*)(unsigned long) >(&SimTK::EventTriggerByStageIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventTriggerByStageIndex::isValid(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventTriggerByStageIndex::isValid(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("SimTK!EventTriggerByStageIndex!isValid", static_cast<bool (*)(unsigned long long) >(&SimTK::EventTriggerByStageIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventTriggerByStageIndex::isValidExtended(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventTriggerByStageIndex::isValidExtended(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("SimTK!EventTriggerByStageIndex!isValidExtended", static_cast<bool (*)(int) >(&SimTK::EventTriggerByStageIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventTriggerByStageIndex::isValidExtended(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventTriggerByStageIndex::isValidExtended(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("SimTK!EventTriggerByStageIndex!isValidExtended", static_cast<bool (*)(short) >(&SimTK::EventTriggerByStageIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventTriggerByStageIndex::isValidExtended(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventTriggerByStageIndex::isValidExtended(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("SimTK!EventTriggerByStageIndex!isValidExtended", static_cast<bool (*)(long) >(&SimTK::EventTriggerByStageIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventTriggerByStageIndex::isValidExtended(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventTriggerByStageIndex::isValidExtended(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("SimTK!EventTriggerByStageIndex!isValidExtended", static_cast<bool (*)(long long) >(&SimTK::EventTriggerByStageIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for SimTK::EventTriggerByStageIndex::size_type SimTK::EventTriggerByStageIndex::max_size() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::EventTriggerByStageIndex::size_type SimTK::EventTriggerByStageIndex::max_size()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  t3.method("SimTK!EventTriggerByStageIndex!max_size", static_cast<SimTK::EventTriggerByStageIndex::size_type (*)() >(&SimTK::EventTriggerByStageIndex::max_size));

  /* End of SimTK::EventTriggerByStageIndex class method wrappers
   **********************************************************************/


  /**********************************************************************/
  /* Wrappers for the methods of class SimTK::Event
   */

  DEBUG_MSG("Adding wrapper for const char * SimTK::Event::getCauseName(SimTK::Event::Cause) (" __HERE__ ")");
  // signature to use in the veto list: const char * SimTK::Event::getCauseName(SimTK::Event::Cause)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:151:49
  t4.method("SimTK!Event!getCauseName", static_cast<const char * (*)(SimTK::Event::Cause) >(&SimTK::Event::getCauseName));

  DEBUG_MSG("Adding wrapper for std::string SimTK::Event::eventTriggerString(SimTK::Event::Trigger) (" __HERE__ ")");
  // signature to use in the veto list: std::string SimTK::Event::eventTriggerString(SimTK::Event::Trigger)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:171:49
  t4.method("SimTK!Event!eventTriggerString", static_cast<std::string (*)(SimTK::Event::Trigger) >(&SimTK::Event::eventTriggerString));

  DEBUG_MSG("Adding wrapper for SimTK::Event::Trigger SimTK::Event::classifyTransition(int, int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Event::Trigger SimTK::Event::classifyTransition(int, int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:177:20
  t4.method("SimTK!Event!classifyTransition", static_cast<SimTK::Event::Trigger (*)(int, int) >(&SimTK::Event::classifyTransition));

  DEBUG_MSG("Adding wrapper for SimTK::Event::Trigger SimTK::Event::maskTransition(SimTK::Event::Trigger, SimTK::Event::Trigger) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Event::Trigger SimTK::Event::maskTransition(SimTK::Event::Trigger, SimTK::Event::Trigger)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:191:20
  t4.method("SimTK!Event!maskTransition", static_cast<SimTK::Event::Trigger (*)(SimTK::Event::Trigger, SimTK::Event::Trigger) >(&SimTK::Event::maskTransition));

  /* End of SimTK::Event class method wrappers
   **********************************************************************/


  /**********************************************************************/
  /* Wrappers for the methods of class SimTK::Event::Cause
   */


  DEBUG_MSG("Adding wrapper for void SimTK::Event::Cause::Cause(SimTK::Event::Cause::Num) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:139:9
  t5.constructor<SimTK::Event::Cause::Num>();

  DEBUG_MSG("Adding wrapper for SimTK::Event::Cause & SimTK::Event::Cause::operator=(SimTK::Event::Cause::Num) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Event::Cause & SimTK::Event::Cause::operator=(SimTK::Event::Cause::Num)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:141:16
  t5.method("assign", static_cast<SimTK::Event::Cause & (SimTK::Event::Cause::*)(SimTK::Event::Cause::Num) >(&SimTK::Event::Cause::operator=));

  DEBUG_MSG("Adding wrapper for bool SimTK::Event::Cause::isValid() (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::Event::Cause::isValid()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:143:14
  t5.method("isValid", static_cast<bool (SimTK::Event::Cause::*)()  const>(&SimTK::Event::Cause::isValid));

  /* End of SimTK::Event::Cause class method wrappers
   **********************************************************************/


  /**********************************************************************/
  /* Wrappers for the methods of class SimTK::EventTriggerInfo
   */


  DEBUG_MSG("Adding wrapper for void SimTK::EventTriggerInfo::EventTriggerInfo(SimTK::EventId) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:212:14
  t8.constructor<SimTK::EventId>();


  DEBUG_MSG("Adding wrapper for void SimTK::EventTriggerInfo::EventTriggerInfo(const SimTK::EventTriggerInfo &) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:214:5
  t8.constructor<const SimTK::EventTriggerInfo &>();

  DEBUG_MSG("Adding wrapper for SimTK::EventTriggerInfo & SimTK::EventTriggerInfo::operator=(const SimTK::EventTriggerInfo &) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::EventTriggerInfo & SimTK::EventTriggerInfo::operator=(const SimTK::EventTriggerInfo &)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:215:23
  t8.method("assign", static_cast<SimTK::EventTriggerInfo & (SimTK::EventTriggerInfo::*)(const SimTK::EventTriggerInfo &) >(&SimTK::EventTriggerInfo::operator=));

  DEBUG_MSG("Adding wrapper for SimTK::EventId SimTK::EventTriggerInfo::getEventId() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::EventId SimTK::EventTriggerInfo::getEventId()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:217:13
  t8.method("getEventId", static_cast<SimTK::EventId (SimTK::EventTriggerInfo::*)()  const>(&SimTK::EventTriggerInfo::getEventId));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventTriggerInfo::shouldTriggerOnRisingSignTransition() (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventTriggerInfo::shouldTriggerOnRisingSignTransition()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:218:10
  t8.method("shouldTriggerOnRisingSignTransition", static_cast<bool (SimTK::EventTriggerInfo::*)()  const>(&SimTK::EventTriggerInfo::shouldTriggerOnRisingSignTransition));

  DEBUG_MSG("Adding wrapper for bool SimTK::EventTriggerInfo::shouldTriggerOnFallingSignTransition() (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::EventTriggerInfo::shouldTriggerOnFallingSignTransition()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:219:10
  t8.method("shouldTriggerOnFallingSignTransition", static_cast<bool (SimTK::EventTriggerInfo::*)()  const>(&SimTK::EventTriggerInfo::shouldTriggerOnFallingSignTransition));

  DEBUG_MSG("Adding wrapper for SimTK::Real SimTK::EventTriggerInfo::getRequiredLocalizationTimeWindow() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Real SimTK::EventTriggerInfo::getRequiredLocalizationTimeWindow()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:220:10
  t8.method("getRequiredLocalizationTimeWindow", static_cast<SimTK::Real (SimTK::EventTriggerInfo::*)()  const>(&SimTK::EventTriggerInfo::getRequiredLocalizationTimeWindow));

  DEBUG_MSG("Adding wrapper for SimTK::EventTriggerInfo & SimTK::EventTriggerInfo::setEventId(SimTK::EventId) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::EventTriggerInfo & SimTK::EventTriggerInfo::setEventId(SimTK::EventId)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:223:23
  t8.method("setEventId", static_cast<SimTK::EventTriggerInfo & (SimTK::EventTriggerInfo::*)(SimTK::EventId) >(&SimTK::EventTriggerInfo::setEventId));

  DEBUG_MSG("Adding wrapper for SimTK::EventTriggerInfo & SimTK::EventTriggerInfo::setTriggerOnRisingSignTransition(bool) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::EventTriggerInfo & SimTK::EventTriggerInfo::setTriggerOnRisingSignTransition(bool)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:224:23
  t8.method("setTriggerOnRisingSignTransition", static_cast<SimTK::EventTriggerInfo & (SimTK::EventTriggerInfo::*)(bool) >(&SimTK::EventTriggerInfo::setTriggerOnRisingSignTransition));

  DEBUG_MSG("Adding wrapper for SimTK::EventTriggerInfo & SimTK::EventTriggerInfo::setTriggerOnFallingSignTransition(bool) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::EventTriggerInfo & SimTK::EventTriggerInfo::setTriggerOnFallingSignTransition(bool)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:225:23
  t8.method("setTriggerOnFallingSignTransition", static_cast<SimTK::EventTriggerInfo & (SimTK::EventTriggerInfo::*)(bool) >(&SimTK::EventTriggerInfo::setTriggerOnFallingSignTransition));

  DEBUG_MSG("Adding wrapper for SimTK::EventTriggerInfo & SimTK::EventTriggerInfo::setRequiredLocalizationTimeWindow(SimTK::Real) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::EventTriggerInfo & SimTK::EventTriggerInfo::setRequiredLocalizationTimeWindow(SimTK::Real)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:226:23
  t8.method("setRequiredLocalizationTimeWindow", static_cast<SimTK::EventTriggerInfo & (SimTK::EventTriggerInfo::*)(SimTK::Real) >(&SimTK::EventTriggerInfo::setRequiredLocalizationTimeWindow));

  DEBUG_MSG("Adding wrapper for SimTK::Event::Trigger SimTK::EventTriggerInfo::calcTransitionMask() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Event::Trigger SimTK::EventTriggerInfo::calcTransitionMask()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:228:20
  t8.method("calcTransitionMask", static_cast<SimTK::Event::Trigger (SimTK::EventTriggerInfo::*)()  const>(&SimTK::EventTriggerInfo::calcTransitionMask));

  DEBUG_MSG("Adding wrapper for SimTK::Event::Trigger SimTK::EventTriggerInfo::calcTransitionToReport(SimTK::Event::Trigger) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Event::Trigger SimTK::EventTriggerInfo::calcTransitionToReport(SimTK::Event::Trigger)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:239:20
  t8.method("calcTransitionToReport", static_cast<SimTK::Event::Trigger (SimTK::EventTriggerInfo::*)(SimTK::Event::Trigger)  const>(&SimTK::EventTriggerInfo::calcTransitionToReport));

  /* End of SimTK::EventTriggerInfo class method wrappers
   **********************************************************************/


  /**********************************************************************/
  /* Wrappers for the methods of class SimTK::HandleEventsOptions
   */


  DEBUG_MSG("Adding wrapper for void SimTK::HandleEventsOptions::HandleEventsOptions(SimTK::Real) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:285:14
  t9.constructor<SimTK::Real>();


  DEBUG_MSG("Adding wrapper for void SimTK::HandleEventsOptions::HandleEventsOptions(SimTK::HandleEventsOptions::Option) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:287:14
  t9.constructor<SimTK::HandleEventsOptions::Option>();

  DEBUG_MSG("Adding wrapper for SimTK::HandleEventsOptions & SimTK::HandleEventsOptions::clear() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::HandleEventsOptions & SimTK::HandleEventsOptions::clear()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:293:26
  t9.method("clear", static_cast<SimTK::HandleEventsOptions & (SimTK::HandleEventsOptions::*)() >(&SimTK::HandleEventsOptions::clear));

  DEBUG_MSG("Adding wrapper for SimTK::HandleEventsOptions & SimTK::HandleEventsOptions::setAccuracy(SimTK::Real) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::HandleEventsOptions & SimTK::HandleEventsOptions::setAccuracy(SimTK::Real)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:299:26
  t9.method("setAccuracy", static_cast<SimTK::HandleEventsOptions & (SimTK::HandleEventsOptions::*)(SimTK::Real) >(&SimTK::HandleEventsOptions::setAccuracy));

  DEBUG_MSG("Adding wrapper for SimTK::HandleEventsOptions & SimTK::HandleEventsOptions::clearOption(SimTK::HandleEventsOptions::Option) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::HandleEventsOptions & SimTK::HandleEventsOptions::clearOption(SimTK::HandleEventsOptions::Option)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:307:26
  t9.method("clearOption", static_cast<SimTK::HandleEventsOptions & (SimTK::HandleEventsOptions::*)(SimTK::HandleEventsOptions::Option) >(&SimTK::HandleEventsOptions::clearOption));

  DEBUG_MSG("Adding wrapper for SimTK::HandleEventsOptions & SimTK::HandleEventsOptions::setOption(SimTK::HandleEventsOptions::Option) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::HandleEventsOptions & SimTK::HandleEventsOptions::setOption(SimTK::HandleEventsOptions::Option)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:311:26
  t9.method("setOption", static_cast<SimTK::HandleEventsOptions & (SimTK::HandleEventsOptions::*)(SimTK::HandleEventsOptions::Option) >(&SimTK::HandleEventsOptions::setOption));

  DEBUG_MSG("Adding wrapper for SimTK::Real SimTK::HandleEventsOptions::getAccuracy() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Real SimTK::HandleEventsOptions::getAccuracy()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:315:10
  t9.method("getAccuracy", static_cast<SimTK::Real (SimTK::HandleEventsOptions::*)()  const>(&SimTK::HandleEventsOptions::getAccuracy));

  DEBUG_MSG("Adding wrapper for bool SimTK::HandleEventsOptions::isOptionSet(SimTK::HandleEventsOptions::Option) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::HandleEventsOptions::isOptionSet(SimTK::HandleEventsOptions::Option)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:317:10
  t9.method("isOptionSet", static_cast<bool (SimTK::HandleEventsOptions::*)(SimTK::HandleEventsOptions::Option)  const>(&SimTK::HandleEventsOptions::isOptionSet));

  DEBUG_MSG("Adding wrapper for SimTK::Real SimTK::HandleEventsOptions::getDefaultAccuracy() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Real SimTK::HandleEventsOptions::getDefaultAccuracy()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:319:17
  t9.method("SimTK!HandleEventsOptions!getDefaultAccuracy", static_cast<SimTK::Real (*)() >(&SimTK::HandleEventsOptions::getDefaultAccuracy));

  DEBUG_MSG("Adding wrapper for SimTK::HandleEventsOptions & SimTK::HandleEventsOptions::operator|=(const SimTK::HandleEventsOptions &) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::HandleEventsOptions & SimTK::HandleEventsOptions::operator|=(const SimTK::HandleEventsOptions &)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:322:26
  t9.method("bwor!", static_cast<SimTK::HandleEventsOptions & (SimTK::HandleEventsOptions::*)(const SimTK::HandleEventsOptions &) >(&SimTK::HandleEventsOptions::operator|=));

  DEBUG_MSG("Adding wrapper for SimTK::HandleEventsOptions & SimTK::HandleEventsOptions::operator&=(const SimTK::HandleEventsOptions &) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::HandleEventsOptions & SimTK::HandleEventsOptions::operator&=(const SimTK::HandleEventsOptions &)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:324:26
  t9.method("bwand!", static_cast<SimTK::HandleEventsOptions & (SimTK::HandleEventsOptions::*)(const SimTK::HandleEventsOptions &) >(&SimTK::HandleEventsOptions::operator&=));

  DEBUG_MSG("Adding wrapper for SimTK::HandleEventsOptions & SimTK::HandleEventsOptions::operator-=(const SimTK::HandleEventsOptions &) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::HandleEventsOptions & SimTK::HandleEventsOptions::operator-=(const SimTK::HandleEventsOptions &)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:326:26
  t9.method("sub!", static_cast<SimTK::HandleEventsOptions & (SimTK::HandleEventsOptions::*)(const SimTK::HandleEventsOptions &) >(&SimTK::HandleEventsOptions::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::HandleEventsOptions & SimTK::HandleEventsOptions::operator|=(SimTK::HandleEventsOptions::Option) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::HandleEventsOptions & SimTK::HandleEventsOptions::operator|=(SimTK::HandleEventsOptions::Option)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:329:26
  t9.method("bwor!", static_cast<SimTK::HandleEventsOptions & (SimTK::HandleEventsOptions::*)(SimTK::HandleEventsOptions::Option) >(&SimTK::HandleEventsOptions::operator|=));

  DEBUG_MSG("Adding wrapper for SimTK::HandleEventsOptions & SimTK::HandleEventsOptions::operator-=(SimTK::HandleEventsOptions::Option) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::HandleEventsOptions & SimTK::HandleEventsOptions::operator-=(SimTK::HandleEventsOptions::Option)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:330:26
  t9.method("sub!", static_cast<SimTK::HandleEventsOptions & (SimTK::HandleEventsOptions::*)(SimTK::HandleEventsOptions::Option) >(&SimTK::HandleEventsOptions::operator-=));

  /* End of SimTK::HandleEventsOptions class method wrappers
   **********************************************************************/


  /**********************************************************************/
  /* Wrappers for the methods of class SimTK::HandleEventsResults
   */

  DEBUG_MSG("Adding wrapper for SimTK::HandleEventsResults & SimTK::HandleEventsResults::clear() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::HandleEventsResults & SimTK::HandleEventsResults::clear()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:367:26
  t11.method("clear", static_cast<SimTK::HandleEventsResults & (SimTK::HandleEventsResults::*)() >(&SimTK::HandleEventsResults::clear));

  DEBUG_MSG("Adding wrapper for bool SimTK::HandleEventsResults::isValid() (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::HandleEventsResults::isValid()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:374:13
  t11.method("isValid", static_cast<bool (SimTK::HandleEventsResults::*)()  const>(&SimTK::HandleEventsResults::isValid));

  DEBUG_MSG("Adding wrapper for SimTK::HandleEventsResults::Status SimTK::HandleEventsResults::getExitStatus() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::HandleEventsResults::Status SimTK::HandleEventsResults::getExitStatus()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:375:13
  t11.method("getExitStatus", static_cast<SimTK::HandleEventsResults::Status (SimTK::HandleEventsResults::*)()  const>(&SimTK::HandleEventsResults::getExitStatus));

  DEBUG_MSG("Adding wrapper for bool SimTK::HandleEventsResults::getAnyChangeMade() (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::HandleEventsResults::getAnyChangeMade()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:377:10
  t11.method("getAnyChangeMade", static_cast<bool (SimTK::HandleEventsResults::*)()  const>(&SimTK::HandleEventsResults::getAnyChangeMade));

  DEBUG_MSG("Adding wrapper for SimTK::Stage SimTK::HandleEventsResults::getLowestModifiedStage() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Stage SimTK::HandleEventsResults::getLowestModifiedStage()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:379:11
  t11.method("getLowestModifiedStage", static_cast<SimTK::Stage (SimTK::HandleEventsResults::*)()  const>(&SimTK::HandleEventsResults::getLowestModifiedStage));

  DEBUG_MSG("Adding wrapper for const SimTK::String & SimTK::HandleEventsResults::getMessage() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::String & SimTK::HandleEventsResults::getMessage()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:381:19
  t11.method("getMessage", static_cast<const SimTK::String & (SimTK::HandleEventsResults::*)()  const>(&SimTK::HandleEventsResults::getMessage));

  DEBUG_MSG("Adding wrapper for SimTK::HandleEventsResults & SimTK::HandleEventsResults::setExitStatus(SimTK::HandleEventsResults::Status) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::HandleEventsResults & SimTK::HandleEventsResults::setExitStatus(SimTK::HandleEventsResults::Status)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:384:26
  t11.method("setExitStatus", static_cast<SimTK::HandleEventsResults & (SimTK::HandleEventsResults::*)(SimTK::HandleEventsResults::Status) >(&SimTK::HandleEventsResults::setExitStatus));

  DEBUG_MSG("Adding wrapper for SimTK::HandleEventsResults & SimTK::HandleEventsResults::setAnyChangeMade(bool) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::HandleEventsResults & SimTK::HandleEventsResults::setAnyChangeMade(bool)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:386:26
  t11.method("setAnyChangeMade", static_cast<SimTK::HandleEventsResults & (SimTK::HandleEventsResults::*)(bool) >(&SimTK::HandleEventsResults::setAnyChangeMade));

  DEBUG_MSG("Adding wrapper for SimTK::HandleEventsResults & SimTK::HandleEventsResults::setLowestModifiedStage(SimTK::Stage) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::HandleEventsResults & SimTK::HandleEventsResults::setLowestModifiedStage(SimTK::Stage)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:388:26
  t11.method("setLowestModifiedStage", static_cast<SimTK::HandleEventsResults & (SimTK::HandleEventsResults::*)(SimTK::Stage) >(&SimTK::HandleEventsResults::setLowestModifiedStage));

  DEBUG_MSG("Adding wrapper for SimTK::HandleEventsResults & SimTK::HandleEventsResults::setMessage(const SimTK::String &) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::HandleEventsResults & SimTK::HandleEventsResults::setMessage(const SimTK::String &)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:390:26
  t11.method("setMessage", static_cast<SimTK::HandleEventsResults & (SimTK::HandleEventsResults::*)(const SimTK::String &) >(&SimTK::HandleEventsResults::setMessage));

  /* End of SimTK::HandleEventsResults class method wrappers
   **********************************************************************/


  /**********************************************************************/
  /* Wrappers for the methods of class SimTK::SubsystemIndex
   */


  DEBUG_MSG("Adding wrapper for void SimTK::SubsystemIndex::SubsystemIndex(int) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:32
  t15.constructor<int>();


  DEBUG_MSG("Adding wrapper for void SimTK::SubsystemIndex::SubsystemIndex(long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:32
  t15.constructor<long>();


  DEBUG_MSG("Adding wrapper for void SimTK::SubsystemIndex::SubsystemIndex(long long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:32
  t15.constructor<long long>();


  DEBUG_MSG("Adding wrapper for void SimTK::SubsystemIndex::SubsystemIndex(unsigned int) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:32
  t15.constructor<unsigned int>();


  DEBUG_MSG("Adding wrapper for void SimTK::SubsystemIndex::SubsystemIndex(unsigned long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:32
  t15.constructor<unsigned long>();


  DEBUG_MSG("Adding wrapper for void SimTK::SubsystemIndex::SubsystemIndex(unsigned long long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:32
  t15.constructor<unsigned long long>();

  DEBUG_MSG("Adding wrapper for bool SimTK::SubsystemIndex::isValid() (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SubsystemIndex::isValid()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("isValid", static_cast<bool (SimTK::SubsystemIndex::*)()  const>(&SimTK::SubsystemIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SubsystemIndex::isValidExtended() (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SubsystemIndex::isValidExtended()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("isValidExtended", static_cast<bool (SimTK::SubsystemIndex::*)()  const>(&SimTK::SubsystemIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for void SimTK::SubsystemIndex::invalidate() (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::SubsystemIndex::invalidate()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("invalidate", static_cast<void (SimTK::SubsystemIndex::*)() >(&SimTK::SubsystemIndex::invalidate));

  DEBUG_MSG("Adding wrapper for void SimTK::SubsystemIndex::clear() (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::SubsystemIndex::clear()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("clear", static_cast<void (SimTK::SubsystemIndex::*)() >(&SimTK::SubsystemIndex::clear));
  types.set_override_module(jl_base_module);

  DEBUG_MSG("Adding wrapper for bool SimTK::SubsystemIndex::operator==(const SimTK::SubsystemIndex &) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SubsystemIndex::operator==(const SimTK::SubsystemIndex &)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("==", static_cast<bool (SimTK::SubsystemIndex::*)(const SimTK::SubsystemIndex &)  const>(&SimTK::SubsystemIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SubsystemIndex::operator==(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SubsystemIndex::operator==(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("==", static_cast<bool (SimTK::SubsystemIndex::*)(int)  const>(&SimTK::SubsystemIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SubsystemIndex::operator==(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SubsystemIndex::operator==(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("==", static_cast<bool (SimTK::SubsystemIndex::*)(short)  const>(&SimTK::SubsystemIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SubsystemIndex::operator==(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SubsystemIndex::operator==(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("==", static_cast<bool (SimTK::SubsystemIndex::*)(long)  const>(&SimTK::SubsystemIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SubsystemIndex::operator==(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SubsystemIndex::operator==(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("==", static_cast<bool (SimTK::SubsystemIndex::*)(long long)  const>(&SimTK::SubsystemIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SubsystemIndex::operator==(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SubsystemIndex::operator==(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("==", static_cast<bool (SimTK::SubsystemIndex::*)(unsigned int)  const>(&SimTK::SubsystemIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SubsystemIndex::operator==(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SubsystemIndex::operator==(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("==", static_cast<bool (SimTK::SubsystemIndex::*)(unsigned short)  const>(&SimTK::SubsystemIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SubsystemIndex::operator==(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SubsystemIndex::operator==(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("==", static_cast<bool (SimTK::SubsystemIndex::*)(unsigned long)  const>(&SimTK::SubsystemIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SubsystemIndex::operator==(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SubsystemIndex::operator==(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("==", static_cast<bool (SimTK::SubsystemIndex::*)(unsigned long long)  const>(&SimTK::SubsystemIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SubsystemIndex::operator!=(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SubsystemIndex::operator!=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("!=", static_cast<bool (SimTK::SubsystemIndex::*)(int)  const>(&SimTK::SubsystemIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SubsystemIndex::operator!=(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SubsystemIndex::operator!=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("!=", static_cast<bool (SimTK::SubsystemIndex::*)(short)  const>(&SimTK::SubsystemIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SubsystemIndex::operator!=(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SubsystemIndex::operator!=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("!=", static_cast<bool (SimTK::SubsystemIndex::*)(long)  const>(&SimTK::SubsystemIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SubsystemIndex::operator!=(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SubsystemIndex::operator!=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("!=", static_cast<bool (SimTK::SubsystemIndex::*)(long long)  const>(&SimTK::SubsystemIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SubsystemIndex::operator!=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SubsystemIndex::operator!=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("!=", static_cast<bool (SimTK::SubsystemIndex::*)(unsigned int)  const>(&SimTK::SubsystemIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SubsystemIndex::operator!=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SubsystemIndex::operator!=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("!=", static_cast<bool (SimTK::SubsystemIndex::*)(unsigned long)  const>(&SimTK::SubsystemIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SubsystemIndex::operator!=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SubsystemIndex::operator!=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("!=", static_cast<bool (SimTK::SubsystemIndex::*)(unsigned long long)  const>(&SimTK::SubsystemIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SubsystemIndex::operator<(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SubsystemIndex::operator<(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("<", static_cast<bool (SimTK::SubsystemIndex::*)(int)  const>(&SimTK::SubsystemIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SubsystemIndex::operator<(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SubsystemIndex::operator<(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("<", static_cast<bool (SimTK::SubsystemIndex::*)(short)  const>(&SimTK::SubsystemIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SubsystemIndex::operator<(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SubsystemIndex::operator<(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("<", static_cast<bool (SimTK::SubsystemIndex::*)(long)  const>(&SimTK::SubsystemIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SubsystemIndex::operator<(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SubsystemIndex::operator<(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("<", static_cast<bool (SimTK::SubsystemIndex::*)(long long)  const>(&SimTK::SubsystemIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SubsystemIndex::operator<(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SubsystemIndex::operator<(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("<", static_cast<bool (SimTK::SubsystemIndex::*)(unsigned int)  const>(&SimTK::SubsystemIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SubsystemIndex::operator<(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SubsystemIndex::operator<(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("<", static_cast<bool (SimTK::SubsystemIndex::*)(unsigned short)  const>(&SimTK::SubsystemIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SubsystemIndex::operator<(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SubsystemIndex::operator<(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("<", static_cast<bool (SimTK::SubsystemIndex::*)(unsigned long)  const>(&SimTK::SubsystemIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SubsystemIndex::operator<(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SubsystemIndex::operator<(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("<", static_cast<bool (SimTK::SubsystemIndex::*)(unsigned long long)  const>(&SimTK::SubsystemIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SubsystemIndex::operator>=(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SubsystemIndex::operator>=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method(">=", static_cast<bool (SimTK::SubsystemIndex::*)(int)  const>(&SimTK::SubsystemIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SubsystemIndex::operator>=(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SubsystemIndex::operator>=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method(">=", static_cast<bool (SimTK::SubsystemIndex::*)(short)  const>(&SimTK::SubsystemIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SubsystemIndex::operator>=(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SubsystemIndex::operator>=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method(">=", static_cast<bool (SimTK::SubsystemIndex::*)(long)  const>(&SimTK::SubsystemIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SubsystemIndex::operator>=(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SubsystemIndex::operator>=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method(">=", static_cast<bool (SimTK::SubsystemIndex::*)(long long)  const>(&SimTK::SubsystemIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SubsystemIndex::operator>=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SubsystemIndex::operator>=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method(">=", static_cast<bool (SimTK::SubsystemIndex::*)(unsigned int)  const>(&SimTK::SubsystemIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SubsystemIndex::operator>=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SubsystemIndex::operator>=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method(">=", static_cast<bool (SimTK::SubsystemIndex::*)(unsigned short)  const>(&SimTK::SubsystemIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SubsystemIndex::operator>=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SubsystemIndex::operator>=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method(">=", static_cast<bool (SimTK::SubsystemIndex::*)(unsigned long)  const>(&SimTK::SubsystemIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SubsystemIndex::operator>=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SubsystemIndex::operator>=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method(">=", static_cast<bool (SimTK::SubsystemIndex::*)(unsigned long long)  const>(&SimTK::SubsystemIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SubsystemIndex::operator>(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SubsystemIndex::operator>(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method(">", static_cast<bool (SimTK::SubsystemIndex::*)(int)  const>(&SimTK::SubsystemIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SubsystemIndex::operator>(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SubsystemIndex::operator>(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method(">", static_cast<bool (SimTK::SubsystemIndex::*)(short)  const>(&SimTK::SubsystemIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SubsystemIndex::operator>(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SubsystemIndex::operator>(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method(">", static_cast<bool (SimTK::SubsystemIndex::*)(long)  const>(&SimTK::SubsystemIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SubsystemIndex::operator>(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SubsystemIndex::operator>(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method(">", static_cast<bool (SimTK::SubsystemIndex::*)(long long)  const>(&SimTK::SubsystemIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SubsystemIndex::operator>(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SubsystemIndex::operator>(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method(">", static_cast<bool (SimTK::SubsystemIndex::*)(unsigned int)  const>(&SimTK::SubsystemIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SubsystemIndex::operator>(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SubsystemIndex::operator>(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method(">", static_cast<bool (SimTK::SubsystemIndex::*)(unsigned short)  const>(&SimTK::SubsystemIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SubsystemIndex::operator>(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SubsystemIndex::operator>(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method(">", static_cast<bool (SimTK::SubsystemIndex::*)(unsigned long)  const>(&SimTK::SubsystemIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SubsystemIndex::operator>(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SubsystemIndex::operator>(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method(">", static_cast<bool (SimTK::SubsystemIndex::*)(unsigned long long)  const>(&SimTK::SubsystemIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SubsystemIndex::operator<=(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SubsystemIndex::operator<=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("<=", static_cast<bool (SimTK::SubsystemIndex::*)(int)  const>(&SimTK::SubsystemIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SubsystemIndex::operator<=(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SubsystemIndex::operator<=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("<=", static_cast<bool (SimTK::SubsystemIndex::*)(short)  const>(&SimTK::SubsystemIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SubsystemIndex::operator<=(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SubsystemIndex::operator<=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("<=", static_cast<bool (SimTK::SubsystemIndex::*)(long)  const>(&SimTK::SubsystemIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SubsystemIndex::operator<=(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SubsystemIndex::operator<=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("<=", static_cast<bool (SimTK::SubsystemIndex::*)(long long)  const>(&SimTK::SubsystemIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SubsystemIndex::operator<=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SubsystemIndex::operator<=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("<=", static_cast<bool (SimTK::SubsystemIndex::*)(unsigned int)  const>(&SimTK::SubsystemIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SubsystemIndex::operator<=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SubsystemIndex::operator<=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("<=", static_cast<bool (SimTK::SubsystemIndex::*)(unsigned short)  const>(&SimTK::SubsystemIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SubsystemIndex::operator<=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SubsystemIndex::operator<=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("<=", static_cast<bool (SimTK::SubsystemIndex::*)(unsigned long)  const>(&SimTK::SubsystemIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SubsystemIndex::operator<=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SubsystemIndex::operator<=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("<=", static_cast<bool (SimTK::SubsystemIndex::*)(unsigned long long)  const>(&SimTK::SubsystemIndex::operator<=));
  types.unset_override_module();

  DEBUG_MSG("Adding wrapper for const SimTK::SubsystemIndex & SimTK::SubsystemIndex::operator++() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::SubsystemIndex & SimTK::SubsystemIndex::operator++()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("inc!", static_cast<const SimTK::SubsystemIndex & (SimTK::SubsystemIndex::*)() >(&SimTK::SubsystemIndex::operator++));

  DEBUG_MSG("Adding wrapper for SimTK::SubsystemIndex SimTK::SubsystemIndex::operator++(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SubsystemIndex SimTK::SubsystemIndex::operator++(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("inc!", static_cast<SimTK::SubsystemIndex (SimTK::SubsystemIndex::*)(int) >(&SimTK::SubsystemIndex::operator++));

  DEBUG_MSG("Adding wrapper for const SimTK::SubsystemIndex & SimTK::SubsystemIndex::operator--() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::SubsystemIndex & SimTK::SubsystemIndex::operator--()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("dec!", static_cast<const SimTK::SubsystemIndex & (SimTK::SubsystemIndex::*)() >(&SimTK::SubsystemIndex::operator--));

  DEBUG_MSG("Adding wrapper for SimTK::SubsystemIndex SimTK::SubsystemIndex::operator--(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SubsystemIndex SimTK::SubsystemIndex::operator--(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("dec!", static_cast<SimTK::SubsystemIndex (SimTK::SubsystemIndex::*)(int) >(&SimTK::SubsystemIndex::operator--));

  DEBUG_MSG("Adding wrapper for SimTK::SubsystemIndex SimTK::SubsystemIndex::next() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SubsystemIndex SimTK::SubsystemIndex::next()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("next", static_cast<SimTK::SubsystemIndex (SimTK::SubsystemIndex::*)()  const>(&SimTK::SubsystemIndex::next));

  DEBUG_MSG("Adding wrapper for SimTK::SubsystemIndex SimTK::SubsystemIndex::prev() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SubsystemIndex SimTK::SubsystemIndex::prev()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("prev", static_cast<SimTK::SubsystemIndex (SimTK::SubsystemIndex::*)()  const>(&SimTK::SubsystemIndex::prev));

  DEBUG_MSG("Adding wrapper for SimTK::SubsystemIndex & SimTK::SubsystemIndex::operator+=(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SubsystemIndex & SimTK::SubsystemIndex::operator+=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("add!", static_cast<SimTK::SubsystemIndex & (SimTK::SubsystemIndex::*)(int) >(&SimTK::SubsystemIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SubsystemIndex & SimTK::SubsystemIndex::operator-=(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SubsystemIndex & SimTK::SubsystemIndex::operator-=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("sub!", static_cast<SimTK::SubsystemIndex & (SimTK::SubsystemIndex::*)(int) >(&SimTK::SubsystemIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SubsystemIndex & SimTK::SubsystemIndex::operator+=(short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SubsystemIndex & SimTK::SubsystemIndex::operator+=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("add!", static_cast<SimTK::SubsystemIndex & (SimTK::SubsystemIndex::*)(short) >(&SimTK::SubsystemIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SubsystemIndex & SimTK::SubsystemIndex::operator-=(short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SubsystemIndex & SimTK::SubsystemIndex::operator-=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("sub!", static_cast<SimTK::SubsystemIndex & (SimTK::SubsystemIndex::*)(short) >(&SimTK::SubsystemIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SubsystemIndex & SimTK::SubsystemIndex::operator+=(long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SubsystemIndex & SimTK::SubsystemIndex::operator+=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("add!", static_cast<SimTK::SubsystemIndex & (SimTK::SubsystemIndex::*)(long) >(&SimTK::SubsystemIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SubsystemIndex & SimTK::SubsystemIndex::operator-=(long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SubsystemIndex & SimTK::SubsystemIndex::operator-=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("sub!", static_cast<SimTK::SubsystemIndex & (SimTK::SubsystemIndex::*)(long) >(&SimTK::SubsystemIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SubsystemIndex & SimTK::SubsystemIndex::operator+=(long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SubsystemIndex & SimTK::SubsystemIndex::operator+=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("add!", static_cast<SimTK::SubsystemIndex & (SimTK::SubsystemIndex::*)(long long) >(&SimTK::SubsystemIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SubsystemIndex & SimTK::SubsystemIndex::operator-=(long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SubsystemIndex & SimTK::SubsystemIndex::operator-=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("sub!", static_cast<SimTK::SubsystemIndex & (SimTK::SubsystemIndex::*)(long long) >(&SimTK::SubsystemIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SubsystemIndex & SimTK::SubsystemIndex::operator+=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SubsystemIndex & SimTK::SubsystemIndex::operator+=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("add!", static_cast<SimTK::SubsystemIndex & (SimTK::SubsystemIndex::*)(unsigned int) >(&SimTK::SubsystemIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SubsystemIndex & SimTK::SubsystemIndex::operator-=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SubsystemIndex & SimTK::SubsystemIndex::operator-=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("sub!", static_cast<SimTK::SubsystemIndex & (SimTK::SubsystemIndex::*)(unsigned int) >(&SimTK::SubsystemIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SubsystemIndex & SimTK::SubsystemIndex::operator+=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SubsystemIndex & SimTK::SubsystemIndex::operator+=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("add!", static_cast<SimTK::SubsystemIndex & (SimTK::SubsystemIndex::*)(unsigned short) >(&SimTK::SubsystemIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SubsystemIndex & SimTK::SubsystemIndex::operator-=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SubsystemIndex & SimTK::SubsystemIndex::operator-=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("sub!", static_cast<SimTK::SubsystemIndex & (SimTK::SubsystemIndex::*)(unsigned short) >(&SimTK::SubsystemIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SubsystemIndex & SimTK::SubsystemIndex::operator+=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SubsystemIndex & SimTK::SubsystemIndex::operator+=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("add!", static_cast<SimTK::SubsystemIndex & (SimTK::SubsystemIndex::*)(unsigned long) >(&SimTK::SubsystemIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SubsystemIndex & SimTK::SubsystemIndex::operator-=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SubsystemIndex & SimTK::SubsystemIndex::operator-=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("sub!", static_cast<SimTK::SubsystemIndex & (SimTK::SubsystemIndex::*)(unsigned long) >(&SimTK::SubsystemIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SubsystemIndex & SimTK::SubsystemIndex::operator+=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SubsystemIndex & SimTK::SubsystemIndex::operator+=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("add!", static_cast<SimTK::SubsystemIndex & (SimTK::SubsystemIndex::*)(unsigned long long) >(&SimTK::SubsystemIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SubsystemIndex & SimTK::SubsystemIndex::operator-=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SubsystemIndex & SimTK::SubsystemIndex::operator-=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("sub!", static_cast<SimTK::SubsystemIndex & (SimTK::SubsystemIndex::*)(unsigned long long) >(&SimTK::SubsystemIndex::operator-=));

  DEBUG_MSG("Adding wrapper for const SimTK::SubsystemIndex & SimTK::SubsystemIndex::Invalid() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::SubsystemIndex & SimTK::SubsystemIndex::Invalid()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("SimTK!SubsystemIndex!Invalid", static_cast<const SimTK::SubsystemIndex & (*)() >(&SimTK::SubsystemIndex::Invalid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SubsystemIndex::isValid(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SubsystemIndex::isValid(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("SimTK!SubsystemIndex!isValid", static_cast<bool (*)(int) >(&SimTK::SubsystemIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SubsystemIndex::isValid(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SubsystemIndex::isValid(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("SimTK!SubsystemIndex!isValid", static_cast<bool (*)(short) >(&SimTK::SubsystemIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SubsystemIndex::isValid(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SubsystemIndex::isValid(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("SimTK!SubsystemIndex!isValid", static_cast<bool (*)(long) >(&SimTK::SubsystemIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SubsystemIndex::isValid(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SubsystemIndex::isValid(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("SimTK!SubsystemIndex!isValid", static_cast<bool (*)(long long) >(&SimTK::SubsystemIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SubsystemIndex::isValid(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SubsystemIndex::isValid(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("SimTK!SubsystemIndex!isValid", static_cast<bool (*)(unsigned int) >(&SimTK::SubsystemIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SubsystemIndex::isValid(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SubsystemIndex::isValid(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("SimTK!SubsystemIndex!isValid", static_cast<bool (*)(unsigned short) >(&SimTK::SubsystemIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SubsystemIndex::isValid(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SubsystemIndex::isValid(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("SimTK!SubsystemIndex!isValid", static_cast<bool (*)(unsigned long) >(&SimTK::SubsystemIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SubsystemIndex::isValid(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SubsystemIndex::isValid(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("SimTK!SubsystemIndex!isValid", static_cast<bool (*)(unsigned long long) >(&SimTK::SubsystemIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SubsystemIndex::isValidExtended(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SubsystemIndex::isValidExtended(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("SimTK!SubsystemIndex!isValidExtended", static_cast<bool (*)(int) >(&SimTK::SubsystemIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for bool SimTK::SubsystemIndex::isValidExtended(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SubsystemIndex::isValidExtended(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("SimTK!SubsystemIndex!isValidExtended", static_cast<bool (*)(short) >(&SimTK::SubsystemIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for bool SimTK::SubsystemIndex::isValidExtended(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SubsystemIndex::isValidExtended(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("SimTK!SubsystemIndex!isValidExtended", static_cast<bool (*)(long) >(&SimTK::SubsystemIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for bool SimTK::SubsystemIndex::isValidExtended(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SubsystemIndex::isValidExtended(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("SimTK!SubsystemIndex!isValidExtended", static_cast<bool (*)(long long) >(&SimTK::SubsystemIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for SimTK::SubsystemIndex::size_type SimTK::SubsystemIndex::max_size() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SubsystemIndex::size_type SimTK::SubsystemIndex::max_size()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  t15.method("SimTK!SubsystemIndex!max_size", static_cast<SimTK::SubsystemIndex::size_type (*)() >(&SimTK::SubsystemIndex::max_size));

  /* End of SimTK::SubsystemIndex class method wrappers
   **********************************************************************/


  /**********************************************************************/
  /* Wrappers for the methods of class SimTK::SystemYIndex
   */


  DEBUG_MSG("Adding wrapper for void SimTK::SystemYIndex::SystemYIndex(int) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:32
  t16.constructor<int>();


  DEBUG_MSG("Adding wrapper for void SimTK::SystemYIndex::SystemYIndex(long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:32
  t16.constructor<long>();


  DEBUG_MSG("Adding wrapper for void SimTK::SystemYIndex::SystemYIndex(long long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:32
  t16.constructor<long long>();


  DEBUG_MSG("Adding wrapper for void SimTK::SystemYIndex::SystemYIndex(unsigned int) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:32
  t16.constructor<unsigned int>();


  DEBUG_MSG("Adding wrapper for void SimTK::SystemYIndex::SystemYIndex(unsigned long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:32
  t16.constructor<unsigned long>();


  DEBUG_MSG("Adding wrapper for void SimTK::SystemYIndex::SystemYIndex(unsigned long long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:32
  t16.constructor<unsigned long long>();

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYIndex::isValid() (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYIndex::isValid()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("isValid", static_cast<bool (SimTK::SystemYIndex::*)()  const>(&SimTK::SystemYIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYIndex::isValidExtended() (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYIndex::isValidExtended()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("isValidExtended", static_cast<bool (SimTK::SystemYIndex::*)()  const>(&SimTK::SystemYIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for void SimTK::SystemYIndex::invalidate() (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::SystemYIndex::invalidate()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("invalidate", static_cast<void (SimTK::SystemYIndex::*)() >(&SimTK::SystemYIndex::invalidate));

  DEBUG_MSG("Adding wrapper for void SimTK::SystemYIndex::clear() (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::SystemYIndex::clear()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("clear", static_cast<void (SimTK::SystemYIndex::*)() >(&SimTK::SystemYIndex::clear));
  types.set_override_module(jl_base_module);

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYIndex::operator==(const SimTK::SystemYIndex &) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYIndex::operator==(const SimTK::SystemYIndex &)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("==", static_cast<bool (SimTK::SystemYIndex::*)(const SimTK::SystemYIndex &)  const>(&SimTK::SystemYIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYIndex::operator==(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYIndex::operator==(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("==", static_cast<bool (SimTK::SystemYIndex::*)(int)  const>(&SimTK::SystemYIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYIndex::operator==(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYIndex::operator==(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("==", static_cast<bool (SimTK::SystemYIndex::*)(short)  const>(&SimTK::SystemYIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYIndex::operator==(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYIndex::operator==(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("==", static_cast<bool (SimTK::SystemYIndex::*)(long)  const>(&SimTK::SystemYIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYIndex::operator==(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYIndex::operator==(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("==", static_cast<bool (SimTK::SystemYIndex::*)(long long)  const>(&SimTK::SystemYIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYIndex::operator==(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYIndex::operator==(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("==", static_cast<bool (SimTK::SystemYIndex::*)(unsigned int)  const>(&SimTK::SystemYIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYIndex::operator==(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYIndex::operator==(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("==", static_cast<bool (SimTK::SystemYIndex::*)(unsigned short)  const>(&SimTK::SystemYIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYIndex::operator==(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYIndex::operator==(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("==", static_cast<bool (SimTK::SystemYIndex::*)(unsigned long)  const>(&SimTK::SystemYIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYIndex::operator==(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYIndex::operator==(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("==", static_cast<bool (SimTK::SystemYIndex::*)(unsigned long long)  const>(&SimTK::SystemYIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYIndex::operator!=(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYIndex::operator!=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("!=", static_cast<bool (SimTK::SystemYIndex::*)(int)  const>(&SimTK::SystemYIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYIndex::operator!=(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYIndex::operator!=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("!=", static_cast<bool (SimTK::SystemYIndex::*)(short)  const>(&SimTK::SystemYIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYIndex::operator!=(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYIndex::operator!=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("!=", static_cast<bool (SimTK::SystemYIndex::*)(long)  const>(&SimTK::SystemYIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYIndex::operator!=(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYIndex::operator!=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("!=", static_cast<bool (SimTK::SystemYIndex::*)(long long)  const>(&SimTK::SystemYIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYIndex::operator!=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYIndex::operator!=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("!=", static_cast<bool (SimTK::SystemYIndex::*)(unsigned int)  const>(&SimTK::SystemYIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYIndex::operator!=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYIndex::operator!=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("!=", static_cast<bool (SimTK::SystemYIndex::*)(unsigned long)  const>(&SimTK::SystemYIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYIndex::operator!=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYIndex::operator!=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("!=", static_cast<bool (SimTK::SystemYIndex::*)(unsigned long long)  const>(&SimTK::SystemYIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYIndex::operator<(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYIndex::operator<(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("<", static_cast<bool (SimTK::SystemYIndex::*)(int)  const>(&SimTK::SystemYIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYIndex::operator<(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYIndex::operator<(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("<", static_cast<bool (SimTK::SystemYIndex::*)(short)  const>(&SimTK::SystemYIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYIndex::operator<(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYIndex::operator<(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("<", static_cast<bool (SimTK::SystemYIndex::*)(long)  const>(&SimTK::SystemYIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYIndex::operator<(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYIndex::operator<(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("<", static_cast<bool (SimTK::SystemYIndex::*)(long long)  const>(&SimTK::SystemYIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYIndex::operator<(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYIndex::operator<(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("<", static_cast<bool (SimTK::SystemYIndex::*)(unsigned int)  const>(&SimTK::SystemYIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYIndex::operator<(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYIndex::operator<(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("<", static_cast<bool (SimTK::SystemYIndex::*)(unsigned short)  const>(&SimTK::SystemYIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYIndex::operator<(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYIndex::operator<(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("<", static_cast<bool (SimTK::SystemYIndex::*)(unsigned long)  const>(&SimTK::SystemYIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYIndex::operator<(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYIndex::operator<(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("<", static_cast<bool (SimTK::SystemYIndex::*)(unsigned long long)  const>(&SimTK::SystemYIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYIndex::operator>=(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYIndex::operator>=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method(">=", static_cast<bool (SimTK::SystemYIndex::*)(int)  const>(&SimTK::SystemYIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYIndex::operator>=(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYIndex::operator>=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method(">=", static_cast<bool (SimTK::SystemYIndex::*)(short)  const>(&SimTK::SystemYIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYIndex::operator>=(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYIndex::operator>=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method(">=", static_cast<bool (SimTK::SystemYIndex::*)(long)  const>(&SimTK::SystemYIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYIndex::operator>=(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYIndex::operator>=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method(">=", static_cast<bool (SimTK::SystemYIndex::*)(long long)  const>(&SimTK::SystemYIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYIndex::operator>=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYIndex::operator>=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method(">=", static_cast<bool (SimTK::SystemYIndex::*)(unsigned int)  const>(&SimTK::SystemYIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYIndex::operator>=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYIndex::operator>=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method(">=", static_cast<bool (SimTK::SystemYIndex::*)(unsigned short)  const>(&SimTK::SystemYIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYIndex::operator>=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYIndex::operator>=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method(">=", static_cast<bool (SimTK::SystemYIndex::*)(unsigned long)  const>(&SimTK::SystemYIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYIndex::operator>=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYIndex::operator>=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method(">=", static_cast<bool (SimTK::SystemYIndex::*)(unsigned long long)  const>(&SimTK::SystemYIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYIndex::operator>(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYIndex::operator>(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method(">", static_cast<bool (SimTK::SystemYIndex::*)(int)  const>(&SimTK::SystemYIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYIndex::operator>(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYIndex::operator>(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method(">", static_cast<bool (SimTK::SystemYIndex::*)(short)  const>(&SimTK::SystemYIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYIndex::operator>(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYIndex::operator>(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method(">", static_cast<bool (SimTK::SystemYIndex::*)(long)  const>(&SimTK::SystemYIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYIndex::operator>(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYIndex::operator>(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method(">", static_cast<bool (SimTK::SystemYIndex::*)(long long)  const>(&SimTK::SystemYIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYIndex::operator>(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYIndex::operator>(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method(">", static_cast<bool (SimTK::SystemYIndex::*)(unsigned int)  const>(&SimTK::SystemYIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYIndex::operator>(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYIndex::operator>(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method(">", static_cast<bool (SimTK::SystemYIndex::*)(unsigned short)  const>(&SimTK::SystemYIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYIndex::operator>(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYIndex::operator>(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method(">", static_cast<bool (SimTK::SystemYIndex::*)(unsigned long)  const>(&SimTK::SystemYIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYIndex::operator>(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYIndex::operator>(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method(">", static_cast<bool (SimTK::SystemYIndex::*)(unsigned long long)  const>(&SimTK::SystemYIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYIndex::operator<=(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYIndex::operator<=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("<=", static_cast<bool (SimTK::SystemYIndex::*)(int)  const>(&SimTK::SystemYIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYIndex::operator<=(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYIndex::operator<=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("<=", static_cast<bool (SimTK::SystemYIndex::*)(short)  const>(&SimTK::SystemYIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYIndex::operator<=(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYIndex::operator<=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("<=", static_cast<bool (SimTK::SystemYIndex::*)(long)  const>(&SimTK::SystemYIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYIndex::operator<=(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYIndex::operator<=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("<=", static_cast<bool (SimTK::SystemYIndex::*)(long long)  const>(&SimTK::SystemYIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYIndex::operator<=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYIndex::operator<=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("<=", static_cast<bool (SimTK::SystemYIndex::*)(unsigned int)  const>(&SimTK::SystemYIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYIndex::operator<=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYIndex::operator<=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("<=", static_cast<bool (SimTK::SystemYIndex::*)(unsigned short)  const>(&SimTK::SystemYIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYIndex::operator<=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYIndex::operator<=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("<=", static_cast<bool (SimTK::SystemYIndex::*)(unsigned long)  const>(&SimTK::SystemYIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYIndex::operator<=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYIndex::operator<=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("<=", static_cast<bool (SimTK::SystemYIndex::*)(unsigned long long)  const>(&SimTK::SystemYIndex::operator<=));
  types.unset_override_module();

  DEBUG_MSG("Adding wrapper for const SimTK::SystemYIndex & SimTK::SystemYIndex::operator++() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::SystemYIndex & SimTK::SystemYIndex::operator++()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("inc!", static_cast<const SimTK::SystemYIndex & (SimTK::SystemYIndex::*)() >(&SimTK::SystemYIndex::operator++));

  DEBUG_MSG("Adding wrapper for SimTK::SystemYIndex SimTK::SystemYIndex::operator++(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemYIndex SimTK::SystemYIndex::operator++(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("inc!", static_cast<SimTK::SystemYIndex (SimTK::SystemYIndex::*)(int) >(&SimTK::SystemYIndex::operator++));

  DEBUG_MSG("Adding wrapper for const SimTK::SystemYIndex & SimTK::SystemYIndex::operator--() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::SystemYIndex & SimTK::SystemYIndex::operator--()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("dec!", static_cast<const SimTK::SystemYIndex & (SimTK::SystemYIndex::*)() >(&SimTK::SystemYIndex::operator--));

  DEBUG_MSG("Adding wrapper for SimTK::SystemYIndex SimTK::SystemYIndex::operator--(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemYIndex SimTK::SystemYIndex::operator--(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("dec!", static_cast<SimTK::SystemYIndex (SimTK::SystemYIndex::*)(int) >(&SimTK::SystemYIndex::operator--));

  DEBUG_MSG("Adding wrapper for SimTK::SystemYIndex SimTK::SystemYIndex::next() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemYIndex SimTK::SystemYIndex::next()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("next", static_cast<SimTK::SystemYIndex (SimTK::SystemYIndex::*)()  const>(&SimTK::SystemYIndex::next));

  DEBUG_MSG("Adding wrapper for SimTK::SystemYIndex SimTK::SystemYIndex::prev() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemYIndex SimTK::SystemYIndex::prev()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("prev", static_cast<SimTK::SystemYIndex (SimTK::SystemYIndex::*)()  const>(&SimTK::SystemYIndex::prev));

  DEBUG_MSG("Adding wrapper for SimTK::SystemYIndex & SimTK::SystemYIndex::operator+=(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemYIndex & SimTK::SystemYIndex::operator+=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("add!", static_cast<SimTK::SystemYIndex & (SimTK::SystemYIndex::*)(int) >(&SimTK::SystemYIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemYIndex & SimTK::SystemYIndex::operator-=(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemYIndex & SimTK::SystemYIndex::operator-=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("sub!", static_cast<SimTK::SystemYIndex & (SimTK::SystemYIndex::*)(int) >(&SimTK::SystemYIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemYIndex & SimTK::SystemYIndex::operator+=(short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemYIndex & SimTK::SystemYIndex::operator+=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("add!", static_cast<SimTK::SystemYIndex & (SimTK::SystemYIndex::*)(short) >(&SimTK::SystemYIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemYIndex & SimTK::SystemYIndex::operator-=(short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemYIndex & SimTK::SystemYIndex::operator-=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("sub!", static_cast<SimTK::SystemYIndex & (SimTK::SystemYIndex::*)(short) >(&SimTK::SystemYIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemYIndex & SimTK::SystemYIndex::operator+=(long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemYIndex & SimTK::SystemYIndex::operator+=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("add!", static_cast<SimTK::SystemYIndex & (SimTK::SystemYIndex::*)(long) >(&SimTK::SystemYIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemYIndex & SimTK::SystemYIndex::operator-=(long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemYIndex & SimTK::SystemYIndex::operator-=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("sub!", static_cast<SimTK::SystemYIndex & (SimTK::SystemYIndex::*)(long) >(&SimTK::SystemYIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemYIndex & SimTK::SystemYIndex::operator+=(long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemYIndex & SimTK::SystemYIndex::operator+=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("add!", static_cast<SimTK::SystemYIndex & (SimTK::SystemYIndex::*)(long long) >(&SimTK::SystemYIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemYIndex & SimTK::SystemYIndex::operator-=(long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemYIndex & SimTK::SystemYIndex::operator-=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("sub!", static_cast<SimTK::SystemYIndex & (SimTK::SystemYIndex::*)(long long) >(&SimTK::SystemYIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemYIndex & SimTK::SystemYIndex::operator+=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemYIndex & SimTK::SystemYIndex::operator+=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("add!", static_cast<SimTK::SystemYIndex & (SimTK::SystemYIndex::*)(unsigned int) >(&SimTK::SystemYIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemYIndex & SimTK::SystemYIndex::operator-=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemYIndex & SimTK::SystemYIndex::operator-=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("sub!", static_cast<SimTK::SystemYIndex & (SimTK::SystemYIndex::*)(unsigned int) >(&SimTK::SystemYIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemYIndex & SimTK::SystemYIndex::operator+=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemYIndex & SimTK::SystemYIndex::operator+=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("add!", static_cast<SimTK::SystemYIndex & (SimTK::SystemYIndex::*)(unsigned short) >(&SimTK::SystemYIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemYIndex & SimTK::SystemYIndex::operator-=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemYIndex & SimTK::SystemYIndex::operator-=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("sub!", static_cast<SimTK::SystemYIndex & (SimTK::SystemYIndex::*)(unsigned short) >(&SimTK::SystemYIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemYIndex & SimTK::SystemYIndex::operator+=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemYIndex & SimTK::SystemYIndex::operator+=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("add!", static_cast<SimTK::SystemYIndex & (SimTK::SystemYIndex::*)(unsigned long) >(&SimTK::SystemYIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemYIndex & SimTK::SystemYIndex::operator-=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemYIndex & SimTK::SystemYIndex::operator-=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("sub!", static_cast<SimTK::SystemYIndex & (SimTK::SystemYIndex::*)(unsigned long) >(&SimTK::SystemYIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemYIndex & SimTK::SystemYIndex::operator+=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemYIndex & SimTK::SystemYIndex::operator+=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("add!", static_cast<SimTK::SystemYIndex & (SimTK::SystemYIndex::*)(unsigned long long) >(&SimTK::SystemYIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemYIndex & SimTK::SystemYIndex::operator-=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemYIndex & SimTK::SystemYIndex::operator-=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("sub!", static_cast<SimTK::SystemYIndex & (SimTK::SystemYIndex::*)(unsigned long long) >(&SimTK::SystemYIndex::operator-=));

  DEBUG_MSG("Adding wrapper for const SimTK::SystemYIndex & SimTK::SystemYIndex::Invalid() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::SystemYIndex & SimTK::SystemYIndex::Invalid()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("SimTK!SystemYIndex!Invalid", static_cast<const SimTK::SystemYIndex & (*)() >(&SimTK::SystemYIndex::Invalid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYIndex::isValid(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYIndex::isValid(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("SimTK!SystemYIndex!isValid", static_cast<bool (*)(int) >(&SimTK::SystemYIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYIndex::isValid(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYIndex::isValid(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("SimTK!SystemYIndex!isValid", static_cast<bool (*)(short) >(&SimTK::SystemYIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYIndex::isValid(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYIndex::isValid(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("SimTK!SystemYIndex!isValid", static_cast<bool (*)(long) >(&SimTK::SystemYIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYIndex::isValid(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYIndex::isValid(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("SimTK!SystemYIndex!isValid", static_cast<bool (*)(long long) >(&SimTK::SystemYIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYIndex::isValid(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYIndex::isValid(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("SimTK!SystemYIndex!isValid", static_cast<bool (*)(unsigned int) >(&SimTK::SystemYIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYIndex::isValid(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYIndex::isValid(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("SimTK!SystemYIndex!isValid", static_cast<bool (*)(unsigned short) >(&SimTK::SystemYIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYIndex::isValid(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYIndex::isValid(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("SimTK!SystemYIndex!isValid", static_cast<bool (*)(unsigned long) >(&SimTK::SystemYIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYIndex::isValid(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYIndex::isValid(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("SimTK!SystemYIndex!isValid", static_cast<bool (*)(unsigned long long) >(&SimTK::SystemYIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYIndex::isValidExtended(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYIndex::isValidExtended(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("SimTK!SystemYIndex!isValidExtended", static_cast<bool (*)(int) >(&SimTK::SystemYIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYIndex::isValidExtended(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYIndex::isValidExtended(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("SimTK!SystemYIndex!isValidExtended", static_cast<bool (*)(short) >(&SimTK::SystemYIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYIndex::isValidExtended(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYIndex::isValidExtended(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("SimTK!SystemYIndex!isValidExtended", static_cast<bool (*)(long) >(&SimTK::SystemYIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYIndex::isValidExtended(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYIndex::isValidExtended(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("SimTK!SystemYIndex!isValidExtended", static_cast<bool (*)(long long) >(&SimTK::SystemYIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for SimTK::SystemYIndex::size_type SimTK::SystemYIndex::max_size() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemYIndex::size_type SimTK::SystemYIndex::max_size()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  t16.method("SimTK!SystemYIndex!max_size", static_cast<SimTK::SystemYIndex::size_type (*)() >(&SimTK::SystemYIndex::max_size));

  /* End of SimTK::SystemYIndex class method wrappers
   **********************************************************************/


  /**********************************************************************/
  /* Wrappers for the methods of class SimTK::SystemQIndex
   */


  DEBUG_MSG("Adding wrapper for void SimTK::SystemQIndex::SystemQIndex(int) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:32
  t17.constructor<int>();


  DEBUG_MSG("Adding wrapper for void SimTK::SystemQIndex::SystemQIndex(long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:32
  t17.constructor<long>();


  DEBUG_MSG("Adding wrapper for void SimTK::SystemQIndex::SystemQIndex(long long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:32
  t17.constructor<long long>();


  DEBUG_MSG("Adding wrapper for void SimTK::SystemQIndex::SystemQIndex(unsigned int) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:32
  t17.constructor<unsigned int>();


  DEBUG_MSG("Adding wrapper for void SimTK::SystemQIndex::SystemQIndex(unsigned long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:32
  t17.constructor<unsigned long>();


  DEBUG_MSG("Adding wrapper for void SimTK::SystemQIndex::SystemQIndex(unsigned long long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:32
  t17.constructor<unsigned long long>();

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQIndex::isValid() (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQIndex::isValid()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("isValid", static_cast<bool (SimTK::SystemQIndex::*)()  const>(&SimTK::SystemQIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQIndex::isValidExtended() (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQIndex::isValidExtended()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("isValidExtended", static_cast<bool (SimTK::SystemQIndex::*)()  const>(&SimTK::SystemQIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for void SimTK::SystemQIndex::invalidate() (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::SystemQIndex::invalidate()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("invalidate", static_cast<void (SimTK::SystemQIndex::*)() >(&SimTK::SystemQIndex::invalidate));

  DEBUG_MSG("Adding wrapper for void SimTK::SystemQIndex::clear() (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::SystemQIndex::clear()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("clear", static_cast<void (SimTK::SystemQIndex::*)() >(&SimTK::SystemQIndex::clear));
  types.set_override_module(jl_base_module);

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQIndex::operator==(const SimTK::SystemQIndex &) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQIndex::operator==(const SimTK::SystemQIndex &)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("==", static_cast<bool (SimTK::SystemQIndex::*)(const SimTK::SystemQIndex &)  const>(&SimTK::SystemQIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQIndex::operator==(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQIndex::operator==(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("==", static_cast<bool (SimTK::SystemQIndex::*)(int)  const>(&SimTK::SystemQIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQIndex::operator==(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQIndex::operator==(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("==", static_cast<bool (SimTK::SystemQIndex::*)(short)  const>(&SimTK::SystemQIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQIndex::operator==(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQIndex::operator==(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("==", static_cast<bool (SimTK::SystemQIndex::*)(long)  const>(&SimTK::SystemQIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQIndex::operator==(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQIndex::operator==(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("==", static_cast<bool (SimTK::SystemQIndex::*)(long long)  const>(&SimTK::SystemQIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQIndex::operator==(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQIndex::operator==(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("==", static_cast<bool (SimTK::SystemQIndex::*)(unsigned int)  const>(&SimTK::SystemQIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQIndex::operator==(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQIndex::operator==(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("==", static_cast<bool (SimTK::SystemQIndex::*)(unsigned short)  const>(&SimTK::SystemQIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQIndex::operator==(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQIndex::operator==(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("==", static_cast<bool (SimTK::SystemQIndex::*)(unsigned long)  const>(&SimTK::SystemQIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQIndex::operator==(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQIndex::operator==(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("==", static_cast<bool (SimTK::SystemQIndex::*)(unsigned long long)  const>(&SimTK::SystemQIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQIndex::operator!=(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQIndex::operator!=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("!=", static_cast<bool (SimTK::SystemQIndex::*)(int)  const>(&SimTK::SystemQIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQIndex::operator!=(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQIndex::operator!=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("!=", static_cast<bool (SimTK::SystemQIndex::*)(short)  const>(&SimTK::SystemQIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQIndex::operator!=(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQIndex::operator!=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("!=", static_cast<bool (SimTK::SystemQIndex::*)(long)  const>(&SimTK::SystemQIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQIndex::operator!=(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQIndex::operator!=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("!=", static_cast<bool (SimTK::SystemQIndex::*)(long long)  const>(&SimTK::SystemQIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQIndex::operator!=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQIndex::operator!=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("!=", static_cast<bool (SimTK::SystemQIndex::*)(unsigned int)  const>(&SimTK::SystemQIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQIndex::operator!=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQIndex::operator!=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("!=", static_cast<bool (SimTK::SystemQIndex::*)(unsigned long)  const>(&SimTK::SystemQIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQIndex::operator!=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQIndex::operator!=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("!=", static_cast<bool (SimTK::SystemQIndex::*)(unsigned long long)  const>(&SimTK::SystemQIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQIndex::operator<(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQIndex::operator<(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("<", static_cast<bool (SimTK::SystemQIndex::*)(int)  const>(&SimTK::SystemQIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQIndex::operator<(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQIndex::operator<(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("<", static_cast<bool (SimTK::SystemQIndex::*)(short)  const>(&SimTK::SystemQIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQIndex::operator<(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQIndex::operator<(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("<", static_cast<bool (SimTK::SystemQIndex::*)(long)  const>(&SimTK::SystemQIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQIndex::operator<(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQIndex::operator<(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("<", static_cast<bool (SimTK::SystemQIndex::*)(long long)  const>(&SimTK::SystemQIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQIndex::operator<(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQIndex::operator<(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("<", static_cast<bool (SimTK::SystemQIndex::*)(unsigned int)  const>(&SimTK::SystemQIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQIndex::operator<(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQIndex::operator<(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("<", static_cast<bool (SimTK::SystemQIndex::*)(unsigned short)  const>(&SimTK::SystemQIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQIndex::operator<(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQIndex::operator<(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("<", static_cast<bool (SimTK::SystemQIndex::*)(unsigned long)  const>(&SimTK::SystemQIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQIndex::operator<(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQIndex::operator<(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("<", static_cast<bool (SimTK::SystemQIndex::*)(unsigned long long)  const>(&SimTK::SystemQIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQIndex::operator>=(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQIndex::operator>=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method(">=", static_cast<bool (SimTK::SystemQIndex::*)(int)  const>(&SimTK::SystemQIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQIndex::operator>=(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQIndex::operator>=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method(">=", static_cast<bool (SimTK::SystemQIndex::*)(short)  const>(&SimTK::SystemQIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQIndex::operator>=(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQIndex::operator>=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method(">=", static_cast<bool (SimTK::SystemQIndex::*)(long)  const>(&SimTK::SystemQIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQIndex::operator>=(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQIndex::operator>=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method(">=", static_cast<bool (SimTK::SystemQIndex::*)(long long)  const>(&SimTK::SystemQIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQIndex::operator>=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQIndex::operator>=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method(">=", static_cast<bool (SimTK::SystemQIndex::*)(unsigned int)  const>(&SimTK::SystemQIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQIndex::operator>=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQIndex::operator>=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method(">=", static_cast<bool (SimTK::SystemQIndex::*)(unsigned short)  const>(&SimTK::SystemQIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQIndex::operator>=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQIndex::operator>=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method(">=", static_cast<bool (SimTK::SystemQIndex::*)(unsigned long)  const>(&SimTK::SystemQIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQIndex::operator>=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQIndex::operator>=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method(">=", static_cast<bool (SimTK::SystemQIndex::*)(unsigned long long)  const>(&SimTK::SystemQIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQIndex::operator>(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQIndex::operator>(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method(">", static_cast<bool (SimTK::SystemQIndex::*)(int)  const>(&SimTK::SystemQIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQIndex::operator>(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQIndex::operator>(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method(">", static_cast<bool (SimTK::SystemQIndex::*)(short)  const>(&SimTK::SystemQIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQIndex::operator>(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQIndex::operator>(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method(">", static_cast<bool (SimTK::SystemQIndex::*)(long)  const>(&SimTK::SystemQIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQIndex::operator>(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQIndex::operator>(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method(">", static_cast<bool (SimTK::SystemQIndex::*)(long long)  const>(&SimTK::SystemQIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQIndex::operator>(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQIndex::operator>(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method(">", static_cast<bool (SimTK::SystemQIndex::*)(unsigned int)  const>(&SimTK::SystemQIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQIndex::operator>(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQIndex::operator>(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method(">", static_cast<bool (SimTK::SystemQIndex::*)(unsigned short)  const>(&SimTK::SystemQIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQIndex::operator>(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQIndex::operator>(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method(">", static_cast<bool (SimTK::SystemQIndex::*)(unsigned long)  const>(&SimTK::SystemQIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQIndex::operator>(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQIndex::operator>(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method(">", static_cast<bool (SimTK::SystemQIndex::*)(unsigned long long)  const>(&SimTK::SystemQIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQIndex::operator<=(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQIndex::operator<=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("<=", static_cast<bool (SimTK::SystemQIndex::*)(int)  const>(&SimTK::SystemQIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQIndex::operator<=(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQIndex::operator<=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("<=", static_cast<bool (SimTK::SystemQIndex::*)(short)  const>(&SimTK::SystemQIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQIndex::operator<=(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQIndex::operator<=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("<=", static_cast<bool (SimTK::SystemQIndex::*)(long)  const>(&SimTK::SystemQIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQIndex::operator<=(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQIndex::operator<=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("<=", static_cast<bool (SimTK::SystemQIndex::*)(long long)  const>(&SimTK::SystemQIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQIndex::operator<=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQIndex::operator<=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("<=", static_cast<bool (SimTK::SystemQIndex::*)(unsigned int)  const>(&SimTK::SystemQIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQIndex::operator<=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQIndex::operator<=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("<=", static_cast<bool (SimTK::SystemQIndex::*)(unsigned short)  const>(&SimTK::SystemQIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQIndex::operator<=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQIndex::operator<=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("<=", static_cast<bool (SimTK::SystemQIndex::*)(unsigned long)  const>(&SimTK::SystemQIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQIndex::operator<=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQIndex::operator<=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("<=", static_cast<bool (SimTK::SystemQIndex::*)(unsigned long long)  const>(&SimTK::SystemQIndex::operator<=));
  types.unset_override_module();

  DEBUG_MSG("Adding wrapper for const SimTK::SystemQIndex & SimTK::SystemQIndex::operator++() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::SystemQIndex & SimTK::SystemQIndex::operator++()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("inc!", static_cast<const SimTK::SystemQIndex & (SimTK::SystemQIndex::*)() >(&SimTK::SystemQIndex::operator++));

  DEBUG_MSG("Adding wrapper for SimTK::SystemQIndex SimTK::SystemQIndex::operator++(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemQIndex SimTK::SystemQIndex::operator++(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("inc!", static_cast<SimTK::SystemQIndex (SimTK::SystemQIndex::*)(int) >(&SimTK::SystemQIndex::operator++));

  DEBUG_MSG("Adding wrapper for const SimTK::SystemQIndex & SimTK::SystemQIndex::operator--() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::SystemQIndex & SimTK::SystemQIndex::operator--()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("dec!", static_cast<const SimTK::SystemQIndex & (SimTK::SystemQIndex::*)() >(&SimTK::SystemQIndex::operator--));

  DEBUG_MSG("Adding wrapper for SimTK::SystemQIndex SimTK::SystemQIndex::operator--(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemQIndex SimTK::SystemQIndex::operator--(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("dec!", static_cast<SimTK::SystemQIndex (SimTK::SystemQIndex::*)(int) >(&SimTK::SystemQIndex::operator--));

  DEBUG_MSG("Adding wrapper for SimTK::SystemQIndex SimTK::SystemQIndex::next() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemQIndex SimTK::SystemQIndex::next()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("next", static_cast<SimTK::SystemQIndex (SimTK::SystemQIndex::*)()  const>(&SimTK::SystemQIndex::next));

  DEBUG_MSG("Adding wrapper for SimTK::SystemQIndex SimTK::SystemQIndex::prev() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemQIndex SimTK::SystemQIndex::prev()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("prev", static_cast<SimTK::SystemQIndex (SimTK::SystemQIndex::*)()  const>(&SimTK::SystemQIndex::prev));

  DEBUG_MSG("Adding wrapper for SimTK::SystemQIndex & SimTK::SystemQIndex::operator+=(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemQIndex & SimTK::SystemQIndex::operator+=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("add!", static_cast<SimTK::SystemQIndex & (SimTK::SystemQIndex::*)(int) >(&SimTK::SystemQIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemQIndex & SimTK::SystemQIndex::operator-=(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemQIndex & SimTK::SystemQIndex::operator-=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("sub!", static_cast<SimTK::SystemQIndex & (SimTK::SystemQIndex::*)(int) >(&SimTK::SystemQIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemQIndex & SimTK::SystemQIndex::operator+=(short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemQIndex & SimTK::SystemQIndex::operator+=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("add!", static_cast<SimTK::SystemQIndex & (SimTK::SystemQIndex::*)(short) >(&SimTK::SystemQIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemQIndex & SimTK::SystemQIndex::operator-=(short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemQIndex & SimTK::SystemQIndex::operator-=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("sub!", static_cast<SimTK::SystemQIndex & (SimTK::SystemQIndex::*)(short) >(&SimTK::SystemQIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemQIndex & SimTK::SystemQIndex::operator+=(long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemQIndex & SimTK::SystemQIndex::operator+=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("add!", static_cast<SimTK::SystemQIndex & (SimTK::SystemQIndex::*)(long) >(&SimTK::SystemQIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemQIndex & SimTK::SystemQIndex::operator-=(long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemQIndex & SimTK::SystemQIndex::operator-=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("sub!", static_cast<SimTK::SystemQIndex & (SimTK::SystemQIndex::*)(long) >(&SimTK::SystemQIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemQIndex & SimTK::SystemQIndex::operator+=(long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemQIndex & SimTK::SystemQIndex::operator+=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("add!", static_cast<SimTK::SystemQIndex & (SimTK::SystemQIndex::*)(long long) >(&SimTK::SystemQIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemQIndex & SimTK::SystemQIndex::operator-=(long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemQIndex & SimTK::SystemQIndex::operator-=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("sub!", static_cast<SimTK::SystemQIndex & (SimTK::SystemQIndex::*)(long long) >(&SimTK::SystemQIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemQIndex & SimTK::SystemQIndex::operator+=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemQIndex & SimTK::SystemQIndex::operator+=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("add!", static_cast<SimTK::SystemQIndex & (SimTK::SystemQIndex::*)(unsigned int) >(&SimTK::SystemQIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemQIndex & SimTK::SystemQIndex::operator-=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemQIndex & SimTK::SystemQIndex::operator-=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("sub!", static_cast<SimTK::SystemQIndex & (SimTK::SystemQIndex::*)(unsigned int) >(&SimTK::SystemQIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemQIndex & SimTK::SystemQIndex::operator+=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemQIndex & SimTK::SystemQIndex::operator+=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("add!", static_cast<SimTK::SystemQIndex & (SimTK::SystemQIndex::*)(unsigned short) >(&SimTK::SystemQIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemQIndex & SimTK::SystemQIndex::operator-=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemQIndex & SimTK::SystemQIndex::operator-=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("sub!", static_cast<SimTK::SystemQIndex & (SimTK::SystemQIndex::*)(unsigned short) >(&SimTK::SystemQIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemQIndex & SimTK::SystemQIndex::operator+=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemQIndex & SimTK::SystemQIndex::operator+=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("add!", static_cast<SimTK::SystemQIndex & (SimTK::SystemQIndex::*)(unsigned long) >(&SimTK::SystemQIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemQIndex & SimTK::SystemQIndex::operator-=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemQIndex & SimTK::SystemQIndex::operator-=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("sub!", static_cast<SimTK::SystemQIndex & (SimTK::SystemQIndex::*)(unsigned long) >(&SimTK::SystemQIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemQIndex & SimTK::SystemQIndex::operator+=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemQIndex & SimTK::SystemQIndex::operator+=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("add!", static_cast<SimTK::SystemQIndex & (SimTK::SystemQIndex::*)(unsigned long long) >(&SimTK::SystemQIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemQIndex & SimTK::SystemQIndex::operator-=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemQIndex & SimTK::SystemQIndex::operator-=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("sub!", static_cast<SimTK::SystemQIndex & (SimTK::SystemQIndex::*)(unsigned long long) >(&SimTK::SystemQIndex::operator-=));

  DEBUG_MSG("Adding wrapper for const SimTK::SystemQIndex & SimTK::SystemQIndex::Invalid() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::SystemQIndex & SimTK::SystemQIndex::Invalid()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("SimTK!SystemQIndex!Invalid", static_cast<const SimTK::SystemQIndex & (*)() >(&SimTK::SystemQIndex::Invalid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQIndex::isValid(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQIndex::isValid(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("SimTK!SystemQIndex!isValid", static_cast<bool (*)(int) >(&SimTK::SystemQIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQIndex::isValid(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQIndex::isValid(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("SimTK!SystemQIndex!isValid", static_cast<bool (*)(short) >(&SimTK::SystemQIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQIndex::isValid(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQIndex::isValid(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("SimTK!SystemQIndex!isValid", static_cast<bool (*)(long) >(&SimTK::SystemQIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQIndex::isValid(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQIndex::isValid(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("SimTK!SystemQIndex!isValid", static_cast<bool (*)(long long) >(&SimTK::SystemQIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQIndex::isValid(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQIndex::isValid(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("SimTK!SystemQIndex!isValid", static_cast<bool (*)(unsigned int) >(&SimTK::SystemQIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQIndex::isValid(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQIndex::isValid(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("SimTK!SystemQIndex!isValid", static_cast<bool (*)(unsigned short) >(&SimTK::SystemQIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQIndex::isValid(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQIndex::isValid(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("SimTK!SystemQIndex!isValid", static_cast<bool (*)(unsigned long) >(&SimTK::SystemQIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQIndex::isValid(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQIndex::isValid(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("SimTK!SystemQIndex!isValid", static_cast<bool (*)(unsigned long long) >(&SimTK::SystemQIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQIndex::isValidExtended(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQIndex::isValidExtended(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("SimTK!SystemQIndex!isValidExtended", static_cast<bool (*)(int) >(&SimTK::SystemQIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQIndex::isValidExtended(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQIndex::isValidExtended(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("SimTK!SystemQIndex!isValidExtended", static_cast<bool (*)(short) >(&SimTK::SystemQIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQIndex::isValidExtended(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQIndex::isValidExtended(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("SimTK!SystemQIndex!isValidExtended", static_cast<bool (*)(long) >(&SimTK::SystemQIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQIndex::isValidExtended(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQIndex::isValidExtended(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("SimTK!SystemQIndex!isValidExtended", static_cast<bool (*)(long long) >(&SimTK::SystemQIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for SimTK::SystemQIndex::size_type SimTK::SystemQIndex::max_size() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemQIndex::size_type SimTK::SystemQIndex::max_size()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  t17.method("SimTK!SystemQIndex!max_size", static_cast<SimTK::SystemQIndex::size_type (*)() >(&SimTK::SystemQIndex::max_size));

  /* End of SimTK::SystemQIndex class method wrappers
   **********************************************************************/


  /**********************************************************************/
  /* Wrappers for the methods of class SimTK::QIndex
   */


  DEBUG_MSG("Adding wrapper for void SimTK::QIndex::QIndex(int) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:32
  t18.constructor<int>();


  DEBUG_MSG("Adding wrapper for void SimTK::QIndex::QIndex(long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:32
  t18.constructor<long>();


  DEBUG_MSG("Adding wrapper for void SimTK::QIndex::QIndex(long long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:32
  t18.constructor<long long>();


  DEBUG_MSG("Adding wrapper for void SimTK::QIndex::QIndex(unsigned int) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:32
  t18.constructor<unsigned int>();


  DEBUG_MSG("Adding wrapper for void SimTK::QIndex::QIndex(unsigned long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:32
  t18.constructor<unsigned long>();


  DEBUG_MSG("Adding wrapper for void SimTK::QIndex::QIndex(unsigned long long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:32
  t18.constructor<unsigned long long>();

  DEBUG_MSG("Adding wrapper for bool SimTK::QIndex::isValid() (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QIndex::isValid()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("isValid", static_cast<bool (SimTK::QIndex::*)()  const>(&SimTK::QIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::QIndex::isValidExtended() (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QIndex::isValidExtended()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("isValidExtended", static_cast<bool (SimTK::QIndex::*)()  const>(&SimTK::QIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for void SimTK::QIndex::invalidate() (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::QIndex::invalidate()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("invalidate", static_cast<void (SimTK::QIndex::*)() >(&SimTK::QIndex::invalidate));

  DEBUG_MSG("Adding wrapper for void SimTK::QIndex::clear() (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::QIndex::clear()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("clear", static_cast<void (SimTK::QIndex::*)() >(&SimTK::QIndex::clear));
  types.set_override_module(jl_base_module);

  DEBUG_MSG("Adding wrapper for bool SimTK::QIndex::operator==(const SimTK::QIndex &) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QIndex::operator==(const SimTK::QIndex &)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("==", static_cast<bool (SimTK::QIndex::*)(const SimTK::QIndex &)  const>(&SimTK::QIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::QIndex::operator==(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QIndex::operator==(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("==", static_cast<bool (SimTK::QIndex::*)(int)  const>(&SimTK::QIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::QIndex::operator==(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QIndex::operator==(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("==", static_cast<bool (SimTK::QIndex::*)(short)  const>(&SimTK::QIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::QIndex::operator==(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QIndex::operator==(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("==", static_cast<bool (SimTK::QIndex::*)(long)  const>(&SimTK::QIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::QIndex::operator==(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QIndex::operator==(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("==", static_cast<bool (SimTK::QIndex::*)(long long)  const>(&SimTK::QIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::QIndex::operator==(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QIndex::operator==(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("==", static_cast<bool (SimTK::QIndex::*)(unsigned int)  const>(&SimTK::QIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::QIndex::operator==(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QIndex::operator==(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("==", static_cast<bool (SimTK::QIndex::*)(unsigned short)  const>(&SimTK::QIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::QIndex::operator==(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QIndex::operator==(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("==", static_cast<bool (SimTK::QIndex::*)(unsigned long)  const>(&SimTK::QIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::QIndex::operator==(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QIndex::operator==(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("==", static_cast<bool (SimTK::QIndex::*)(unsigned long long)  const>(&SimTK::QIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::QIndex::operator!=(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QIndex::operator!=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("!=", static_cast<bool (SimTK::QIndex::*)(int)  const>(&SimTK::QIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::QIndex::operator!=(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QIndex::operator!=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("!=", static_cast<bool (SimTK::QIndex::*)(short)  const>(&SimTK::QIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::QIndex::operator!=(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QIndex::operator!=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("!=", static_cast<bool (SimTK::QIndex::*)(long)  const>(&SimTK::QIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::QIndex::operator!=(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QIndex::operator!=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("!=", static_cast<bool (SimTK::QIndex::*)(long long)  const>(&SimTK::QIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::QIndex::operator!=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QIndex::operator!=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("!=", static_cast<bool (SimTK::QIndex::*)(unsigned int)  const>(&SimTK::QIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::QIndex::operator!=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QIndex::operator!=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("!=", static_cast<bool (SimTK::QIndex::*)(unsigned long)  const>(&SimTK::QIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::QIndex::operator!=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QIndex::operator!=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("!=", static_cast<bool (SimTK::QIndex::*)(unsigned long long)  const>(&SimTK::QIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::QIndex::operator<(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QIndex::operator<(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("<", static_cast<bool (SimTK::QIndex::*)(int)  const>(&SimTK::QIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::QIndex::operator<(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QIndex::operator<(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("<", static_cast<bool (SimTK::QIndex::*)(short)  const>(&SimTK::QIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::QIndex::operator<(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QIndex::operator<(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("<", static_cast<bool (SimTK::QIndex::*)(long)  const>(&SimTK::QIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::QIndex::operator<(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QIndex::operator<(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("<", static_cast<bool (SimTK::QIndex::*)(long long)  const>(&SimTK::QIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::QIndex::operator<(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QIndex::operator<(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("<", static_cast<bool (SimTK::QIndex::*)(unsigned int)  const>(&SimTK::QIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::QIndex::operator<(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QIndex::operator<(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("<", static_cast<bool (SimTK::QIndex::*)(unsigned short)  const>(&SimTK::QIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::QIndex::operator<(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QIndex::operator<(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("<", static_cast<bool (SimTK::QIndex::*)(unsigned long)  const>(&SimTK::QIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::QIndex::operator<(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QIndex::operator<(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("<", static_cast<bool (SimTK::QIndex::*)(unsigned long long)  const>(&SimTK::QIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::QIndex::operator>=(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QIndex::operator>=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method(">=", static_cast<bool (SimTK::QIndex::*)(int)  const>(&SimTK::QIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::QIndex::operator>=(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QIndex::operator>=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method(">=", static_cast<bool (SimTK::QIndex::*)(short)  const>(&SimTK::QIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::QIndex::operator>=(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QIndex::operator>=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method(">=", static_cast<bool (SimTK::QIndex::*)(long)  const>(&SimTK::QIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::QIndex::operator>=(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QIndex::operator>=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method(">=", static_cast<bool (SimTK::QIndex::*)(long long)  const>(&SimTK::QIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::QIndex::operator>=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QIndex::operator>=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method(">=", static_cast<bool (SimTK::QIndex::*)(unsigned int)  const>(&SimTK::QIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::QIndex::operator>=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QIndex::operator>=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method(">=", static_cast<bool (SimTK::QIndex::*)(unsigned short)  const>(&SimTK::QIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::QIndex::operator>=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QIndex::operator>=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method(">=", static_cast<bool (SimTK::QIndex::*)(unsigned long)  const>(&SimTK::QIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::QIndex::operator>=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QIndex::operator>=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method(">=", static_cast<bool (SimTK::QIndex::*)(unsigned long long)  const>(&SimTK::QIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::QIndex::operator>(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QIndex::operator>(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method(">", static_cast<bool (SimTK::QIndex::*)(int)  const>(&SimTK::QIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::QIndex::operator>(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QIndex::operator>(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method(">", static_cast<bool (SimTK::QIndex::*)(short)  const>(&SimTK::QIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::QIndex::operator>(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QIndex::operator>(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method(">", static_cast<bool (SimTK::QIndex::*)(long)  const>(&SimTK::QIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::QIndex::operator>(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QIndex::operator>(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method(">", static_cast<bool (SimTK::QIndex::*)(long long)  const>(&SimTK::QIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::QIndex::operator>(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QIndex::operator>(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method(">", static_cast<bool (SimTK::QIndex::*)(unsigned int)  const>(&SimTK::QIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::QIndex::operator>(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QIndex::operator>(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method(">", static_cast<bool (SimTK::QIndex::*)(unsigned short)  const>(&SimTK::QIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::QIndex::operator>(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QIndex::operator>(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method(">", static_cast<bool (SimTK::QIndex::*)(unsigned long)  const>(&SimTK::QIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::QIndex::operator>(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QIndex::operator>(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method(">", static_cast<bool (SimTK::QIndex::*)(unsigned long long)  const>(&SimTK::QIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::QIndex::operator<=(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QIndex::operator<=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("<=", static_cast<bool (SimTK::QIndex::*)(int)  const>(&SimTK::QIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::QIndex::operator<=(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QIndex::operator<=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("<=", static_cast<bool (SimTK::QIndex::*)(short)  const>(&SimTK::QIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::QIndex::operator<=(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QIndex::operator<=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("<=", static_cast<bool (SimTK::QIndex::*)(long)  const>(&SimTK::QIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::QIndex::operator<=(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QIndex::operator<=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("<=", static_cast<bool (SimTK::QIndex::*)(long long)  const>(&SimTK::QIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::QIndex::operator<=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QIndex::operator<=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("<=", static_cast<bool (SimTK::QIndex::*)(unsigned int)  const>(&SimTK::QIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::QIndex::operator<=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QIndex::operator<=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("<=", static_cast<bool (SimTK::QIndex::*)(unsigned short)  const>(&SimTK::QIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::QIndex::operator<=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QIndex::operator<=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("<=", static_cast<bool (SimTK::QIndex::*)(unsigned long)  const>(&SimTK::QIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::QIndex::operator<=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QIndex::operator<=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("<=", static_cast<bool (SimTK::QIndex::*)(unsigned long long)  const>(&SimTK::QIndex::operator<=));
  types.unset_override_module();

  DEBUG_MSG("Adding wrapper for const SimTK::QIndex & SimTK::QIndex::operator++() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::QIndex & SimTK::QIndex::operator++()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("inc!", static_cast<const SimTK::QIndex & (SimTK::QIndex::*)() >(&SimTK::QIndex::operator++));

  DEBUG_MSG("Adding wrapper for SimTK::QIndex SimTK::QIndex::operator++(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::QIndex SimTK::QIndex::operator++(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("inc!", static_cast<SimTK::QIndex (SimTK::QIndex::*)(int) >(&SimTK::QIndex::operator++));

  DEBUG_MSG("Adding wrapper for const SimTK::QIndex & SimTK::QIndex::operator--() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::QIndex & SimTK::QIndex::operator--()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("dec!", static_cast<const SimTK::QIndex & (SimTK::QIndex::*)() >(&SimTK::QIndex::operator--));

  DEBUG_MSG("Adding wrapper for SimTK::QIndex SimTK::QIndex::operator--(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::QIndex SimTK::QIndex::operator--(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("dec!", static_cast<SimTK::QIndex (SimTK::QIndex::*)(int) >(&SimTK::QIndex::operator--));

  DEBUG_MSG("Adding wrapper for SimTK::QIndex SimTK::QIndex::next() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::QIndex SimTK::QIndex::next()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("next", static_cast<SimTK::QIndex (SimTK::QIndex::*)()  const>(&SimTK::QIndex::next));

  DEBUG_MSG("Adding wrapper for SimTK::QIndex SimTK::QIndex::prev() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::QIndex SimTK::QIndex::prev()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("prev", static_cast<SimTK::QIndex (SimTK::QIndex::*)()  const>(&SimTK::QIndex::prev));

  DEBUG_MSG("Adding wrapper for SimTK::QIndex & SimTK::QIndex::operator+=(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::QIndex & SimTK::QIndex::operator+=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("add!", static_cast<SimTK::QIndex & (SimTK::QIndex::*)(int) >(&SimTK::QIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::QIndex & SimTK::QIndex::operator-=(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::QIndex & SimTK::QIndex::operator-=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("sub!", static_cast<SimTK::QIndex & (SimTK::QIndex::*)(int) >(&SimTK::QIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::QIndex & SimTK::QIndex::operator+=(short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::QIndex & SimTK::QIndex::operator+=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("add!", static_cast<SimTK::QIndex & (SimTK::QIndex::*)(short) >(&SimTK::QIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::QIndex & SimTK::QIndex::operator-=(short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::QIndex & SimTK::QIndex::operator-=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("sub!", static_cast<SimTK::QIndex & (SimTK::QIndex::*)(short) >(&SimTK::QIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::QIndex & SimTK::QIndex::operator+=(long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::QIndex & SimTK::QIndex::operator+=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("add!", static_cast<SimTK::QIndex & (SimTK::QIndex::*)(long) >(&SimTK::QIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::QIndex & SimTK::QIndex::operator-=(long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::QIndex & SimTK::QIndex::operator-=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("sub!", static_cast<SimTK::QIndex & (SimTK::QIndex::*)(long) >(&SimTK::QIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::QIndex & SimTK::QIndex::operator+=(long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::QIndex & SimTK::QIndex::operator+=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("add!", static_cast<SimTK::QIndex & (SimTK::QIndex::*)(long long) >(&SimTK::QIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::QIndex & SimTK::QIndex::operator-=(long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::QIndex & SimTK::QIndex::operator-=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("sub!", static_cast<SimTK::QIndex & (SimTK::QIndex::*)(long long) >(&SimTK::QIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::QIndex & SimTK::QIndex::operator+=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::QIndex & SimTK::QIndex::operator+=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("add!", static_cast<SimTK::QIndex & (SimTK::QIndex::*)(unsigned int) >(&SimTK::QIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::QIndex & SimTK::QIndex::operator-=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::QIndex & SimTK::QIndex::operator-=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("sub!", static_cast<SimTK::QIndex & (SimTK::QIndex::*)(unsigned int) >(&SimTK::QIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::QIndex & SimTK::QIndex::operator+=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::QIndex & SimTK::QIndex::operator+=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("add!", static_cast<SimTK::QIndex & (SimTK::QIndex::*)(unsigned short) >(&SimTK::QIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::QIndex & SimTK::QIndex::operator-=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::QIndex & SimTK::QIndex::operator-=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("sub!", static_cast<SimTK::QIndex & (SimTK::QIndex::*)(unsigned short) >(&SimTK::QIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::QIndex & SimTK::QIndex::operator+=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::QIndex & SimTK::QIndex::operator+=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("add!", static_cast<SimTK::QIndex & (SimTK::QIndex::*)(unsigned long) >(&SimTK::QIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::QIndex & SimTK::QIndex::operator-=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::QIndex & SimTK::QIndex::operator-=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("sub!", static_cast<SimTK::QIndex & (SimTK::QIndex::*)(unsigned long) >(&SimTK::QIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::QIndex & SimTK::QIndex::operator+=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::QIndex & SimTK::QIndex::operator+=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("add!", static_cast<SimTK::QIndex & (SimTK::QIndex::*)(unsigned long long) >(&SimTK::QIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::QIndex & SimTK::QIndex::operator-=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::QIndex & SimTK::QIndex::operator-=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("sub!", static_cast<SimTK::QIndex & (SimTK::QIndex::*)(unsigned long long) >(&SimTK::QIndex::operator-=));

  DEBUG_MSG("Adding wrapper for const SimTK::QIndex & SimTK::QIndex::Invalid() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::QIndex & SimTK::QIndex::Invalid()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("SimTK!QIndex!Invalid", static_cast<const SimTK::QIndex & (*)() >(&SimTK::QIndex::Invalid));

  DEBUG_MSG("Adding wrapper for bool SimTK::QIndex::isValid(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QIndex::isValid(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("SimTK!QIndex!isValid", static_cast<bool (*)(int) >(&SimTK::QIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::QIndex::isValid(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QIndex::isValid(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("SimTK!QIndex!isValid", static_cast<bool (*)(short) >(&SimTK::QIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::QIndex::isValid(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QIndex::isValid(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("SimTK!QIndex!isValid", static_cast<bool (*)(long) >(&SimTK::QIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::QIndex::isValid(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QIndex::isValid(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("SimTK!QIndex!isValid", static_cast<bool (*)(long long) >(&SimTK::QIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::QIndex::isValid(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QIndex::isValid(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("SimTK!QIndex!isValid", static_cast<bool (*)(unsigned int) >(&SimTK::QIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::QIndex::isValid(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QIndex::isValid(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("SimTK!QIndex!isValid", static_cast<bool (*)(unsigned short) >(&SimTK::QIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::QIndex::isValid(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QIndex::isValid(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("SimTK!QIndex!isValid", static_cast<bool (*)(unsigned long) >(&SimTK::QIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::QIndex::isValid(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QIndex::isValid(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("SimTK!QIndex!isValid", static_cast<bool (*)(unsigned long long) >(&SimTK::QIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::QIndex::isValidExtended(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QIndex::isValidExtended(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("SimTK!QIndex!isValidExtended", static_cast<bool (*)(int) >(&SimTK::QIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for bool SimTK::QIndex::isValidExtended(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QIndex::isValidExtended(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("SimTK!QIndex!isValidExtended", static_cast<bool (*)(short) >(&SimTK::QIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for bool SimTK::QIndex::isValidExtended(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QIndex::isValidExtended(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("SimTK!QIndex!isValidExtended", static_cast<bool (*)(long) >(&SimTK::QIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for bool SimTK::QIndex::isValidExtended(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QIndex::isValidExtended(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("SimTK!QIndex!isValidExtended", static_cast<bool (*)(long long) >(&SimTK::QIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for SimTK::QIndex::size_type SimTK::QIndex::max_size() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::QIndex::size_type SimTK::QIndex::max_size()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  t18.method("SimTK!QIndex!max_size", static_cast<SimTK::QIndex::size_type (*)() >(&SimTK::QIndex::max_size));

  /* End of SimTK::QIndex class method wrappers
   **********************************************************************/


  /**********************************************************************/
  /* Wrappers for the methods of class SimTK::SystemUIndex
   */


  DEBUG_MSG("Adding wrapper for void SimTK::SystemUIndex::SystemUIndex(int) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:32
  t19.constructor<int>();


  DEBUG_MSG("Adding wrapper for void SimTK::SystemUIndex::SystemUIndex(long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:32
  t19.constructor<long>();


  DEBUG_MSG("Adding wrapper for void SimTK::SystemUIndex::SystemUIndex(long long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:32
  t19.constructor<long long>();


  DEBUG_MSG("Adding wrapper for void SimTK::SystemUIndex::SystemUIndex(unsigned int) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:32
  t19.constructor<unsigned int>();


  DEBUG_MSG("Adding wrapper for void SimTK::SystemUIndex::SystemUIndex(unsigned long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:32
  t19.constructor<unsigned long>();


  DEBUG_MSG("Adding wrapper for void SimTK::SystemUIndex::SystemUIndex(unsigned long long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:32
  t19.constructor<unsigned long long>();

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUIndex::isValid() (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUIndex::isValid()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("isValid", static_cast<bool (SimTK::SystemUIndex::*)()  const>(&SimTK::SystemUIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUIndex::isValidExtended() (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUIndex::isValidExtended()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("isValidExtended", static_cast<bool (SimTK::SystemUIndex::*)()  const>(&SimTK::SystemUIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for void SimTK::SystemUIndex::invalidate() (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::SystemUIndex::invalidate()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("invalidate", static_cast<void (SimTK::SystemUIndex::*)() >(&SimTK::SystemUIndex::invalidate));

  DEBUG_MSG("Adding wrapper for void SimTK::SystemUIndex::clear() (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::SystemUIndex::clear()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("clear", static_cast<void (SimTK::SystemUIndex::*)() >(&SimTK::SystemUIndex::clear));
  types.set_override_module(jl_base_module);

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUIndex::operator==(const SimTK::SystemUIndex &) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUIndex::operator==(const SimTK::SystemUIndex &)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("==", static_cast<bool (SimTK::SystemUIndex::*)(const SimTK::SystemUIndex &)  const>(&SimTK::SystemUIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUIndex::operator==(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUIndex::operator==(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("==", static_cast<bool (SimTK::SystemUIndex::*)(int)  const>(&SimTK::SystemUIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUIndex::operator==(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUIndex::operator==(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("==", static_cast<bool (SimTK::SystemUIndex::*)(short)  const>(&SimTK::SystemUIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUIndex::operator==(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUIndex::operator==(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("==", static_cast<bool (SimTK::SystemUIndex::*)(long)  const>(&SimTK::SystemUIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUIndex::operator==(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUIndex::operator==(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("==", static_cast<bool (SimTK::SystemUIndex::*)(long long)  const>(&SimTK::SystemUIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUIndex::operator==(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUIndex::operator==(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("==", static_cast<bool (SimTK::SystemUIndex::*)(unsigned int)  const>(&SimTK::SystemUIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUIndex::operator==(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUIndex::operator==(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("==", static_cast<bool (SimTK::SystemUIndex::*)(unsigned short)  const>(&SimTK::SystemUIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUIndex::operator==(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUIndex::operator==(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("==", static_cast<bool (SimTK::SystemUIndex::*)(unsigned long)  const>(&SimTK::SystemUIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUIndex::operator==(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUIndex::operator==(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("==", static_cast<bool (SimTK::SystemUIndex::*)(unsigned long long)  const>(&SimTK::SystemUIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUIndex::operator!=(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUIndex::operator!=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("!=", static_cast<bool (SimTK::SystemUIndex::*)(int)  const>(&SimTK::SystemUIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUIndex::operator!=(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUIndex::operator!=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("!=", static_cast<bool (SimTK::SystemUIndex::*)(short)  const>(&SimTK::SystemUIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUIndex::operator!=(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUIndex::operator!=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("!=", static_cast<bool (SimTK::SystemUIndex::*)(long)  const>(&SimTK::SystemUIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUIndex::operator!=(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUIndex::operator!=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("!=", static_cast<bool (SimTK::SystemUIndex::*)(long long)  const>(&SimTK::SystemUIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUIndex::operator!=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUIndex::operator!=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("!=", static_cast<bool (SimTK::SystemUIndex::*)(unsigned int)  const>(&SimTK::SystemUIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUIndex::operator!=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUIndex::operator!=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("!=", static_cast<bool (SimTK::SystemUIndex::*)(unsigned long)  const>(&SimTK::SystemUIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUIndex::operator!=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUIndex::operator!=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("!=", static_cast<bool (SimTK::SystemUIndex::*)(unsigned long long)  const>(&SimTK::SystemUIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUIndex::operator<(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUIndex::operator<(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("<", static_cast<bool (SimTK::SystemUIndex::*)(int)  const>(&SimTK::SystemUIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUIndex::operator<(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUIndex::operator<(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("<", static_cast<bool (SimTK::SystemUIndex::*)(short)  const>(&SimTK::SystemUIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUIndex::operator<(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUIndex::operator<(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("<", static_cast<bool (SimTK::SystemUIndex::*)(long)  const>(&SimTK::SystemUIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUIndex::operator<(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUIndex::operator<(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("<", static_cast<bool (SimTK::SystemUIndex::*)(long long)  const>(&SimTK::SystemUIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUIndex::operator<(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUIndex::operator<(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("<", static_cast<bool (SimTK::SystemUIndex::*)(unsigned int)  const>(&SimTK::SystemUIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUIndex::operator<(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUIndex::operator<(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("<", static_cast<bool (SimTK::SystemUIndex::*)(unsigned short)  const>(&SimTK::SystemUIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUIndex::operator<(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUIndex::operator<(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("<", static_cast<bool (SimTK::SystemUIndex::*)(unsigned long)  const>(&SimTK::SystemUIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUIndex::operator<(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUIndex::operator<(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("<", static_cast<bool (SimTK::SystemUIndex::*)(unsigned long long)  const>(&SimTK::SystemUIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUIndex::operator>=(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUIndex::operator>=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method(">=", static_cast<bool (SimTK::SystemUIndex::*)(int)  const>(&SimTK::SystemUIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUIndex::operator>=(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUIndex::operator>=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method(">=", static_cast<bool (SimTK::SystemUIndex::*)(short)  const>(&SimTK::SystemUIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUIndex::operator>=(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUIndex::operator>=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method(">=", static_cast<bool (SimTK::SystemUIndex::*)(long)  const>(&SimTK::SystemUIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUIndex::operator>=(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUIndex::operator>=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method(">=", static_cast<bool (SimTK::SystemUIndex::*)(long long)  const>(&SimTK::SystemUIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUIndex::operator>=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUIndex::operator>=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method(">=", static_cast<bool (SimTK::SystemUIndex::*)(unsigned int)  const>(&SimTK::SystemUIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUIndex::operator>=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUIndex::operator>=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method(">=", static_cast<bool (SimTK::SystemUIndex::*)(unsigned short)  const>(&SimTK::SystemUIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUIndex::operator>=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUIndex::operator>=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method(">=", static_cast<bool (SimTK::SystemUIndex::*)(unsigned long)  const>(&SimTK::SystemUIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUIndex::operator>=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUIndex::operator>=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method(">=", static_cast<bool (SimTK::SystemUIndex::*)(unsigned long long)  const>(&SimTK::SystemUIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUIndex::operator>(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUIndex::operator>(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method(">", static_cast<bool (SimTK::SystemUIndex::*)(int)  const>(&SimTK::SystemUIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUIndex::operator>(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUIndex::operator>(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method(">", static_cast<bool (SimTK::SystemUIndex::*)(short)  const>(&SimTK::SystemUIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUIndex::operator>(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUIndex::operator>(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method(">", static_cast<bool (SimTK::SystemUIndex::*)(long)  const>(&SimTK::SystemUIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUIndex::operator>(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUIndex::operator>(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method(">", static_cast<bool (SimTK::SystemUIndex::*)(long long)  const>(&SimTK::SystemUIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUIndex::operator>(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUIndex::operator>(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method(">", static_cast<bool (SimTK::SystemUIndex::*)(unsigned int)  const>(&SimTK::SystemUIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUIndex::operator>(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUIndex::operator>(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method(">", static_cast<bool (SimTK::SystemUIndex::*)(unsigned short)  const>(&SimTK::SystemUIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUIndex::operator>(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUIndex::operator>(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method(">", static_cast<bool (SimTK::SystemUIndex::*)(unsigned long)  const>(&SimTK::SystemUIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUIndex::operator>(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUIndex::operator>(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method(">", static_cast<bool (SimTK::SystemUIndex::*)(unsigned long long)  const>(&SimTK::SystemUIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUIndex::operator<=(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUIndex::operator<=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("<=", static_cast<bool (SimTK::SystemUIndex::*)(int)  const>(&SimTK::SystemUIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUIndex::operator<=(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUIndex::operator<=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("<=", static_cast<bool (SimTK::SystemUIndex::*)(short)  const>(&SimTK::SystemUIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUIndex::operator<=(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUIndex::operator<=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("<=", static_cast<bool (SimTK::SystemUIndex::*)(long)  const>(&SimTK::SystemUIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUIndex::operator<=(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUIndex::operator<=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("<=", static_cast<bool (SimTK::SystemUIndex::*)(long long)  const>(&SimTK::SystemUIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUIndex::operator<=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUIndex::operator<=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("<=", static_cast<bool (SimTK::SystemUIndex::*)(unsigned int)  const>(&SimTK::SystemUIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUIndex::operator<=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUIndex::operator<=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("<=", static_cast<bool (SimTK::SystemUIndex::*)(unsigned short)  const>(&SimTK::SystemUIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUIndex::operator<=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUIndex::operator<=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("<=", static_cast<bool (SimTK::SystemUIndex::*)(unsigned long)  const>(&SimTK::SystemUIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUIndex::operator<=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUIndex::operator<=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("<=", static_cast<bool (SimTK::SystemUIndex::*)(unsigned long long)  const>(&SimTK::SystemUIndex::operator<=));
  types.unset_override_module();

  DEBUG_MSG("Adding wrapper for const SimTK::SystemUIndex & SimTK::SystemUIndex::operator++() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::SystemUIndex & SimTK::SystemUIndex::operator++()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("inc!", static_cast<const SimTK::SystemUIndex & (SimTK::SystemUIndex::*)() >(&SimTK::SystemUIndex::operator++));

  DEBUG_MSG("Adding wrapper for SimTK::SystemUIndex SimTK::SystemUIndex::operator++(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemUIndex SimTK::SystemUIndex::operator++(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("inc!", static_cast<SimTK::SystemUIndex (SimTK::SystemUIndex::*)(int) >(&SimTK::SystemUIndex::operator++));

  DEBUG_MSG("Adding wrapper for const SimTK::SystemUIndex & SimTK::SystemUIndex::operator--() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::SystemUIndex & SimTK::SystemUIndex::operator--()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("dec!", static_cast<const SimTK::SystemUIndex & (SimTK::SystemUIndex::*)() >(&SimTK::SystemUIndex::operator--));

  DEBUG_MSG("Adding wrapper for SimTK::SystemUIndex SimTK::SystemUIndex::operator--(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemUIndex SimTK::SystemUIndex::operator--(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("dec!", static_cast<SimTK::SystemUIndex (SimTK::SystemUIndex::*)(int) >(&SimTK::SystemUIndex::operator--));

  DEBUG_MSG("Adding wrapper for SimTK::SystemUIndex SimTK::SystemUIndex::next() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemUIndex SimTK::SystemUIndex::next()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("next", static_cast<SimTK::SystemUIndex (SimTK::SystemUIndex::*)()  const>(&SimTK::SystemUIndex::next));

  DEBUG_MSG("Adding wrapper for SimTK::SystemUIndex SimTK::SystemUIndex::prev() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemUIndex SimTK::SystemUIndex::prev()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("prev", static_cast<SimTK::SystemUIndex (SimTK::SystemUIndex::*)()  const>(&SimTK::SystemUIndex::prev));

  DEBUG_MSG("Adding wrapper for SimTK::SystemUIndex & SimTK::SystemUIndex::operator+=(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemUIndex & SimTK::SystemUIndex::operator+=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("add!", static_cast<SimTK::SystemUIndex & (SimTK::SystemUIndex::*)(int) >(&SimTK::SystemUIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemUIndex & SimTK::SystemUIndex::operator-=(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemUIndex & SimTK::SystemUIndex::operator-=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("sub!", static_cast<SimTK::SystemUIndex & (SimTK::SystemUIndex::*)(int) >(&SimTK::SystemUIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemUIndex & SimTK::SystemUIndex::operator+=(short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemUIndex & SimTK::SystemUIndex::operator+=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("add!", static_cast<SimTK::SystemUIndex & (SimTK::SystemUIndex::*)(short) >(&SimTK::SystemUIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemUIndex & SimTK::SystemUIndex::operator-=(short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemUIndex & SimTK::SystemUIndex::operator-=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("sub!", static_cast<SimTK::SystemUIndex & (SimTK::SystemUIndex::*)(short) >(&SimTK::SystemUIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemUIndex & SimTK::SystemUIndex::operator+=(long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemUIndex & SimTK::SystemUIndex::operator+=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("add!", static_cast<SimTK::SystemUIndex & (SimTK::SystemUIndex::*)(long) >(&SimTK::SystemUIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemUIndex & SimTK::SystemUIndex::operator-=(long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemUIndex & SimTK::SystemUIndex::operator-=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("sub!", static_cast<SimTK::SystemUIndex & (SimTK::SystemUIndex::*)(long) >(&SimTK::SystemUIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemUIndex & SimTK::SystemUIndex::operator+=(long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemUIndex & SimTK::SystemUIndex::operator+=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("add!", static_cast<SimTK::SystemUIndex & (SimTK::SystemUIndex::*)(long long) >(&SimTK::SystemUIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemUIndex & SimTK::SystemUIndex::operator-=(long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemUIndex & SimTK::SystemUIndex::operator-=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("sub!", static_cast<SimTK::SystemUIndex & (SimTK::SystemUIndex::*)(long long) >(&SimTK::SystemUIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemUIndex & SimTK::SystemUIndex::operator+=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemUIndex & SimTK::SystemUIndex::operator+=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("add!", static_cast<SimTK::SystemUIndex & (SimTK::SystemUIndex::*)(unsigned int) >(&SimTK::SystemUIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemUIndex & SimTK::SystemUIndex::operator-=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemUIndex & SimTK::SystemUIndex::operator-=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("sub!", static_cast<SimTK::SystemUIndex & (SimTK::SystemUIndex::*)(unsigned int) >(&SimTK::SystemUIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemUIndex & SimTK::SystemUIndex::operator+=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemUIndex & SimTK::SystemUIndex::operator+=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("add!", static_cast<SimTK::SystemUIndex & (SimTK::SystemUIndex::*)(unsigned short) >(&SimTK::SystemUIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemUIndex & SimTK::SystemUIndex::operator-=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemUIndex & SimTK::SystemUIndex::operator-=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("sub!", static_cast<SimTK::SystemUIndex & (SimTK::SystemUIndex::*)(unsigned short) >(&SimTK::SystemUIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemUIndex & SimTK::SystemUIndex::operator+=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemUIndex & SimTK::SystemUIndex::operator+=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("add!", static_cast<SimTK::SystemUIndex & (SimTK::SystemUIndex::*)(unsigned long) >(&SimTK::SystemUIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemUIndex & SimTK::SystemUIndex::operator-=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemUIndex & SimTK::SystemUIndex::operator-=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("sub!", static_cast<SimTK::SystemUIndex & (SimTK::SystemUIndex::*)(unsigned long) >(&SimTK::SystemUIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemUIndex & SimTK::SystemUIndex::operator+=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemUIndex & SimTK::SystemUIndex::operator+=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("add!", static_cast<SimTK::SystemUIndex & (SimTK::SystemUIndex::*)(unsigned long long) >(&SimTK::SystemUIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemUIndex & SimTK::SystemUIndex::operator-=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemUIndex & SimTK::SystemUIndex::operator-=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("sub!", static_cast<SimTK::SystemUIndex & (SimTK::SystemUIndex::*)(unsigned long long) >(&SimTK::SystemUIndex::operator-=));

  DEBUG_MSG("Adding wrapper for const SimTK::SystemUIndex & SimTK::SystemUIndex::Invalid() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::SystemUIndex & SimTK::SystemUIndex::Invalid()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("SimTK!SystemUIndex!Invalid", static_cast<const SimTK::SystemUIndex & (*)() >(&SimTK::SystemUIndex::Invalid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUIndex::isValid(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUIndex::isValid(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("SimTK!SystemUIndex!isValid", static_cast<bool (*)(int) >(&SimTK::SystemUIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUIndex::isValid(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUIndex::isValid(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("SimTK!SystemUIndex!isValid", static_cast<bool (*)(short) >(&SimTK::SystemUIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUIndex::isValid(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUIndex::isValid(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("SimTK!SystemUIndex!isValid", static_cast<bool (*)(long) >(&SimTK::SystemUIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUIndex::isValid(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUIndex::isValid(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("SimTK!SystemUIndex!isValid", static_cast<bool (*)(long long) >(&SimTK::SystemUIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUIndex::isValid(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUIndex::isValid(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("SimTK!SystemUIndex!isValid", static_cast<bool (*)(unsigned int) >(&SimTK::SystemUIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUIndex::isValid(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUIndex::isValid(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("SimTK!SystemUIndex!isValid", static_cast<bool (*)(unsigned short) >(&SimTK::SystemUIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUIndex::isValid(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUIndex::isValid(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("SimTK!SystemUIndex!isValid", static_cast<bool (*)(unsigned long) >(&SimTK::SystemUIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUIndex::isValid(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUIndex::isValid(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("SimTK!SystemUIndex!isValid", static_cast<bool (*)(unsigned long long) >(&SimTK::SystemUIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUIndex::isValidExtended(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUIndex::isValidExtended(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("SimTK!SystemUIndex!isValidExtended", static_cast<bool (*)(int) >(&SimTK::SystemUIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUIndex::isValidExtended(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUIndex::isValidExtended(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("SimTK!SystemUIndex!isValidExtended", static_cast<bool (*)(short) >(&SimTK::SystemUIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUIndex::isValidExtended(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUIndex::isValidExtended(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("SimTK!SystemUIndex!isValidExtended", static_cast<bool (*)(long) >(&SimTK::SystemUIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUIndex::isValidExtended(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUIndex::isValidExtended(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("SimTK!SystemUIndex!isValidExtended", static_cast<bool (*)(long long) >(&SimTK::SystemUIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for SimTK::SystemUIndex::size_type SimTK::SystemUIndex::max_size() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemUIndex::size_type SimTK::SystemUIndex::max_size()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  t19.method("SimTK!SystemUIndex!max_size", static_cast<SimTK::SystemUIndex::size_type (*)() >(&SimTK::SystemUIndex::max_size));

  /* End of SimTK::SystemUIndex class method wrappers
   **********************************************************************/


  /**********************************************************************/
  /* Wrappers for the methods of class SimTK::UIndex
   */


  DEBUG_MSG("Adding wrapper for void SimTK::UIndex::UIndex(int) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:32
  t20.constructor<int>();


  DEBUG_MSG("Adding wrapper for void SimTK::UIndex::UIndex(long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:32
  t20.constructor<long>();


  DEBUG_MSG("Adding wrapper for void SimTK::UIndex::UIndex(long long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:32
  t20.constructor<long long>();


  DEBUG_MSG("Adding wrapper for void SimTK::UIndex::UIndex(unsigned int) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:32
  t20.constructor<unsigned int>();


  DEBUG_MSG("Adding wrapper for void SimTK::UIndex::UIndex(unsigned long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:32
  t20.constructor<unsigned long>();


  DEBUG_MSG("Adding wrapper for void SimTK::UIndex::UIndex(unsigned long long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:32
  t20.constructor<unsigned long long>();

  DEBUG_MSG("Adding wrapper for bool SimTK::UIndex::isValid() (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UIndex::isValid()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("isValid", static_cast<bool (SimTK::UIndex::*)()  const>(&SimTK::UIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::UIndex::isValidExtended() (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UIndex::isValidExtended()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("isValidExtended", static_cast<bool (SimTK::UIndex::*)()  const>(&SimTK::UIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for void SimTK::UIndex::invalidate() (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::UIndex::invalidate()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("invalidate", static_cast<void (SimTK::UIndex::*)() >(&SimTK::UIndex::invalidate));

  DEBUG_MSG("Adding wrapper for void SimTK::UIndex::clear() (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::UIndex::clear()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("clear", static_cast<void (SimTK::UIndex::*)() >(&SimTK::UIndex::clear));
  types.set_override_module(jl_base_module);

  DEBUG_MSG("Adding wrapper for bool SimTK::UIndex::operator==(const SimTK::UIndex &) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UIndex::operator==(const SimTK::UIndex &)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("==", static_cast<bool (SimTK::UIndex::*)(const SimTK::UIndex &)  const>(&SimTK::UIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::UIndex::operator==(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UIndex::operator==(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("==", static_cast<bool (SimTK::UIndex::*)(int)  const>(&SimTK::UIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::UIndex::operator==(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UIndex::operator==(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("==", static_cast<bool (SimTK::UIndex::*)(short)  const>(&SimTK::UIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::UIndex::operator==(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UIndex::operator==(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("==", static_cast<bool (SimTK::UIndex::*)(long)  const>(&SimTK::UIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::UIndex::operator==(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UIndex::operator==(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("==", static_cast<bool (SimTK::UIndex::*)(long long)  const>(&SimTK::UIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::UIndex::operator==(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UIndex::operator==(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("==", static_cast<bool (SimTK::UIndex::*)(unsigned int)  const>(&SimTK::UIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::UIndex::operator==(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UIndex::operator==(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("==", static_cast<bool (SimTK::UIndex::*)(unsigned short)  const>(&SimTK::UIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::UIndex::operator==(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UIndex::operator==(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("==", static_cast<bool (SimTK::UIndex::*)(unsigned long)  const>(&SimTK::UIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::UIndex::operator==(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UIndex::operator==(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("==", static_cast<bool (SimTK::UIndex::*)(unsigned long long)  const>(&SimTK::UIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::UIndex::operator!=(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UIndex::operator!=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("!=", static_cast<bool (SimTK::UIndex::*)(int)  const>(&SimTK::UIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::UIndex::operator!=(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UIndex::operator!=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("!=", static_cast<bool (SimTK::UIndex::*)(short)  const>(&SimTK::UIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::UIndex::operator!=(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UIndex::operator!=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("!=", static_cast<bool (SimTK::UIndex::*)(long)  const>(&SimTK::UIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::UIndex::operator!=(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UIndex::operator!=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("!=", static_cast<bool (SimTK::UIndex::*)(long long)  const>(&SimTK::UIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::UIndex::operator!=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UIndex::operator!=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("!=", static_cast<bool (SimTK::UIndex::*)(unsigned int)  const>(&SimTK::UIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::UIndex::operator!=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UIndex::operator!=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("!=", static_cast<bool (SimTK::UIndex::*)(unsigned long)  const>(&SimTK::UIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::UIndex::operator!=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UIndex::operator!=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("!=", static_cast<bool (SimTK::UIndex::*)(unsigned long long)  const>(&SimTK::UIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::UIndex::operator<(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UIndex::operator<(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("<", static_cast<bool (SimTK::UIndex::*)(int)  const>(&SimTK::UIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::UIndex::operator<(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UIndex::operator<(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("<", static_cast<bool (SimTK::UIndex::*)(short)  const>(&SimTK::UIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::UIndex::operator<(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UIndex::operator<(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("<", static_cast<bool (SimTK::UIndex::*)(long)  const>(&SimTK::UIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::UIndex::operator<(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UIndex::operator<(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("<", static_cast<bool (SimTK::UIndex::*)(long long)  const>(&SimTK::UIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::UIndex::operator<(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UIndex::operator<(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("<", static_cast<bool (SimTK::UIndex::*)(unsigned int)  const>(&SimTK::UIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::UIndex::operator<(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UIndex::operator<(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("<", static_cast<bool (SimTK::UIndex::*)(unsigned short)  const>(&SimTK::UIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::UIndex::operator<(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UIndex::operator<(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("<", static_cast<bool (SimTK::UIndex::*)(unsigned long)  const>(&SimTK::UIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::UIndex::operator<(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UIndex::operator<(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("<", static_cast<bool (SimTK::UIndex::*)(unsigned long long)  const>(&SimTK::UIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::UIndex::operator>=(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UIndex::operator>=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method(">=", static_cast<bool (SimTK::UIndex::*)(int)  const>(&SimTK::UIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::UIndex::operator>=(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UIndex::operator>=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method(">=", static_cast<bool (SimTK::UIndex::*)(short)  const>(&SimTK::UIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::UIndex::operator>=(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UIndex::operator>=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method(">=", static_cast<bool (SimTK::UIndex::*)(long)  const>(&SimTK::UIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::UIndex::operator>=(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UIndex::operator>=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method(">=", static_cast<bool (SimTK::UIndex::*)(long long)  const>(&SimTK::UIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::UIndex::operator>=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UIndex::operator>=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method(">=", static_cast<bool (SimTK::UIndex::*)(unsigned int)  const>(&SimTK::UIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::UIndex::operator>=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UIndex::operator>=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method(">=", static_cast<bool (SimTK::UIndex::*)(unsigned short)  const>(&SimTK::UIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::UIndex::operator>=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UIndex::operator>=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method(">=", static_cast<bool (SimTK::UIndex::*)(unsigned long)  const>(&SimTK::UIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::UIndex::operator>=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UIndex::operator>=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method(">=", static_cast<bool (SimTK::UIndex::*)(unsigned long long)  const>(&SimTK::UIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::UIndex::operator>(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UIndex::operator>(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method(">", static_cast<bool (SimTK::UIndex::*)(int)  const>(&SimTK::UIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::UIndex::operator>(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UIndex::operator>(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method(">", static_cast<bool (SimTK::UIndex::*)(short)  const>(&SimTK::UIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::UIndex::operator>(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UIndex::operator>(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method(">", static_cast<bool (SimTK::UIndex::*)(long)  const>(&SimTK::UIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::UIndex::operator>(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UIndex::operator>(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method(">", static_cast<bool (SimTK::UIndex::*)(long long)  const>(&SimTK::UIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::UIndex::operator>(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UIndex::operator>(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method(">", static_cast<bool (SimTK::UIndex::*)(unsigned int)  const>(&SimTK::UIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::UIndex::operator>(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UIndex::operator>(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method(">", static_cast<bool (SimTK::UIndex::*)(unsigned short)  const>(&SimTK::UIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::UIndex::operator>(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UIndex::operator>(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method(">", static_cast<bool (SimTK::UIndex::*)(unsigned long)  const>(&SimTK::UIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::UIndex::operator>(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UIndex::operator>(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method(">", static_cast<bool (SimTK::UIndex::*)(unsigned long long)  const>(&SimTK::UIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::UIndex::operator<=(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UIndex::operator<=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("<=", static_cast<bool (SimTK::UIndex::*)(int)  const>(&SimTK::UIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::UIndex::operator<=(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UIndex::operator<=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("<=", static_cast<bool (SimTK::UIndex::*)(short)  const>(&SimTK::UIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::UIndex::operator<=(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UIndex::operator<=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("<=", static_cast<bool (SimTK::UIndex::*)(long)  const>(&SimTK::UIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::UIndex::operator<=(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UIndex::operator<=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("<=", static_cast<bool (SimTK::UIndex::*)(long long)  const>(&SimTK::UIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::UIndex::operator<=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UIndex::operator<=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("<=", static_cast<bool (SimTK::UIndex::*)(unsigned int)  const>(&SimTK::UIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::UIndex::operator<=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UIndex::operator<=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("<=", static_cast<bool (SimTK::UIndex::*)(unsigned short)  const>(&SimTK::UIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::UIndex::operator<=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UIndex::operator<=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("<=", static_cast<bool (SimTK::UIndex::*)(unsigned long)  const>(&SimTK::UIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::UIndex::operator<=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UIndex::operator<=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("<=", static_cast<bool (SimTK::UIndex::*)(unsigned long long)  const>(&SimTK::UIndex::operator<=));
  types.unset_override_module();

  DEBUG_MSG("Adding wrapper for const SimTK::UIndex & SimTK::UIndex::operator++() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::UIndex & SimTK::UIndex::operator++()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("inc!", static_cast<const SimTK::UIndex & (SimTK::UIndex::*)() >(&SimTK::UIndex::operator++));

  DEBUG_MSG("Adding wrapper for SimTK::UIndex SimTK::UIndex::operator++(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::UIndex SimTK::UIndex::operator++(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("inc!", static_cast<SimTK::UIndex (SimTK::UIndex::*)(int) >(&SimTK::UIndex::operator++));

  DEBUG_MSG("Adding wrapper for const SimTK::UIndex & SimTK::UIndex::operator--() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::UIndex & SimTK::UIndex::operator--()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("dec!", static_cast<const SimTK::UIndex & (SimTK::UIndex::*)() >(&SimTK::UIndex::operator--));

  DEBUG_MSG("Adding wrapper for SimTK::UIndex SimTK::UIndex::operator--(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::UIndex SimTK::UIndex::operator--(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("dec!", static_cast<SimTK::UIndex (SimTK::UIndex::*)(int) >(&SimTK::UIndex::operator--));

  DEBUG_MSG("Adding wrapper for SimTK::UIndex SimTK::UIndex::next() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::UIndex SimTK::UIndex::next()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("next", static_cast<SimTK::UIndex (SimTK::UIndex::*)()  const>(&SimTK::UIndex::next));

  DEBUG_MSG("Adding wrapper for SimTK::UIndex SimTK::UIndex::prev() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::UIndex SimTK::UIndex::prev()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("prev", static_cast<SimTK::UIndex (SimTK::UIndex::*)()  const>(&SimTK::UIndex::prev));

  DEBUG_MSG("Adding wrapper for SimTK::UIndex & SimTK::UIndex::operator+=(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::UIndex & SimTK::UIndex::operator+=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("add!", static_cast<SimTK::UIndex & (SimTK::UIndex::*)(int) >(&SimTK::UIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::UIndex & SimTK::UIndex::operator-=(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::UIndex & SimTK::UIndex::operator-=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("sub!", static_cast<SimTK::UIndex & (SimTK::UIndex::*)(int) >(&SimTK::UIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::UIndex & SimTK::UIndex::operator+=(short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::UIndex & SimTK::UIndex::operator+=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("add!", static_cast<SimTK::UIndex & (SimTK::UIndex::*)(short) >(&SimTK::UIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::UIndex & SimTK::UIndex::operator-=(short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::UIndex & SimTK::UIndex::operator-=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("sub!", static_cast<SimTK::UIndex & (SimTK::UIndex::*)(short) >(&SimTK::UIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::UIndex & SimTK::UIndex::operator+=(long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::UIndex & SimTK::UIndex::operator+=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("add!", static_cast<SimTK::UIndex & (SimTK::UIndex::*)(long) >(&SimTK::UIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::UIndex & SimTK::UIndex::operator-=(long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::UIndex & SimTK::UIndex::operator-=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("sub!", static_cast<SimTK::UIndex & (SimTK::UIndex::*)(long) >(&SimTK::UIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::UIndex & SimTK::UIndex::operator+=(long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::UIndex & SimTK::UIndex::operator+=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("add!", static_cast<SimTK::UIndex & (SimTK::UIndex::*)(long long) >(&SimTK::UIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::UIndex & SimTK::UIndex::operator-=(long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::UIndex & SimTK::UIndex::operator-=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("sub!", static_cast<SimTK::UIndex & (SimTK::UIndex::*)(long long) >(&SimTK::UIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::UIndex & SimTK::UIndex::operator+=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::UIndex & SimTK::UIndex::operator+=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("add!", static_cast<SimTK::UIndex & (SimTK::UIndex::*)(unsigned int) >(&SimTK::UIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::UIndex & SimTK::UIndex::operator-=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::UIndex & SimTK::UIndex::operator-=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("sub!", static_cast<SimTK::UIndex & (SimTK::UIndex::*)(unsigned int) >(&SimTK::UIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::UIndex & SimTK::UIndex::operator+=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::UIndex & SimTK::UIndex::operator+=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("add!", static_cast<SimTK::UIndex & (SimTK::UIndex::*)(unsigned short) >(&SimTK::UIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::UIndex & SimTK::UIndex::operator-=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::UIndex & SimTK::UIndex::operator-=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("sub!", static_cast<SimTK::UIndex & (SimTK::UIndex::*)(unsigned short) >(&SimTK::UIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::UIndex & SimTK::UIndex::operator+=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::UIndex & SimTK::UIndex::operator+=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("add!", static_cast<SimTK::UIndex & (SimTK::UIndex::*)(unsigned long) >(&SimTK::UIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::UIndex & SimTK::UIndex::operator-=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::UIndex & SimTK::UIndex::operator-=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("sub!", static_cast<SimTK::UIndex & (SimTK::UIndex::*)(unsigned long) >(&SimTK::UIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::UIndex & SimTK::UIndex::operator+=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::UIndex & SimTK::UIndex::operator+=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("add!", static_cast<SimTK::UIndex & (SimTK::UIndex::*)(unsigned long long) >(&SimTK::UIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::UIndex & SimTK::UIndex::operator-=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::UIndex & SimTK::UIndex::operator-=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("sub!", static_cast<SimTK::UIndex & (SimTK::UIndex::*)(unsigned long long) >(&SimTK::UIndex::operator-=));

  DEBUG_MSG("Adding wrapper for const SimTK::UIndex & SimTK::UIndex::Invalid() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::UIndex & SimTK::UIndex::Invalid()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("SimTK!UIndex!Invalid", static_cast<const SimTK::UIndex & (*)() >(&SimTK::UIndex::Invalid));

  DEBUG_MSG("Adding wrapper for bool SimTK::UIndex::isValid(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UIndex::isValid(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("SimTK!UIndex!isValid", static_cast<bool (*)(int) >(&SimTK::UIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::UIndex::isValid(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UIndex::isValid(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("SimTK!UIndex!isValid", static_cast<bool (*)(short) >(&SimTK::UIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::UIndex::isValid(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UIndex::isValid(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("SimTK!UIndex!isValid", static_cast<bool (*)(long) >(&SimTK::UIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::UIndex::isValid(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UIndex::isValid(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("SimTK!UIndex!isValid", static_cast<bool (*)(long long) >(&SimTK::UIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::UIndex::isValid(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UIndex::isValid(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("SimTK!UIndex!isValid", static_cast<bool (*)(unsigned int) >(&SimTK::UIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::UIndex::isValid(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UIndex::isValid(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("SimTK!UIndex!isValid", static_cast<bool (*)(unsigned short) >(&SimTK::UIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::UIndex::isValid(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UIndex::isValid(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("SimTK!UIndex!isValid", static_cast<bool (*)(unsigned long) >(&SimTK::UIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::UIndex::isValid(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UIndex::isValid(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("SimTK!UIndex!isValid", static_cast<bool (*)(unsigned long long) >(&SimTK::UIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::UIndex::isValidExtended(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UIndex::isValidExtended(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("SimTK!UIndex!isValidExtended", static_cast<bool (*)(int) >(&SimTK::UIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for bool SimTK::UIndex::isValidExtended(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UIndex::isValidExtended(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("SimTK!UIndex!isValidExtended", static_cast<bool (*)(short) >(&SimTK::UIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for bool SimTK::UIndex::isValidExtended(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UIndex::isValidExtended(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("SimTK!UIndex!isValidExtended", static_cast<bool (*)(long) >(&SimTK::UIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for bool SimTK::UIndex::isValidExtended(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UIndex::isValidExtended(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("SimTK!UIndex!isValidExtended", static_cast<bool (*)(long long) >(&SimTK::UIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for SimTK::UIndex::size_type SimTK::UIndex::max_size() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::UIndex::size_type SimTK::UIndex::max_size()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  t20.method("SimTK!UIndex!max_size", static_cast<SimTK::UIndex::size_type (*)() >(&SimTK::UIndex::max_size));

  /* End of SimTK::UIndex class method wrappers
   **********************************************************************/


  /**********************************************************************/
  /* Wrappers for the methods of class SimTK::SystemZIndex
   */


  DEBUG_MSG("Adding wrapper for void SimTK::SystemZIndex::SystemZIndex(int) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:32
  t21.constructor<int>();


  DEBUG_MSG("Adding wrapper for void SimTK::SystemZIndex::SystemZIndex(long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:32
  t21.constructor<long>();


  DEBUG_MSG("Adding wrapper for void SimTK::SystemZIndex::SystemZIndex(long long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:32
  t21.constructor<long long>();


  DEBUG_MSG("Adding wrapper for void SimTK::SystemZIndex::SystemZIndex(unsigned int) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:32
  t21.constructor<unsigned int>();


  DEBUG_MSG("Adding wrapper for void SimTK::SystemZIndex::SystemZIndex(unsigned long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:32
  t21.constructor<unsigned long>();


  DEBUG_MSG("Adding wrapper for void SimTK::SystemZIndex::SystemZIndex(unsigned long long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:32
  t21.constructor<unsigned long long>();

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemZIndex::isValid() (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemZIndex::isValid()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("isValid", static_cast<bool (SimTK::SystemZIndex::*)()  const>(&SimTK::SystemZIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemZIndex::isValidExtended() (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemZIndex::isValidExtended()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("isValidExtended", static_cast<bool (SimTK::SystemZIndex::*)()  const>(&SimTK::SystemZIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for void SimTK::SystemZIndex::invalidate() (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::SystemZIndex::invalidate()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("invalidate", static_cast<void (SimTK::SystemZIndex::*)() >(&SimTK::SystemZIndex::invalidate));

  DEBUG_MSG("Adding wrapper for void SimTK::SystemZIndex::clear() (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::SystemZIndex::clear()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("clear", static_cast<void (SimTK::SystemZIndex::*)() >(&SimTK::SystemZIndex::clear));
  types.set_override_module(jl_base_module);

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemZIndex::operator==(const SimTK::SystemZIndex &) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemZIndex::operator==(const SimTK::SystemZIndex &)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("==", static_cast<bool (SimTK::SystemZIndex::*)(const SimTK::SystemZIndex &)  const>(&SimTK::SystemZIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemZIndex::operator==(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemZIndex::operator==(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("==", static_cast<bool (SimTK::SystemZIndex::*)(int)  const>(&SimTK::SystemZIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemZIndex::operator==(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemZIndex::operator==(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("==", static_cast<bool (SimTK::SystemZIndex::*)(short)  const>(&SimTK::SystemZIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemZIndex::operator==(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemZIndex::operator==(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("==", static_cast<bool (SimTK::SystemZIndex::*)(long)  const>(&SimTK::SystemZIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemZIndex::operator==(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemZIndex::operator==(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("==", static_cast<bool (SimTK::SystemZIndex::*)(long long)  const>(&SimTK::SystemZIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemZIndex::operator==(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemZIndex::operator==(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("==", static_cast<bool (SimTK::SystemZIndex::*)(unsigned int)  const>(&SimTK::SystemZIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemZIndex::operator==(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemZIndex::operator==(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("==", static_cast<bool (SimTK::SystemZIndex::*)(unsigned short)  const>(&SimTK::SystemZIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemZIndex::operator==(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemZIndex::operator==(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("==", static_cast<bool (SimTK::SystemZIndex::*)(unsigned long)  const>(&SimTK::SystemZIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemZIndex::operator==(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemZIndex::operator==(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("==", static_cast<bool (SimTK::SystemZIndex::*)(unsigned long long)  const>(&SimTK::SystemZIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemZIndex::operator!=(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemZIndex::operator!=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("!=", static_cast<bool (SimTK::SystemZIndex::*)(int)  const>(&SimTK::SystemZIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemZIndex::operator!=(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemZIndex::operator!=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("!=", static_cast<bool (SimTK::SystemZIndex::*)(short)  const>(&SimTK::SystemZIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemZIndex::operator!=(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemZIndex::operator!=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("!=", static_cast<bool (SimTK::SystemZIndex::*)(long)  const>(&SimTK::SystemZIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemZIndex::operator!=(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemZIndex::operator!=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("!=", static_cast<bool (SimTK::SystemZIndex::*)(long long)  const>(&SimTK::SystemZIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemZIndex::operator!=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemZIndex::operator!=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("!=", static_cast<bool (SimTK::SystemZIndex::*)(unsigned int)  const>(&SimTK::SystemZIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemZIndex::operator!=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemZIndex::operator!=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("!=", static_cast<bool (SimTK::SystemZIndex::*)(unsigned long)  const>(&SimTK::SystemZIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemZIndex::operator!=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemZIndex::operator!=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("!=", static_cast<bool (SimTK::SystemZIndex::*)(unsigned long long)  const>(&SimTK::SystemZIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemZIndex::operator<(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemZIndex::operator<(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("<", static_cast<bool (SimTK::SystemZIndex::*)(int)  const>(&SimTK::SystemZIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemZIndex::operator<(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemZIndex::operator<(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("<", static_cast<bool (SimTK::SystemZIndex::*)(short)  const>(&SimTK::SystemZIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemZIndex::operator<(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemZIndex::operator<(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("<", static_cast<bool (SimTK::SystemZIndex::*)(long)  const>(&SimTK::SystemZIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemZIndex::operator<(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemZIndex::operator<(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("<", static_cast<bool (SimTK::SystemZIndex::*)(long long)  const>(&SimTK::SystemZIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemZIndex::operator<(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemZIndex::operator<(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("<", static_cast<bool (SimTK::SystemZIndex::*)(unsigned int)  const>(&SimTK::SystemZIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemZIndex::operator<(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemZIndex::operator<(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("<", static_cast<bool (SimTK::SystemZIndex::*)(unsigned short)  const>(&SimTK::SystemZIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemZIndex::operator<(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemZIndex::operator<(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("<", static_cast<bool (SimTK::SystemZIndex::*)(unsigned long)  const>(&SimTK::SystemZIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemZIndex::operator<(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemZIndex::operator<(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("<", static_cast<bool (SimTK::SystemZIndex::*)(unsigned long long)  const>(&SimTK::SystemZIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemZIndex::operator>=(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemZIndex::operator>=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method(">=", static_cast<bool (SimTK::SystemZIndex::*)(int)  const>(&SimTK::SystemZIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemZIndex::operator>=(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemZIndex::operator>=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method(">=", static_cast<bool (SimTK::SystemZIndex::*)(short)  const>(&SimTK::SystemZIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemZIndex::operator>=(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemZIndex::operator>=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method(">=", static_cast<bool (SimTK::SystemZIndex::*)(long)  const>(&SimTK::SystemZIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemZIndex::operator>=(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemZIndex::operator>=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method(">=", static_cast<bool (SimTK::SystemZIndex::*)(long long)  const>(&SimTK::SystemZIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemZIndex::operator>=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemZIndex::operator>=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method(">=", static_cast<bool (SimTK::SystemZIndex::*)(unsigned int)  const>(&SimTK::SystemZIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemZIndex::operator>=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemZIndex::operator>=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method(">=", static_cast<bool (SimTK::SystemZIndex::*)(unsigned short)  const>(&SimTK::SystemZIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemZIndex::operator>=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemZIndex::operator>=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method(">=", static_cast<bool (SimTK::SystemZIndex::*)(unsigned long)  const>(&SimTK::SystemZIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemZIndex::operator>=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemZIndex::operator>=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method(">=", static_cast<bool (SimTK::SystemZIndex::*)(unsigned long long)  const>(&SimTK::SystemZIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemZIndex::operator>(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemZIndex::operator>(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method(">", static_cast<bool (SimTK::SystemZIndex::*)(int)  const>(&SimTK::SystemZIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemZIndex::operator>(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemZIndex::operator>(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method(">", static_cast<bool (SimTK::SystemZIndex::*)(short)  const>(&SimTK::SystemZIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemZIndex::operator>(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemZIndex::operator>(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method(">", static_cast<bool (SimTK::SystemZIndex::*)(long)  const>(&SimTK::SystemZIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemZIndex::operator>(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemZIndex::operator>(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method(">", static_cast<bool (SimTK::SystemZIndex::*)(long long)  const>(&SimTK::SystemZIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemZIndex::operator>(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemZIndex::operator>(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method(">", static_cast<bool (SimTK::SystemZIndex::*)(unsigned int)  const>(&SimTK::SystemZIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemZIndex::operator>(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemZIndex::operator>(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method(">", static_cast<bool (SimTK::SystemZIndex::*)(unsigned short)  const>(&SimTK::SystemZIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemZIndex::operator>(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemZIndex::operator>(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method(">", static_cast<bool (SimTK::SystemZIndex::*)(unsigned long)  const>(&SimTK::SystemZIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemZIndex::operator>(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemZIndex::operator>(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method(">", static_cast<bool (SimTK::SystemZIndex::*)(unsigned long long)  const>(&SimTK::SystemZIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemZIndex::operator<=(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemZIndex::operator<=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("<=", static_cast<bool (SimTK::SystemZIndex::*)(int)  const>(&SimTK::SystemZIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemZIndex::operator<=(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemZIndex::operator<=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("<=", static_cast<bool (SimTK::SystemZIndex::*)(short)  const>(&SimTK::SystemZIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemZIndex::operator<=(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemZIndex::operator<=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("<=", static_cast<bool (SimTK::SystemZIndex::*)(long)  const>(&SimTK::SystemZIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemZIndex::operator<=(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemZIndex::operator<=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("<=", static_cast<bool (SimTK::SystemZIndex::*)(long long)  const>(&SimTK::SystemZIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemZIndex::operator<=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemZIndex::operator<=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("<=", static_cast<bool (SimTK::SystemZIndex::*)(unsigned int)  const>(&SimTK::SystemZIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemZIndex::operator<=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemZIndex::operator<=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("<=", static_cast<bool (SimTK::SystemZIndex::*)(unsigned short)  const>(&SimTK::SystemZIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemZIndex::operator<=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemZIndex::operator<=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("<=", static_cast<bool (SimTK::SystemZIndex::*)(unsigned long)  const>(&SimTK::SystemZIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemZIndex::operator<=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemZIndex::operator<=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("<=", static_cast<bool (SimTK::SystemZIndex::*)(unsigned long long)  const>(&SimTK::SystemZIndex::operator<=));
  types.unset_override_module();

  DEBUG_MSG("Adding wrapper for const SimTK::SystemZIndex & SimTK::SystemZIndex::operator++() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::SystemZIndex & SimTK::SystemZIndex::operator++()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("inc!", static_cast<const SimTK::SystemZIndex & (SimTK::SystemZIndex::*)() >(&SimTK::SystemZIndex::operator++));

  DEBUG_MSG("Adding wrapper for SimTK::SystemZIndex SimTK::SystemZIndex::operator++(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemZIndex SimTK::SystemZIndex::operator++(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("inc!", static_cast<SimTK::SystemZIndex (SimTK::SystemZIndex::*)(int) >(&SimTK::SystemZIndex::operator++));

  DEBUG_MSG("Adding wrapper for const SimTK::SystemZIndex & SimTK::SystemZIndex::operator--() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::SystemZIndex & SimTK::SystemZIndex::operator--()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("dec!", static_cast<const SimTK::SystemZIndex & (SimTK::SystemZIndex::*)() >(&SimTK::SystemZIndex::operator--));

  DEBUG_MSG("Adding wrapper for SimTK::SystemZIndex SimTK::SystemZIndex::operator--(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemZIndex SimTK::SystemZIndex::operator--(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("dec!", static_cast<SimTK::SystemZIndex (SimTK::SystemZIndex::*)(int) >(&SimTK::SystemZIndex::operator--));

  DEBUG_MSG("Adding wrapper for SimTK::SystemZIndex SimTK::SystemZIndex::next() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemZIndex SimTK::SystemZIndex::next()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("next", static_cast<SimTK::SystemZIndex (SimTK::SystemZIndex::*)()  const>(&SimTK::SystemZIndex::next));

  DEBUG_MSG("Adding wrapper for SimTK::SystemZIndex SimTK::SystemZIndex::prev() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemZIndex SimTK::SystemZIndex::prev()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("prev", static_cast<SimTK::SystemZIndex (SimTK::SystemZIndex::*)()  const>(&SimTK::SystemZIndex::prev));

  DEBUG_MSG("Adding wrapper for SimTK::SystemZIndex & SimTK::SystemZIndex::operator+=(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemZIndex & SimTK::SystemZIndex::operator+=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("add!", static_cast<SimTK::SystemZIndex & (SimTK::SystemZIndex::*)(int) >(&SimTK::SystemZIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemZIndex & SimTK::SystemZIndex::operator-=(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemZIndex & SimTK::SystemZIndex::operator-=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("sub!", static_cast<SimTK::SystemZIndex & (SimTK::SystemZIndex::*)(int) >(&SimTK::SystemZIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemZIndex & SimTK::SystemZIndex::operator+=(short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemZIndex & SimTK::SystemZIndex::operator+=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("add!", static_cast<SimTK::SystemZIndex & (SimTK::SystemZIndex::*)(short) >(&SimTK::SystemZIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemZIndex & SimTK::SystemZIndex::operator-=(short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemZIndex & SimTK::SystemZIndex::operator-=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("sub!", static_cast<SimTK::SystemZIndex & (SimTK::SystemZIndex::*)(short) >(&SimTK::SystemZIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemZIndex & SimTK::SystemZIndex::operator+=(long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemZIndex & SimTK::SystemZIndex::operator+=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("add!", static_cast<SimTK::SystemZIndex & (SimTK::SystemZIndex::*)(long) >(&SimTK::SystemZIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemZIndex & SimTK::SystemZIndex::operator-=(long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemZIndex & SimTK::SystemZIndex::operator-=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("sub!", static_cast<SimTK::SystemZIndex & (SimTK::SystemZIndex::*)(long) >(&SimTK::SystemZIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemZIndex & SimTK::SystemZIndex::operator+=(long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemZIndex & SimTK::SystemZIndex::operator+=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("add!", static_cast<SimTK::SystemZIndex & (SimTK::SystemZIndex::*)(long long) >(&SimTK::SystemZIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemZIndex & SimTK::SystemZIndex::operator-=(long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemZIndex & SimTK::SystemZIndex::operator-=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("sub!", static_cast<SimTK::SystemZIndex & (SimTK::SystemZIndex::*)(long long) >(&SimTK::SystemZIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemZIndex & SimTK::SystemZIndex::operator+=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemZIndex & SimTK::SystemZIndex::operator+=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("add!", static_cast<SimTK::SystemZIndex & (SimTK::SystemZIndex::*)(unsigned int) >(&SimTK::SystemZIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemZIndex & SimTK::SystemZIndex::operator-=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemZIndex & SimTK::SystemZIndex::operator-=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("sub!", static_cast<SimTK::SystemZIndex & (SimTK::SystemZIndex::*)(unsigned int) >(&SimTK::SystemZIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemZIndex & SimTK::SystemZIndex::operator+=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemZIndex & SimTK::SystemZIndex::operator+=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("add!", static_cast<SimTK::SystemZIndex & (SimTK::SystemZIndex::*)(unsigned short) >(&SimTK::SystemZIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemZIndex & SimTK::SystemZIndex::operator-=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemZIndex & SimTK::SystemZIndex::operator-=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("sub!", static_cast<SimTK::SystemZIndex & (SimTK::SystemZIndex::*)(unsigned short) >(&SimTK::SystemZIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemZIndex & SimTK::SystemZIndex::operator+=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemZIndex & SimTK::SystemZIndex::operator+=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("add!", static_cast<SimTK::SystemZIndex & (SimTK::SystemZIndex::*)(unsigned long) >(&SimTK::SystemZIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemZIndex & SimTK::SystemZIndex::operator-=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemZIndex & SimTK::SystemZIndex::operator-=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("sub!", static_cast<SimTK::SystemZIndex & (SimTK::SystemZIndex::*)(unsigned long) >(&SimTK::SystemZIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemZIndex & SimTK::SystemZIndex::operator+=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemZIndex & SimTK::SystemZIndex::operator+=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("add!", static_cast<SimTK::SystemZIndex & (SimTK::SystemZIndex::*)(unsigned long long) >(&SimTK::SystemZIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemZIndex & SimTK::SystemZIndex::operator-=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemZIndex & SimTK::SystemZIndex::operator-=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("sub!", static_cast<SimTK::SystemZIndex & (SimTK::SystemZIndex::*)(unsigned long long) >(&SimTK::SystemZIndex::operator-=));

  DEBUG_MSG("Adding wrapper for const SimTK::SystemZIndex & SimTK::SystemZIndex::Invalid() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::SystemZIndex & SimTK::SystemZIndex::Invalid()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("SimTK!SystemZIndex!Invalid", static_cast<const SimTK::SystemZIndex & (*)() >(&SimTK::SystemZIndex::Invalid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemZIndex::isValid(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemZIndex::isValid(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("SimTK!SystemZIndex!isValid", static_cast<bool (*)(int) >(&SimTK::SystemZIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemZIndex::isValid(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemZIndex::isValid(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("SimTK!SystemZIndex!isValid", static_cast<bool (*)(short) >(&SimTK::SystemZIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemZIndex::isValid(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemZIndex::isValid(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("SimTK!SystemZIndex!isValid", static_cast<bool (*)(long) >(&SimTK::SystemZIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemZIndex::isValid(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemZIndex::isValid(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("SimTK!SystemZIndex!isValid", static_cast<bool (*)(long long) >(&SimTK::SystemZIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemZIndex::isValid(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemZIndex::isValid(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("SimTK!SystemZIndex!isValid", static_cast<bool (*)(unsigned int) >(&SimTK::SystemZIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemZIndex::isValid(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemZIndex::isValid(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("SimTK!SystemZIndex!isValid", static_cast<bool (*)(unsigned short) >(&SimTK::SystemZIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemZIndex::isValid(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemZIndex::isValid(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("SimTK!SystemZIndex!isValid", static_cast<bool (*)(unsigned long) >(&SimTK::SystemZIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemZIndex::isValid(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemZIndex::isValid(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("SimTK!SystemZIndex!isValid", static_cast<bool (*)(unsigned long long) >(&SimTK::SystemZIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemZIndex::isValidExtended(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemZIndex::isValidExtended(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("SimTK!SystemZIndex!isValidExtended", static_cast<bool (*)(int) >(&SimTK::SystemZIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemZIndex::isValidExtended(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemZIndex::isValidExtended(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("SimTK!SystemZIndex!isValidExtended", static_cast<bool (*)(short) >(&SimTK::SystemZIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemZIndex::isValidExtended(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemZIndex::isValidExtended(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("SimTK!SystemZIndex!isValidExtended", static_cast<bool (*)(long) >(&SimTK::SystemZIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemZIndex::isValidExtended(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemZIndex::isValidExtended(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("SimTK!SystemZIndex!isValidExtended", static_cast<bool (*)(long long) >(&SimTK::SystemZIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for SimTK::SystemZIndex::size_type SimTK::SystemZIndex::max_size() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemZIndex::size_type SimTK::SystemZIndex::max_size()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  t21.method("SimTK!SystemZIndex!max_size", static_cast<SimTK::SystemZIndex::size_type (*)() >(&SimTK::SystemZIndex::max_size));

  /* End of SimTK::SystemZIndex class method wrappers
   **********************************************************************/


  /**********************************************************************/
  /* Wrappers for the methods of class SimTK::ZIndex
   */


  DEBUG_MSG("Adding wrapper for void SimTK::ZIndex::ZIndex(int) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:32
  t22.constructor<int>();


  DEBUG_MSG("Adding wrapper for void SimTK::ZIndex::ZIndex(long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:32
  t22.constructor<long>();


  DEBUG_MSG("Adding wrapper for void SimTK::ZIndex::ZIndex(long long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:32
  t22.constructor<long long>();


  DEBUG_MSG("Adding wrapper for void SimTK::ZIndex::ZIndex(unsigned int) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:32
  t22.constructor<unsigned int>();


  DEBUG_MSG("Adding wrapper for void SimTK::ZIndex::ZIndex(unsigned long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:32
  t22.constructor<unsigned long>();


  DEBUG_MSG("Adding wrapper for void SimTK::ZIndex::ZIndex(unsigned long long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:32
  t22.constructor<unsigned long long>();

  DEBUG_MSG("Adding wrapper for bool SimTK::ZIndex::isValid() (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::ZIndex::isValid()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("isValid", static_cast<bool (SimTK::ZIndex::*)()  const>(&SimTK::ZIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::ZIndex::isValidExtended() (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::ZIndex::isValidExtended()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("isValidExtended", static_cast<bool (SimTK::ZIndex::*)()  const>(&SimTK::ZIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for void SimTK::ZIndex::invalidate() (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::ZIndex::invalidate()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("invalidate", static_cast<void (SimTK::ZIndex::*)() >(&SimTK::ZIndex::invalidate));

  DEBUG_MSG("Adding wrapper for void SimTK::ZIndex::clear() (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::ZIndex::clear()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("clear", static_cast<void (SimTK::ZIndex::*)() >(&SimTK::ZIndex::clear));
  types.set_override_module(jl_base_module);

  DEBUG_MSG("Adding wrapper for bool SimTK::ZIndex::operator==(const SimTK::ZIndex &) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::ZIndex::operator==(const SimTK::ZIndex &)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("==", static_cast<bool (SimTK::ZIndex::*)(const SimTK::ZIndex &)  const>(&SimTK::ZIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::ZIndex::operator==(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::ZIndex::operator==(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("==", static_cast<bool (SimTK::ZIndex::*)(int)  const>(&SimTK::ZIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::ZIndex::operator==(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::ZIndex::operator==(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("==", static_cast<bool (SimTK::ZIndex::*)(short)  const>(&SimTK::ZIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::ZIndex::operator==(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::ZIndex::operator==(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("==", static_cast<bool (SimTK::ZIndex::*)(long)  const>(&SimTK::ZIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::ZIndex::operator==(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::ZIndex::operator==(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("==", static_cast<bool (SimTK::ZIndex::*)(long long)  const>(&SimTK::ZIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::ZIndex::operator==(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::ZIndex::operator==(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("==", static_cast<bool (SimTK::ZIndex::*)(unsigned int)  const>(&SimTK::ZIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::ZIndex::operator==(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::ZIndex::operator==(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("==", static_cast<bool (SimTK::ZIndex::*)(unsigned short)  const>(&SimTK::ZIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::ZIndex::operator==(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::ZIndex::operator==(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("==", static_cast<bool (SimTK::ZIndex::*)(unsigned long)  const>(&SimTK::ZIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::ZIndex::operator==(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::ZIndex::operator==(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("==", static_cast<bool (SimTK::ZIndex::*)(unsigned long long)  const>(&SimTK::ZIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::ZIndex::operator!=(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::ZIndex::operator!=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("!=", static_cast<bool (SimTK::ZIndex::*)(int)  const>(&SimTK::ZIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::ZIndex::operator!=(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::ZIndex::operator!=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("!=", static_cast<bool (SimTK::ZIndex::*)(short)  const>(&SimTK::ZIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::ZIndex::operator!=(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::ZIndex::operator!=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("!=", static_cast<bool (SimTK::ZIndex::*)(long)  const>(&SimTK::ZIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::ZIndex::operator!=(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::ZIndex::operator!=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("!=", static_cast<bool (SimTK::ZIndex::*)(long long)  const>(&SimTK::ZIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::ZIndex::operator!=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::ZIndex::operator!=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("!=", static_cast<bool (SimTK::ZIndex::*)(unsigned int)  const>(&SimTK::ZIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::ZIndex::operator!=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::ZIndex::operator!=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("!=", static_cast<bool (SimTK::ZIndex::*)(unsigned long)  const>(&SimTK::ZIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::ZIndex::operator!=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::ZIndex::operator!=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("!=", static_cast<bool (SimTK::ZIndex::*)(unsigned long long)  const>(&SimTK::ZIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::ZIndex::operator<(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::ZIndex::operator<(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("<", static_cast<bool (SimTK::ZIndex::*)(int)  const>(&SimTK::ZIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::ZIndex::operator<(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::ZIndex::operator<(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("<", static_cast<bool (SimTK::ZIndex::*)(short)  const>(&SimTK::ZIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::ZIndex::operator<(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::ZIndex::operator<(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("<", static_cast<bool (SimTK::ZIndex::*)(long)  const>(&SimTK::ZIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::ZIndex::operator<(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::ZIndex::operator<(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("<", static_cast<bool (SimTK::ZIndex::*)(long long)  const>(&SimTK::ZIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::ZIndex::operator<(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::ZIndex::operator<(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("<", static_cast<bool (SimTK::ZIndex::*)(unsigned int)  const>(&SimTK::ZIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::ZIndex::operator<(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::ZIndex::operator<(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("<", static_cast<bool (SimTK::ZIndex::*)(unsigned short)  const>(&SimTK::ZIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::ZIndex::operator<(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::ZIndex::operator<(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("<", static_cast<bool (SimTK::ZIndex::*)(unsigned long)  const>(&SimTK::ZIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::ZIndex::operator<(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::ZIndex::operator<(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("<", static_cast<bool (SimTK::ZIndex::*)(unsigned long long)  const>(&SimTK::ZIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::ZIndex::operator>=(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::ZIndex::operator>=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method(">=", static_cast<bool (SimTK::ZIndex::*)(int)  const>(&SimTK::ZIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::ZIndex::operator>=(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::ZIndex::operator>=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method(">=", static_cast<bool (SimTK::ZIndex::*)(short)  const>(&SimTK::ZIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::ZIndex::operator>=(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::ZIndex::operator>=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method(">=", static_cast<bool (SimTK::ZIndex::*)(long)  const>(&SimTK::ZIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::ZIndex::operator>=(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::ZIndex::operator>=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method(">=", static_cast<bool (SimTK::ZIndex::*)(long long)  const>(&SimTK::ZIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::ZIndex::operator>=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::ZIndex::operator>=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method(">=", static_cast<bool (SimTK::ZIndex::*)(unsigned int)  const>(&SimTK::ZIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::ZIndex::operator>=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::ZIndex::operator>=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method(">=", static_cast<bool (SimTK::ZIndex::*)(unsigned short)  const>(&SimTK::ZIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::ZIndex::operator>=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::ZIndex::operator>=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method(">=", static_cast<bool (SimTK::ZIndex::*)(unsigned long)  const>(&SimTK::ZIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::ZIndex::operator>=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::ZIndex::operator>=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method(">=", static_cast<bool (SimTK::ZIndex::*)(unsigned long long)  const>(&SimTK::ZIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::ZIndex::operator>(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::ZIndex::operator>(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method(">", static_cast<bool (SimTK::ZIndex::*)(int)  const>(&SimTK::ZIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::ZIndex::operator>(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::ZIndex::operator>(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method(">", static_cast<bool (SimTK::ZIndex::*)(short)  const>(&SimTK::ZIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::ZIndex::operator>(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::ZIndex::operator>(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method(">", static_cast<bool (SimTK::ZIndex::*)(long)  const>(&SimTK::ZIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::ZIndex::operator>(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::ZIndex::operator>(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method(">", static_cast<bool (SimTK::ZIndex::*)(long long)  const>(&SimTK::ZIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::ZIndex::operator>(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::ZIndex::operator>(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method(">", static_cast<bool (SimTK::ZIndex::*)(unsigned int)  const>(&SimTK::ZIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::ZIndex::operator>(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::ZIndex::operator>(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method(">", static_cast<bool (SimTK::ZIndex::*)(unsigned short)  const>(&SimTK::ZIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::ZIndex::operator>(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::ZIndex::operator>(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method(">", static_cast<bool (SimTK::ZIndex::*)(unsigned long)  const>(&SimTK::ZIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::ZIndex::operator>(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::ZIndex::operator>(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method(">", static_cast<bool (SimTK::ZIndex::*)(unsigned long long)  const>(&SimTK::ZIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::ZIndex::operator<=(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::ZIndex::operator<=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("<=", static_cast<bool (SimTK::ZIndex::*)(int)  const>(&SimTK::ZIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::ZIndex::operator<=(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::ZIndex::operator<=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("<=", static_cast<bool (SimTK::ZIndex::*)(short)  const>(&SimTK::ZIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::ZIndex::operator<=(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::ZIndex::operator<=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("<=", static_cast<bool (SimTK::ZIndex::*)(long)  const>(&SimTK::ZIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::ZIndex::operator<=(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::ZIndex::operator<=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("<=", static_cast<bool (SimTK::ZIndex::*)(long long)  const>(&SimTK::ZIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::ZIndex::operator<=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::ZIndex::operator<=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("<=", static_cast<bool (SimTK::ZIndex::*)(unsigned int)  const>(&SimTK::ZIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::ZIndex::operator<=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::ZIndex::operator<=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("<=", static_cast<bool (SimTK::ZIndex::*)(unsigned short)  const>(&SimTK::ZIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::ZIndex::operator<=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::ZIndex::operator<=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("<=", static_cast<bool (SimTK::ZIndex::*)(unsigned long)  const>(&SimTK::ZIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::ZIndex::operator<=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::ZIndex::operator<=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("<=", static_cast<bool (SimTK::ZIndex::*)(unsigned long long)  const>(&SimTK::ZIndex::operator<=));
  types.unset_override_module();

  DEBUG_MSG("Adding wrapper for const SimTK::ZIndex & SimTK::ZIndex::operator++() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::ZIndex & SimTK::ZIndex::operator++()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("inc!", static_cast<const SimTK::ZIndex & (SimTK::ZIndex::*)() >(&SimTK::ZIndex::operator++));

  DEBUG_MSG("Adding wrapper for SimTK::ZIndex SimTK::ZIndex::operator++(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::ZIndex SimTK::ZIndex::operator++(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("inc!", static_cast<SimTK::ZIndex (SimTK::ZIndex::*)(int) >(&SimTK::ZIndex::operator++));

  DEBUG_MSG("Adding wrapper for const SimTK::ZIndex & SimTK::ZIndex::operator--() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::ZIndex & SimTK::ZIndex::operator--()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("dec!", static_cast<const SimTK::ZIndex & (SimTK::ZIndex::*)() >(&SimTK::ZIndex::operator--));

  DEBUG_MSG("Adding wrapper for SimTK::ZIndex SimTK::ZIndex::operator--(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::ZIndex SimTK::ZIndex::operator--(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("dec!", static_cast<SimTK::ZIndex (SimTK::ZIndex::*)(int) >(&SimTK::ZIndex::operator--));

  DEBUG_MSG("Adding wrapper for SimTK::ZIndex SimTK::ZIndex::next() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::ZIndex SimTK::ZIndex::next()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("next", static_cast<SimTK::ZIndex (SimTK::ZIndex::*)()  const>(&SimTK::ZIndex::next));

  DEBUG_MSG("Adding wrapper for SimTK::ZIndex SimTK::ZIndex::prev() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::ZIndex SimTK::ZIndex::prev()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("prev", static_cast<SimTK::ZIndex (SimTK::ZIndex::*)()  const>(&SimTK::ZIndex::prev));

  DEBUG_MSG("Adding wrapper for SimTK::ZIndex & SimTK::ZIndex::operator+=(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::ZIndex & SimTK::ZIndex::operator+=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("add!", static_cast<SimTK::ZIndex & (SimTK::ZIndex::*)(int) >(&SimTK::ZIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::ZIndex & SimTK::ZIndex::operator-=(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::ZIndex & SimTK::ZIndex::operator-=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("sub!", static_cast<SimTK::ZIndex & (SimTK::ZIndex::*)(int) >(&SimTK::ZIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::ZIndex & SimTK::ZIndex::operator+=(short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::ZIndex & SimTK::ZIndex::operator+=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("add!", static_cast<SimTK::ZIndex & (SimTK::ZIndex::*)(short) >(&SimTK::ZIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::ZIndex & SimTK::ZIndex::operator-=(short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::ZIndex & SimTK::ZIndex::operator-=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("sub!", static_cast<SimTK::ZIndex & (SimTK::ZIndex::*)(short) >(&SimTK::ZIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::ZIndex & SimTK::ZIndex::operator+=(long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::ZIndex & SimTK::ZIndex::operator+=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("add!", static_cast<SimTK::ZIndex & (SimTK::ZIndex::*)(long) >(&SimTK::ZIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::ZIndex & SimTK::ZIndex::operator-=(long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::ZIndex & SimTK::ZIndex::operator-=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("sub!", static_cast<SimTK::ZIndex & (SimTK::ZIndex::*)(long) >(&SimTK::ZIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::ZIndex & SimTK::ZIndex::operator+=(long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::ZIndex & SimTK::ZIndex::operator+=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("add!", static_cast<SimTK::ZIndex & (SimTK::ZIndex::*)(long long) >(&SimTK::ZIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::ZIndex & SimTK::ZIndex::operator-=(long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::ZIndex & SimTK::ZIndex::operator-=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("sub!", static_cast<SimTK::ZIndex & (SimTK::ZIndex::*)(long long) >(&SimTK::ZIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::ZIndex & SimTK::ZIndex::operator+=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::ZIndex & SimTK::ZIndex::operator+=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("add!", static_cast<SimTK::ZIndex & (SimTK::ZIndex::*)(unsigned int) >(&SimTK::ZIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::ZIndex & SimTK::ZIndex::operator-=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::ZIndex & SimTK::ZIndex::operator-=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("sub!", static_cast<SimTK::ZIndex & (SimTK::ZIndex::*)(unsigned int) >(&SimTK::ZIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::ZIndex & SimTK::ZIndex::operator+=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::ZIndex & SimTK::ZIndex::operator+=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("add!", static_cast<SimTK::ZIndex & (SimTK::ZIndex::*)(unsigned short) >(&SimTK::ZIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::ZIndex & SimTK::ZIndex::operator-=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::ZIndex & SimTK::ZIndex::operator-=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("sub!", static_cast<SimTK::ZIndex & (SimTK::ZIndex::*)(unsigned short) >(&SimTK::ZIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::ZIndex & SimTK::ZIndex::operator+=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::ZIndex & SimTK::ZIndex::operator+=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("add!", static_cast<SimTK::ZIndex & (SimTK::ZIndex::*)(unsigned long) >(&SimTK::ZIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::ZIndex & SimTK::ZIndex::operator-=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::ZIndex & SimTK::ZIndex::operator-=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("sub!", static_cast<SimTK::ZIndex & (SimTK::ZIndex::*)(unsigned long) >(&SimTK::ZIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::ZIndex & SimTK::ZIndex::operator+=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::ZIndex & SimTK::ZIndex::operator+=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("add!", static_cast<SimTK::ZIndex & (SimTK::ZIndex::*)(unsigned long long) >(&SimTK::ZIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::ZIndex & SimTK::ZIndex::operator-=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::ZIndex & SimTK::ZIndex::operator-=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("sub!", static_cast<SimTK::ZIndex & (SimTK::ZIndex::*)(unsigned long long) >(&SimTK::ZIndex::operator-=));

  DEBUG_MSG("Adding wrapper for const SimTK::ZIndex & SimTK::ZIndex::Invalid() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::ZIndex & SimTK::ZIndex::Invalid()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("SimTK!ZIndex!Invalid", static_cast<const SimTK::ZIndex & (*)() >(&SimTK::ZIndex::Invalid));

  DEBUG_MSG("Adding wrapper for bool SimTK::ZIndex::isValid(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::ZIndex::isValid(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("SimTK!ZIndex!isValid", static_cast<bool (*)(int) >(&SimTK::ZIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::ZIndex::isValid(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::ZIndex::isValid(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("SimTK!ZIndex!isValid", static_cast<bool (*)(short) >(&SimTK::ZIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::ZIndex::isValid(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::ZIndex::isValid(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("SimTK!ZIndex!isValid", static_cast<bool (*)(long) >(&SimTK::ZIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::ZIndex::isValid(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::ZIndex::isValid(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("SimTK!ZIndex!isValid", static_cast<bool (*)(long long) >(&SimTK::ZIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::ZIndex::isValid(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::ZIndex::isValid(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("SimTK!ZIndex!isValid", static_cast<bool (*)(unsigned int) >(&SimTK::ZIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::ZIndex::isValid(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::ZIndex::isValid(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("SimTK!ZIndex!isValid", static_cast<bool (*)(unsigned short) >(&SimTK::ZIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::ZIndex::isValid(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::ZIndex::isValid(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("SimTK!ZIndex!isValid", static_cast<bool (*)(unsigned long) >(&SimTK::ZIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::ZIndex::isValid(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::ZIndex::isValid(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("SimTK!ZIndex!isValid", static_cast<bool (*)(unsigned long long) >(&SimTK::ZIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::ZIndex::isValidExtended(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::ZIndex::isValidExtended(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("SimTK!ZIndex!isValidExtended", static_cast<bool (*)(int) >(&SimTK::ZIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for bool SimTK::ZIndex::isValidExtended(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::ZIndex::isValidExtended(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("SimTK!ZIndex!isValidExtended", static_cast<bool (*)(short) >(&SimTK::ZIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for bool SimTK::ZIndex::isValidExtended(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::ZIndex::isValidExtended(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("SimTK!ZIndex!isValidExtended", static_cast<bool (*)(long) >(&SimTK::ZIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for bool SimTK::ZIndex::isValidExtended(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::ZIndex::isValidExtended(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("SimTK!ZIndex!isValidExtended", static_cast<bool (*)(long long) >(&SimTK::ZIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for SimTK::ZIndex::size_type SimTK::ZIndex::max_size() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::ZIndex::size_type SimTK::ZIndex::max_size()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  t22.method("SimTK!ZIndex!max_size", static_cast<SimTK::ZIndex::size_type (*)() >(&SimTK::ZIndex::max_size));

  /* End of SimTK::ZIndex class method wrappers
   **********************************************************************/


  /**********************************************************************/
  /* Wrappers for the methods of class SimTK::DiscreteVariableIndex
   */


  DEBUG_MSG("Adding wrapper for void SimTK::DiscreteVariableIndex::DiscreteVariableIndex(int) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:32
  t23.constructor<int>();


  DEBUG_MSG("Adding wrapper for void SimTK::DiscreteVariableIndex::DiscreteVariableIndex(long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:32
  t23.constructor<long>();


  DEBUG_MSG("Adding wrapper for void SimTK::DiscreteVariableIndex::DiscreteVariableIndex(long long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:32
  t23.constructor<long long>();


  DEBUG_MSG("Adding wrapper for void SimTK::DiscreteVariableIndex::DiscreteVariableIndex(unsigned int) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:32
  t23.constructor<unsigned int>();


  DEBUG_MSG("Adding wrapper for void SimTK::DiscreteVariableIndex::DiscreteVariableIndex(unsigned long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:32
  t23.constructor<unsigned long>();


  DEBUG_MSG("Adding wrapper for void SimTK::DiscreteVariableIndex::DiscreteVariableIndex(unsigned long long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:32
  t23.constructor<unsigned long long>();

  DEBUG_MSG("Adding wrapper for bool SimTK::DiscreteVariableIndex::isValid() (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::DiscreteVariableIndex::isValid()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("isValid", static_cast<bool (SimTK::DiscreteVariableIndex::*)()  const>(&SimTK::DiscreteVariableIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::DiscreteVariableIndex::isValidExtended() (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::DiscreteVariableIndex::isValidExtended()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("isValidExtended", static_cast<bool (SimTK::DiscreteVariableIndex::*)()  const>(&SimTK::DiscreteVariableIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for void SimTK::DiscreteVariableIndex::invalidate() (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::DiscreteVariableIndex::invalidate()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("invalidate", static_cast<void (SimTK::DiscreteVariableIndex::*)() >(&SimTK::DiscreteVariableIndex::invalidate));

  DEBUG_MSG("Adding wrapper for void SimTK::DiscreteVariableIndex::clear() (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::DiscreteVariableIndex::clear()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("clear", static_cast<void (SimTK::DiscreteVariableIndex::*)() >(&SimTK::DiscreteVariableIndex::clear));
  types.set_override_module(jl_base_module);

  DEBUG_MSG("Adding wrapper for bool SimTK::DiscreteVariableIndex::operator==(const SimTK::DiscreteVariableIndex &) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::DiscreteVariableIndex::operator==(const SimTK::DiscreteVariableIndex &)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("==", static_cast<bool (SimTK::DiscreteVariableIndex::*)(const SimTK::DiscreteVariableIndex &)  const>(&SimTK::DiscreteVariableIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::DiscreteVariableIndex::operator==(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::DiscreteVariableIndex::operator==(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("==", static_cast<bool (SimTK::DiscreteVariableIndex::*)(int)  const>(&SimTK::DiscreteVariableIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::DiscreteVariableIndex::operator==(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::DiscreteVariableIndex::operator==(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("==", static_cast<bool (SimTK::DiscreteVariableIndex::*)(short)  const>(&SimTK::DiscreteVariableIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::DiscreteVariableIndex::operator==(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::DiscreteVariableIndex::operator==(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("==", static_cast<bool (SimTK::DiscreteVariableIndex::*)(long)  const>(&SimTK::DiscreteVariableIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::DiscreteVariableIndex::operator==(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::DiscreteVariableIndex::operator==(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("==", static_cast<bool (SimTK::DiscreteVariableIndex::*)(long long)  const>(&SimTK::DiscreteVariableIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::DiscreteVariableIndex::operator==(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::DiscreteVariableIndex::operator==(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("==", static_cast<bool (SimTK::DiscreteVariableIndex::*)(unsigned int)  const>(&SimTK::DiscreteVariableIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::DiscreteVariableIndex::operator==(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::DiscreteVariableIndex::operator==(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("==", static_cast<bool (SimTK::DiscreteVariableIndex::*)(unsigned short)  const>(&SimTK::DiscreteVariableIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::DiscreteVariableIndex::operator==(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::DiscreteVariableIndex::operator==(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("==", static_cast<bool (SimTK::DiscreteVariableIndex::*)(unsigned long)  const>(&SimTK::DiscreteVariableIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::DiscreteVariableIndex::operator==(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::DiscreteVariableIndex::operator==(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("==", static_cast<bool (SimTK::DiscreteVariableIndex::*)(unsigned long long)  const>(&SimTK::DiscreteVariableIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::DiscreteVariableIndex::operator!=(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::DiscreteVariableIndex::operator!=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("!=", static_cast<bool (SimTK::DiscreteVariableIndex::*)(int)  const>(&SimTK::DiscreteVariableIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::DiscreteVariableIndex::operator!=(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::DiscreteVariableIndex::operator!=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("!=", static_cast<bool (SimTK::DiscreteVariableIndex::*)(short)  const>(&SimTK::DiscreteVariableIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::DiscreteVariableIndex::operator!=(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::DiscreteVariableIndex::operator!=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("!=", static_cast<bool (SimTK::DiscreteVariableIndex::*)(long)  const>(&SimTK::DiscreteVariableIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::DiscreteVariableIndex::operator!=(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::DiscreteVariableIndex::operator!=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("!=", static_cast<bool (SimTK::DiscreteVariableIndex::*)(long long)  const>(&SimTK::DiscreteVariableIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::DiscreteVariableIndex::operator!=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::DiscreteVariableIndex::operator!=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("!=", static_cast<bool (SimTK::DiscreteVariableIndex::*)(unsigned int)  const>(&SimTK::DiscreteVariableIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::DiscreteVariableIndex::operator!=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::DiscreteVariableIndex::operator!=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("!=", static_cast<bool (SimTK::DiscreteVariableIndex::*)(unsigned long)  const>(&SimTK::DiscreteVariableIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::DiscreteVariableIndex::operator!=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::DiscreteVariableIndex::operator!=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("!=", static_cast<bool (SimTK::DiscreteVariableIndex::*)(unsigned long long)  const>(&SimTK::DiscreteVariableIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::DiscreteVariableIndex::operator<(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::DiscreteVariableIndex::operator<(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("<", static_cast<bool (SimTK::DiscreteVariableIndex::*)(int)  const>(&SimTK::DiscreteVariableIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::DiscreteVariableIndex::operator<(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::DiscreteVariableIndex::operator<(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("<", static_cast<bool (SimTK::DiscreteVariableIndex::*)(short)  const>(&SimTK::DiscreteVariableIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::DiscreteVariableIndex::operator<(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::DiscreteVariableIndex::operator<(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("<", static_cast<bool (SimTK::DiscreteVariableIndex::*)(long)  const>(&SimTK::DiscreteVariableIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::DiscreteVariableIndex::operator<(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::DiscreteVariableIndex::operator<(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("<", static_cast<bool (SimTK::DiscreteVariableIndex::*)(long long)  const>(&SimTK::DiscreteVariableIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::DiscreteVariableIndex::operator<(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::DiscreteVariableIndex::operator<(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("<", static_cast<bool (SimTK::DiscreteVariableIndex::*)(unsigned int)  const>(&SimTK::DiscreteVariableIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::DiscreteVariableIndex::operator<(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::DiscreteVariableIndex::operator<(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("<", static_cast<bool (SimTK::DiscreteVariableIndex::*)(unsigned short)  const>(&SimTK::DiscreteVariableIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::DiscreteVariableIndex::operator<(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::DiscreteVariableIndex::operator<(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("<", static_cast<bool (SimTK::DiscreteVariableIndex::*)(unsigned long)  const>(&SimTK::DiscreteVariableIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::DiscreteVariableIndex::operator<(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::DiscreteVariableIndex::operator<(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("<", static_cast<bool (SimTK::DiscreteVariableIndex::*)(unsigned long long)  const>(&SimTK::DiscreteVariableIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::DiscreteVariableIndex::operator>=(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::DiscreteVariableIndex::operator>=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method(">=", static_cast<bool (SimTK::DiscreteVariableIndex::*)(int)  const>(&SimTK::DiscreteVariableIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::DiscreteVariableIndex::operator>=(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::DiscreteVariableIndex::operator>=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method(">=", static_cast<bool (SimTK::DiscreteVariableIndex::*)(short)  const>(&SimTK::DiscreteVariableIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::DiscreteVariableIndex::operator>=(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::DiscreteVariableIndex::operator>=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method(">=", static_cast<bool (SimTK::DiscreteVariableIndex::*)(long)  const>(&SimTK::DiscreteVariableIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::DiscreteVariableIndex::operator>=(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::DiscreteVariableIndex::operator>=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method(">=", static_cast<bool (SimTK::DiscreteVariableIndex::*)(long long)  const>(&SimTK::DiscreteVariableIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::DiscreteVariableIndex::operator>=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::DiscreteVariableIndex::operator>=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method(">=", static_cast<bool (SimTK::DiscreteVariableIndex::*)(unsigned int)  const>(&SimTK::DiscreteVariableIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::DiscreteVariableIndex::operator>=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::DiscreteVariableIndex::operator>=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method(">=", static_cast<bool (SimTK::DiscreteVariableIndex::*)(unsigned short)  const>(&SimTK::DiscreteVariableIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::DiscreteVariableIndex::operator>=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::DiscreteVariableIndex::operator>=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method(">=", static_cast<bool (SimTK::DiscreteVariableIndex::*)(unsigned long)  const>(&SimTK::DiscreteVariableIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::DiscreteVariableIndex::operator>=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::DiscreteVariableIndex::operator>=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method(">=", static_cast<bool (SimTK::DiscreteVariableIndex::*)(unsigned long long)  const>(&SimTK::DiscreteVariableIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::DiscreteVariableIndex::operator>(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::DiscreteVariableIndex::operator>(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method(">", static_cast<bool (SimTK::DiscreteVariableIndex::*)(int)  const>(&SimTK::DiscreteVariableIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::DiscreteVariableIndex::operator>(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::DiscreteVariableIndex::operator>(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method(">", static_cast<bool (SimTK::DiscreteVariableIndex::*)(short)  const>(&SimTK::DiscreteVariableIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::DiscreteVariableIndex::operator>(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::DiscreteVariableIndex::operator>(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method(">", static_cast<bool (SimTK::DiscreteVariableIndex::*)(long)  const>(&SimTK::DiscreteVariableIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::DiscreteVariableIndex::operator>(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::DiscreteVariableIndex::operator>(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method(">", static_cast<bool (SimTK::DiscreteVariableIndex::*)(long long)  const>(&SimTK::DiscreteVariableIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::DiscreteVariableIndex::operator>(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::DiscreteVariableIndex::operator>(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method(">", static_cast<bool (SimTK::DiscreteVariableIndex::*)(unsigned int)  const>(&SimTK::DiscreteVariableIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::DiscreteVariableIndex::operator>(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::DiscreteVariableIndex::operator>(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method(">", static_cast<bool (SimTK::DiscreteVariableIndex::*)(unsigned short)  const>(&SimTK::DiscreteVariableIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::DiscreteVariableIndex::operator>(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::DiscreteVariableIndex::operator>(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method(">", static_cast<bool (SimTK::DiscreteVariableIndex::*)(unsigned long)  const>(&SimTK::DiscreteVariableIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::DiscreteVariableIndex::operator>(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::DiscreteVariableIndex::operator>(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method(">", static_cast<bool (SimTK::DiscreteVariableIndex::*)(unsigned long long)  const>(&SimTK::DiscreteVariableIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::DiscreteVariableIndex::operator<=(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::DiscreteVariableIndex::operator<=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("<=", static_cast<bool (SimTK::DiscreteVariableIndex::*)(int)  const>(&SimTK::DiscreteVariableIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::DiscreteVariableIndex::operator<=(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::DiscreteVariableIndex::operator<=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("<=", static_cast<bool (SimTK::DiscreteVariableIndex::*)(short)  const>(&SimTK::DiscreteVariableIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::DiscreteVariableIndex::operator<=(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::DiscreteVariableIndex::operator<=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("<=", static_cast<bool (SimTK::DiscreteVariableIndex::*)(long)  const>(&SimTK::DiscreteVariableIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::DiscreteVariableIndex::operator<=(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::DiscreteVariableIndex::operator<=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("<=", static_cast<bool (SimTK::DiscreteVariableIndex::*)(long long)  const>(&SimTK::DiscreteVariableIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::DiscreteVariableIndex::operator<=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::DiscreteVariableIndex::operator<=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("<=", static_cast<bool (SimTK::DiscreteVariableIndex::*)(unsigned int)  const>(&SimTK::DiscreteVariableIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::DiscreteVariableIndex::operator<=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::DiscreteVariableIndex::operator<=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("<=", static_cast<bool (SimTK::DiscreteVariableIndex::*)(unsigned short)  const>(&SimTK::DiscreteVariableIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::DiscreteVariableIndex::operator<=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::DiscreteVariableIndex::operator<=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("<=", static_cast<bool (SimTK::DiscreteVariableIndex::*)(unsigned long)  const>(&SimTK::DiscreteVariableIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::DiscreteVariableIndex::operator<=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::DiscreteVariableIndex::operator<=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("<=", static_cast<bool (SimTK::DiscreteVariableIndex::*)(unsigned long long)  const>(&SimTK::DiscreteVariableIndex::operator<=));
  types.unset_override_module();

  DEBUG_MSG("Adding wrapper for const SimTK::DiscreteVariableIndex & SimTK::DiscreteVariableIndex::operator++() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::DiscreteVariableIndex & SimTK::DiscreteVariableIndex::operator++()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("inc!", static_cast<const SimTK::DiscreteVariableIndex & (SimTK::DiscreteVariableIndex::*)() >(&SimTK::DiscreteVariableIndex::operator++));

  DEBUG_MSG("Adding wrapper for SimTK::DiscreteVariableIndex SimTK::DiscreteVariableIndex::operator++(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::DiscreteVariableIndex SimTK::DiscreteVariableIndex::operator++(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("inc!", static_cast<SimTK::DiscreteVariableIndex (SimTK::DiscreteVariableIndex::*)(int) >(&SimTK::DiscreteVariableIndex::operator++));

  DEBUG_MSG("Adding wrapper for const SimTK::DiscreteVariableIndex & SimTK::DiscreteVariableIndex::operator--() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::DiscreteVariableIndex & SimTK::DiscreteVariableIndex::operator--()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("dec!", static_cast<const SimTK::DiscreteVariableIndex & (SimTK::DiscreteVariableIndex::*)() >(&SimTK::DiscreteVariableIndex::operator--));

  DEBUG_MSG("Adding wrapper for SimTK::DiscreteVariableIndex SimTK::DiscreteVariableIndex::operator--(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::DiscreteVariableIndex SimTK::DiscreteVariableIndex::operator--(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("dec!", static_cast<SimTK::DiscreteVariableIndex (SimTK::DiscreteVariableIndex::*)(int) >(&SimTK::DiscreteVariableIndex::operator--));

  DEBUG_MSG("Adding wrapper for SimTK::DiscreteVariableIndex SimTK::DiscreteVariableIndex::next() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::DiscreteVariableIndex SimTK::DiscreteVariableIndex::next()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("next", static_cast<SimTK::DiscreteVariableIndex (SimTK::DiscreteVariableIndex::*)()  const>(&SimTK::DiscreteVariableIndex::next));

  DEBUG_MSG("Adding wrapper for SimTK::DiscreteVariableIndex SimTK::DiscreteVariableIndex::prev() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::DiscreteVariableIndex SimTK::DiscreteVariableIndex::prev()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("prev", static_cast<SimTK::DiscreteVariableIndex (SimTK::DiscreteVariableIndex::*)()  const>(&SimTK::DiscreteVariableIndex::prev));

  DEBUG_MSG("Adding wrapper for SimTK::DiscreteVariableIndex & SimTK::DiscreteVariableIndex::operator+=(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::DiscreteVariableIndex & SimTK::DiscreteVariableIndex::operator+=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("add!", static_cast<SimTK::DiscreteVariableIndex & (SimTK::DiscreteVariableIndex::*)(int) >(&SimTK::DiscreteVariableIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::DiscreteVariableIndex & SimTK::DiscreteVariableIndex::operator-=(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::DiscreteVariableIndex & SimTK::DiscreteVariableIndex::operator-=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("sub!", static_cast<SimTK::DiscreteVariableIndex & (SimTK::DiscreteVariableIndex::*)(int) >(&SimTK::DiscreteVariableIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::DiscreteVariableIndex & SimTK::DiscreteVariableIndex::operator+=(short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::DiscreteVariableIndex & SimTK::DiscreteVariableIndex::operator+=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("add!", static_cast<SimTK::DiscreteVariableIndex & (SimTK::DiscreteVariableIndex::*)(short) >(&SimTK::DiscreteVariableIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::DiscreteVariableIndex & SimTK::DiscreteVariableIndex::operator-=(short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::DiscreteVariableIndex & SimTK::DiscreteVariableIndex::operator-=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("sub!", static_cast<SimTK::DiscreteVariableIndex & (SimTK::DiscreteVariableIndex::*)(short) >(&SimTK::DiscreteVariableIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::DiscreteVariableIndex & SimTK::DiscreteVariableIndex::operator+=(long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::DiscreteVariableIndex & SimTK::DiscreteVariableIndex::operator+=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("add!", static_cast<SimTK::DiscreteVariableIndex & (SimTK::DiscreteVariableIndex::*)(long) >(&SimTK::DiscreteVariableIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::DiscreteVariableIndex & SimTK::DiscreteVariableIndex::operator-=(long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::DiscreteVariableIndex & SimTK::DiscreteVariableIndex::operator-=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("sub!", static_cast<SimTK::DiscreteVariableIndex & (SimTK::DiscreteVariableIndex::*)(long) >(&SimTK::DiscreteVariableIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::DiscreteVariableIndex & SimTK::DiscreteVariableIndex::operator+=(long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::DiscreteVariableIndex & SimTK::DiscreteVariableIndex::operator+=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("add!", static_cast<SimTK::DiscreteVariableIndex & (SimTK::DiscreteVariableIndex::*)(long long) >(&SimTK::DiscreteVariableIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::DiscreteVariableIndex & SimTK::DiscreteVariableIndex::operator-=(long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::DiscreteVariableIndex & SimTK::DiscreteVariableIndex::operator-=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("sub!", static_cast<SimTK::DiscreteVariableIndex & (SimTK::DiscreteVariableIndex::*)(long long) >(&SimTK::DiscreteVariableIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::DiscreteVariableIndex & SimTK::DiscreteVariableIndex::operator+=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::DiscreteVariableIndex & SimTK::DiscreteVariableIndex::operator+=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("add!", static_cast<SimTK::DiscreteVariableIndex & (SimTK::DiscreteVariableIndex::*)(unsigned int) >(&SimTK::DiscreteVariableIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::DiscreteVariableIndex & SimTK::DiscreteVariableIndex::operator-=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::DiscreteVariableIndex & SimTK::DiscreteVariableIndex::operator-=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("sub!", static_cast<SimTK::DiscreteVariableIndex & (SimTK::DiscreteVariableIndex::*)(unsigned int) >(&SimTK::DiscreteVariableIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::DiscreteVariableIndex & SimTK::DiscreteVariableIndex::operator+=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::DiscreteVariableIndex & SimTK::DiscreteVariableIndex::operator+=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("add!", static_cast<SimTK::DiscreteVariableIndex & (SimTK::DiscreteVariableIndex::*)(unsigned short) >(&SimTK::DiscreteVariableIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::DiscreteVariableIndex & SimTK::DiscreteVariableIndex::operator-=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::DiscreteVariableIndex & SimTK::DiscreteVariableIndex::operator-=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("sub!", static_cast<SimTK::DiscreteVariableIndex & (SimTK::DiscreteVariableIndex::*)(unsigned short) >(&SimTK::DiscreteVariableIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::DiscreteVariableIndex & SimTK::DiscreteVariableIndex::operator+=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::DiscreteVariableIndex & SimTK::DiscreteVariableIndex::operator+=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("add!", static_cast<SimTK::DiscreteVariableIndex & (SimTK::DiscreteVariableIndex::*)(unsigned long) >(&SimTK::DiscreteVariableIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::DiscreteVariableIndex & SimTK::DiscreteVariableIndex::operator-=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::DiscreteVariableIndex & SimTK::DiscreteVariableIndex::operator-=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("sub!", static_cast<SimTK::DiscreteVariableIndex & (SimTK::DiscreteVariableIndex::*)(unsigned long) >(&SimTK::DiscreteVariableIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::DiscreteVariableIndex & SimTK::DiscreteVariableIndex::operator+=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::DiscreteVariableIndex & SimTK::DiscreteVariableIndex::operator+=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("add!", static_cast<SimTK::DiscreteVariableIndex & (SimTK::DiscreteVariableIndex::*)(unsigned long long) >(&SimTK::DiscreteVariableIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::DiscreteVariableIndex & SimTK::DiscreteVariableIndex::operator-=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::DiscreteVariableIndex & SimTK::DiscreteVariableIndex::operator-=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("sub!", static_cast<SimTK::DiscreteVariableIndex & (SimTK::DiscreteVariableIndex::*)(unsigned long long) >(&SimTK::DiscreteVariableIndex::operator-=));

  DEBUG_MSG("Adding wrapper for const SimTK::DiscreteVariableIndex & SimTK::DiscreteVariableIndex::Invalid() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::DiscreteVariableIndex & SimTK::DiscreteVariableIndex::Invalid()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("SimTK!DiscreteVariableIndex!Invalid", static_cast<const SimTK::DiscreteVariableIndex & (*)() >(&SimTK::DiscreteVariableIndex::Invalid));

  DEBUG_MSG("Adding wrapper for bool SimTK::DiscreteVariableIndex::isValid(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::DiscreteVariableIndex::isValid(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("SimTK!DiscreteVariableIndex!isValid", static_cast<bool (*)(int) >(&SimTK::DiscreteVariableIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::DiscreteVariableIndex::isValid(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::DiscreteVariableIndex::isValid(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("SimTK!DiscreteVariableIndex!isValid", static_cast<bool (*)(short) >(&SimTK::DiscreteVariableIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::DiscreteVariableIndex::isValid(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::DiscreteVariableIndex::isValid(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("SimTK!DiscreteVariableIndex!isValid", static_cast<bool (*)(long) >(&SimTK::DiscreteVariableIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::DiscreteVariableIndex::isValid(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::DiscreteVariableIndex::isValid(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("SimTK!DiscreteVariableIndex!isValid", static_cast<bool (*)(long long) >(&SimTK::DiscreteVariableIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::DiscreteVariableIndex::isValid(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::DiscreteVariableIndex::isValid(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("SimTK!DiscreteVariableIndex!isValid", static_cast<bool (*)(unsigned int) >(&SimTK::DiscreteVariableIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::DiscreteVariableIndex::isValid(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::DiscreteVariableIndex::isValid(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("SimTK!DiscreteVariableIndex!isValid", static_cast<bool (*)(unsigned short) >(&SimTK::DiscreteVariableIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::DiscreteVariableIndex::isValid(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::DiscreteVariableIndex::isValid(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("SimTK!DiscreteVariableIndex!isValid", static_cast<bool (*)(unsigned long) >(&SimTK::DiscreteVariableIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::DiscreteVariableIndex::isValid(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::DiscreteVariableIndex::isValid(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("SimTK!DiscreteVariableIndex!isValid", static_cast<bool (*)(unsigned long long) >(&SimTK::DiscreteVariableIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::DiscreteVariableIndex::isValidExtended(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::DiscreteVariableIndex::isValidExtended(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("SimTK!DiscreteVariableIndex!isValidExtended", static_cast<bool (*)(int) >(&SimTK::DiscreteVariableIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for bool SimTK::DiscreteVariableIndex::isValidExtended(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::DiscreteVariableIndex::isValidExtended(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("SimTK!DiscreteVariableIndex!isValidExtended", static_cast<bool (*)(short) >(&SimTK::DiscreteVariableIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for bool SimTK::DiscreteVariableIndex::isValidExtended(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::DiscreteVariableIndex::isValidExtended(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("SimTK!DiscreteVariableIndex!isValidExtended", static_cast<bool (*)(long) >(&SimTK::DiscreteVariableIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for bool SimTK::DiscreteVariableIndex::isValidExtended(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::DiscreteVariableIndex::isValidExtended(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("SimTK!DiscreteVariableIndex!isValidExtended", static_cast<bool (*)(long long) >(&SimTK::DiscreteVariableIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for SimTK::DiscreteVariableIndex::size_type SimTK::DiscreteVariableIndex::max_size() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::DiscreteVariableIndex::size_type SimTK::DiscreteVariableIndex::max_size()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  t23.method("SimTK!DiscreteVariableIndex!max_size", static_cast<SimTK::DiscreteVariableIndex::size_type (*)() >(&SimTK::DiscreteVariableIndex::max_size));

  /* End of SimTK::DiscreteVariableIndex class method wrappers
   **********************************************************************/


  /**********************************************************************/
  /* Wrappers for the methods of class SimTK::CacheEntryIndex
   */


  DEBUG_MSG("Adding wrapper for void SimTK::CacheEntryIndex::CacheEntryIndex(int) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:32
  t24.constructor<int>();


  DEBUG_MSG("Adding wrapper for void SimTK::CacheEntryIndex::CacheEntryIndex(long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:32
  t24.constructor<long>();


  DEBUG_MSG("Adding wrapper for void SimTK::CacheEntryIndex::CacheEntryIndex(long long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:32
  t24.constructor<long long>();


  DEBUG_MSG("Adding wrapper for void SimTK::CacheEntryIndex::CacheEntryIndex(unsigned int) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:32
  t24.constructor<unsigned int>();


  DEBUG_MSG("Adding wrapper for void SimTK::CacheEntryIndex::CacheEntryIndex(unsigned long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:32
  t24.constructor<unsigned long>();


  DEBUG_MSG("Adding wrapper for void SimTK::CacheEntryIndex::CacheEntryIndex(unsigned long long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:32
  t24.constructor<unsigned long long>();

  DEBUG_MSG("Adding wrapper for bool SimTK::CacheEntryIndex::isValid() (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::CacheEntryIndex::isValid()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("isValid", static_cast<bool (SimTK::CacheEntryIndex::*)()  const>(&SimTK::CacheEntryIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::CacheEntryIndex::isValidExtended() (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::CacheEntryIndex::isValidExtended()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("isValidExtended", static_cast<bool (SimTK::CacheEntryIndex::*)()  const>(&SimTK::CacheEntryIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for void SimTK::CacheEntryIndex::invalidate() (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::CacheEntryIndex::invalidate()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("invalidate", static_cast<void (SimTK::CacheEntryIndex::*)() >(&SimTK::CacheEntryIndex::invalidate));

  DEBUG_MSG("Adding wrapper for void SimTK::CacheEntryIndex::clear() (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::CacheEntryIndex::clear()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("clear", static_cast<void (SimTK::CacheEntryIndex::*)() >(&SimTK::CacheEntryIndex::clear));
  types.set_override_module(jl_base_module);

  DEBUG_MSG("Adding wrapper for bool SimTK::CacheEntryIndex::operator==(const SimTK::CacheEntryIndex &) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::CacheEntryIndex::operator==(const SimTK::CacheEntryIndex &)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("==", static_cast<bool (SimTK::CacheEntryIndex::*)(const SimTK::CacheEntryIndex &)  const>(&SimTK::CacheEntryIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::CacheEntryIndex::operator==(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::CacheEntryIndex::operator==(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("==", static_cast<bool (SimTK::CacheEntryIndex::*)(int)  const>(&SimTK::CacheEntryIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::CacheEntryIndex::operator==(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::CacheEntryIndex::operator==(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("==", static_cast<bool (SimTK::CacheEntryIndex::*)(short)  const>(&SimTK::CacheEntryIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::CacheEntryIndex::operator==(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::CacheEntryIndex::operator==(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("==", static_cast<bool (SimTK::CacheEntryIndex::*)(long)  const>(&SimTK::CacheEntryIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::CacheEntryIndex::operator==(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::CacheEntryIndex::operator==(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("==", static_cast<bool (SimTK::CacheEntryIndex::*)(long long)  const>(&SimTK::CacheEntryIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::CacheEntryIndex::operator==(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::CacheEntryIndex::operator==(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("==", static_cast<bool (SimTK::CacheEntryIndex::*)(unsigned int)  const>(&SimTK::CacheEntryIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::CacheEntryIndex::operator==(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::CacheEntryIndex::operator==(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("==", static_cast<bool (SimTK::CacheEntryIndex::*)(unsigned short)  const>(&SimTK::CacheEntryIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::CacheEntryIndex::operator==(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::CacheEntryIndex::operator==(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("==", static_cast<bool (SimTK::CacheEntryIndex::*)(unsigned long)  const>(&SimTK::CacheEntryIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::CacheEntryIndex::operator==(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::CacheEntryIndex::operator==(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("==", static_cast<bool (SimTK::CacheEntryIndex::*)(unsigned long long)  const>(&SimTK::CacheEntryIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::CacheEntryIndex::operator!=(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::CacheEntryIndex::operator!=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("!=", static_cast<bool (SimTK::CacheEntryIndex::*)(int)  const>(&SimTK::CacheEntryIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::CacheEntryIndex::operator!=(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::CacheEntryIndex::operator!=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("!=", static_cast<bool (SimTK::CacheEntryIndex::*)(short)  const>(&SimTK::CacheEntryIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::CacheEntryIndex::operator!=(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::CacheEntryIndex::operator!=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("!=", static_cast<bool (SimTK::CacheEntryIndex::*)(long)  const>(&SimTK::CacheEntryIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::CacheEntryIndex::operator!=(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::CacheEntryIndex::operator!=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("!=", static_cast<bool (SimTK::CacheEntryIndex::*)(long long)  const>(&SimTK::CacheEntryIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::CacheEntryIndex::operator!=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::CacheEntryIndex::operator!=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("!=", static_cast<bool (SimTK::CacheEntryIndex::*)(unsigned int)  const>(&SimTK::CacheEntryIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::CacheEntryIndex::operator!=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::CacheEntryIndex::operator!=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("!=", static_cast<bool (SimTK::CacheEntryIndex::*)(unsigned long)  const>(&SimTK::CacheEntryIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::CacheEntryIndex::operator!=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::CacheEntryIndex::operator!=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("!=", static_cast<bool (SimTK::CacheEntryIndex::*)(unsigned long long)  const>(&SimTK::CacheEntryIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::CacheEntryIndex::operator<(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::CacheEntryIndex::operator<(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("<", static_cast<bool (SimTK::CacheEntryIndex::*)(int)  const>(&SimTK::CacheEntryIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::CacheEntryIndex::operator<(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::CacheEntryIndex::operator<(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("<", static_cast<bool (SimTK::CacheEntryIndex::*)(short)  const>(&SimTK::CacheEntryIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::CacheEntryIndex::operator<(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::CacheEntryIndex::operator<(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("<", static_cast<bool (SimTK::CacheEntryIndex::*)(long)  const>(&SimTK::CacheEntryIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::CacheEntryIndex::operator<(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::CacheEntryIndex::operator<(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("<", static_cast<bool (SimTK::CacheEntryIndex::*)(long long)  const>(&SimTK::CacheEntryIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::CacheEntryIndex::operator<(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::CacheEntryIndex::operator<(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("<", static_cast<bool (SimTK::CacheEntryIndex::*)(unsigned int)  const>(&SimTK::CacheEntryIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::CacheEntryIndex::operator<(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::CacheEntryIndex::operator<(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("<", static_cast<bool (SimTK::CacheEntryIndex::*)(unsigned short)  const>(&SimTK::CacheEntryIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::CacheEntryIndex::operator<(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::CacheEntryIndex::operator<(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("<", static_cast<bool (SimTK::CacheEntryIndex::*)(unsigned long)  const>(&SimTK::CacheEntryIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::CacheEntryIndex::operator<(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::CacheEntryIndex::operator<(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("<", static_cast<bool (SimTK::CacheEntryIndex::*)(unsigned long long)  const>(&SimTK::CacheEntryIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::CacheEntryIndex::operator>=(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::CacheEntryIndex::operator>=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method(">=", static_cast<bool (SimTK::CacheEntryIndex::*)(int)  const>(&SimTK::CacheEntryIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::CacheEntryIndex::operator>=(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::CacheEntryIndex::operator>=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method(">=", static_cast<bool (SimTK::CacheEntryIndex::*)(short)  const>(&SimTK::CacheEntryIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::CacheEntryIndex::operator>=(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::CacheEntryIndex::operator>=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method(">=", static_cast<bool (SimTK::CacheEntryIndex::*)(long)  const>(&SimTK::CacheEntryIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::CacheEntryIndex::operator>=(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::CacheEntryIndex::operator>=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method(">=", static_cast<bool (SimTK::CacheEntryIndex::*)(long long)  const>(&SimTK::CacheEntryIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::CacheEntryIndex::operator>=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::CacheEntryIndex::operator>=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method(">=", static_cast<bool (SimTK::CacheEntryIndex::*)(unsigned int)  const>(&SimTK::CacheEntryIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::CacheEntryIndex::operator>=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::CacheEntryIndex::operator>=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method(">=", static_cast<bool (SimTK::CacheEntryIndex::*)(unsigned short)  const>(&SimTK::CacheEntryIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::CacheEntryIndex::operator>=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::CacheEntryIndex::operator>=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method(">=", static_cast<bool (SimTK::CacheEntryIndex::*)(unsigned long)  const>(&SimTK::CacheEntryIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::CacheEntryIndex::operator>=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::CacheEntryIndex::operator>=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method(">=", static_cast<bool (SimTK::CacheEntryIndex::*)(unsigned long long)  const>(&SimTK::CacheEntryIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::CacheEntryIndex::operator>(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::CacheEntryIndex::operator>(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method(">", static_cast<bool (SimTK::CacheEntryIndex::*)(int)  const>(&SimTK::CacheEntryIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::CacheEntryIndex::operator>(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::CacheEntryIndex::operator>(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method(">", static_cast<bool (SimTK::CacheEntryIndex::*)(short)  const>(&SimTK::CacheEntryIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::CacheEntryIndex::operator>(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::CacheEntryIndex::operator>(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method(">", static_cast<bool (SimTK::CacheEntryIndex::*)(long)  const>(&SimTK::CacheEntryIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::CacheEntryIndex::operator>(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::CacheEntryIndex::operator>(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method(">", static_cast<bool (SimTK::CacheEntryIndex::*)(long long)  const>(&SimTK::CacheEntryIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::CacheEntryIndex::operator>(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::CacheEntryIndex::operator>(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method(">", static_cast<bool (SimTK::CacheEntryIndex::*)(unsigned int)  const>(&SimTK::CacheEntryIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::CacheEntryIndex::operator>(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::CacheEntryIndex::operator>(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method(">", static_cast<bool (SimTK::CacheEntryIndex::*)(unsigned short)  const>(&SimTK::CacheEntryIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::CacheEntryIndex::operator>(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::CacheEntryIndex::operator>(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method(">", static_cast<bool (SimTK::CacheEntryIndex::*)(unsigned long)  const>(&SimTK::CacheEntryIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::CacheEntryIndex::operator>(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::CacheEntryIndex::operator>(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method(">", static_cast<bool (SimTK::CacheEntryIndex::*)(unsigned long long)  const>(&SimTK::CacheEntryIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::CacheEntryIndex::operator<=(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::CacheEntryIndex::operator<=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("<=", static_cast<bool (SimTK::CacheEntryIndex::*)(int)  const>(&SimTK::CacheEntryIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::CacheEntryIndex::operator<=(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::CacheEntryIndex::operator<=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("<=", static_cast<bool (SimTK::CacheEntryIndex::*)(short)  const>(&SimTK::CacheEntryIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::CacheEntryIndex::operator<=(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::CacheEntryIndex::operator<=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("<=", static_cast<bool (SimTK::CacheEntryIndex::*)(long)  const>(&SimTK::CacheEntryIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::CacheEntryIndex::operator<=(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::CacheEntryIndex::operator<=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("<=", static_cast<bool (SimTK::CacheEntryIndex::*)(long long)  const>(&SimTK::CacheEntryIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::CacheEntryIndex::operator<=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::CacheEntryIndex::operator<=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("<=", static_cast<bool (SimTK::CacheEntryIndex::*)(unsigned int)  const>(&SimTK::CacheEntryIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::CacheEntryIndex::operator<=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::CacheEntryIndex::operator<=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("<=", static_cast<bool (SimTK::CacheEntryIndex::*)(unsigned short)  const>(&SimTK::CacheEntryIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::CacheEntryIndex::operator<=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::CacheEntryIndex::operator<=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("<=", static_cast<bool (SimTK::CacheEntryIndex::*)(unsigned long)  const>(&SimTK::CacheEntryIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::CacheEntryIndex::operator<=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::CacheEntryIndex::operator<=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("<=", static_cast<bool (SimTK::CacheEntryIndex::*)(unsigned long long)  const>(&SimTK::CacheEntryIndex::operator<=));
  types.unset_override_module();

  DEBUG_MSG("Adding wrapper for const SimTK::CacheEntryIndex & SimTK::CacheEntryIndex::operator++() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::CacheEntryIndex & SimTK::CacheEntryIndex::operator++()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("inc!", static_cast<const SimTK::CacheEntryIndex & (SimTK::CacheEntryIndex::*)() >(&SimTK::CacheEntryIndex::operator++));

  DEBUG_MSG("Adding wrapper for SimTK::CacheEntryIndex SimTK::CacheEntryIndex::operator++(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::CacheEntryIndex SimTK::CacheEntryIndex::operator++(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("inc!", static_cast<SimTK::CacheEntryIndex (SimTK::CacheEntryIndex::*)(int) >(&SimTK::CacheEntryIndex::operator++));

  DEBUG_MSG("Adding wrapper for const SimTK::CacheEntryIndex & SimTK::CacheEntryIndex::operator--() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::CacheEntryIndex & SimTK::CacheEntryIndex::operator--()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("dec!", static_cast<const SimTK::CacheEntryIndex & (SimTK::CacheEntryIndex::*)() >(&SimTK::CacheEntryIndex::operator--));

  DEBUG_MSG("Adding wrapper for SimTK::CacheEntryIndex SimTK::CacheEntryIndex::operator--(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::CacheEntryIndex SimTK::CacheEntryIndex::operator--(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("dec!", static_cast<SimTK::CacheEntryIndex (SimTK::CacheEntryIndex::*)(int) >(&SimTK::CacheEntryIndex::operator--));

  DEBUG_MSG("Adding wrapper for SimTK::CacheEntryIndex SimTK::CacheEntryIndex::next() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::CacheEntryIndex SimTK::CacheEntryIndex::next()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("next", static_cast<SimTK::CacheEntryIndex (SimTK::CacheEntryIndex::*)()  const>(&SimTK::CacheEntryIndex::next));

  DEBUG_MSG("Adding wrapper for SimTK::CacheEntryIndex SimTK::CacheEntryIndex::prev() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::CacheEntryIndex SimTK::CacheEntryIndex::prev()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("prev", static_cast<SimTK::CacheEntryIndex (SimTK::CacheEntryIndex::*)()  const>(&SimTK::CacheEntryIndex::prev));

  DEBUG_MSG("Adding wrapper for SimTK::CacheEntryIndex & SimTK::CacheEntryIndex::operator+=(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::CacheEntryIndex & SimTK::CacheEntryIndex::operator+=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("add!", static_cast<SimTK::CacheEntryIndex & (SimTK::CacheEntryIndex::*)(int) >(&SimTK::CacheEntryIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::CacheEntryIndex & SimTK::CacheEntryIndex::operator-=(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::CacheEntryIndex & SimTK::CacheEntryIndex::operator-=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("sub!", static_cast<SimTK::CacheEntryIndex & (SimTK::CacheEntryIndex::*)(int) >(&SimTK::CacheEntryIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::CacheEntryIndex & SimTK::CacheEntryIndex::operator+=(short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::CacheEntryIndex & SimTK::CacheEntryIndex::operator+=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("add!", static_cast<SimTK::CacheEntryIndex & (SimTK::CacheEntryIndex::*)(short) >(&SimTK::CacheEntryIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::CacheEntryIndex & SimTK::CacheEntryIndex::operator-=(short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::CacheEntryIndex & SimTK::CacheEntryIndex::operator-=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("sub!", static_cast<SimTK::CacheEntryIndex & (SimTK::CacheEntryIndex::*)(short) >(&SimTK::CacheEntryIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::CacheEntryIndex & SimTK::CacheEntryIndex::operator+=(long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::CacheEntryIndex & SimTK::CacheEntryIndex::operator+=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("add!", static_cast<SimTK::CacheEntryIndex & (SimTK::CacheEntryIndex::*)(long) >(&SimTK::CacheEntryIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::CacheEntryIndex & SimTK::CacheEntryIndex::operator-=(long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::CacheEntryIndex & SimTK::CacheEntryIndex::operator-=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("sub!", static_cast<SimTK::CacheEntryIndex & (SimTK::CacheEntryIndex::*)(long) >(&SimTK::CacheEntryIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::CacheEntryIndex & SimTK::CacheEntryIndex::operator+=(long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::CacheEntryIndex & SimTK::CacheEntryIndex::operator+=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("add!", static_cast<SimTK::CacheEntryIndex & (SimTK::CacheEntryIndex::*)(long long) >(&SimTK::CacheEntryIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::CacheEntryIndex & SimTK::CacheEntryIndex::operator-=(long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::CacheEntryIndex & SimTK::CacheEntryIndex::operator-=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("sub!", static_cast<SimTK::CacheEntryIndex & (SimTK::CacheEntryIndex::*)(long long) >(&SimTK::CacheEntryIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::CacheEntryIndex & SimTK::CacheEntryIndex::operator+=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::CacheEntryIndex & SimTK::CacheEntryIndex::operator+=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("add!", static_cast<SimTK::CacheEntryIndex & (SimTK::CacheEntryIndex::*)(unsigned int) >(&SimTK::CacheEntryIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::CacheEntryIndex & SimTK::CacheEntryIndex::operator-=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::CacheEntryIndex & SimTK::CacheEntryIndex::operator-=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("sub!", static_cast<SimTK::CacheEntryIndex & (SimTK::CacheEntryIndex::*)(unsigned int) >(&SimTK::CacheEntryIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::CacheEntryIndex & SimTK::CacheEntryIndex::operator+=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::CacheEntryIndex & SimTK::CacheEntryIndex::operator+=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("add!", static_cast<SimTK::CacheEntryIndex & (SimTK::CacheEntryIndex::*)(unsigned short) >(&SimTK::CacheEntryIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::CacheEntryIndex & SimTK::CacheEntryIndex::operator-=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::CacheEntryIndex & SimTK::CacheEntryIndex::operator-=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("sub!", static_cast<SimTK::CacheEntryIndex & (SimTK::CacheEntryIndex::*)(unsigned short) >(&SimTK::CacheEntryIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::CacheEntryIndex & SimTK::CacheEntryIndex::operator+=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::CacheEntryIndex & SimTK::CacheEntryIndex::operator+=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("add!", static_cast<SimTK::CacheEntryIndex & (SimTK::CacheEntryIndex::*)(unsigned long) >(&SimTK::CacheEntryIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::CacheEntryIndex & SimTK::CacheEntryIndex::operator-=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::CacheEntryIndex & SimTK::CacheEntryIndex::operator-=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("sub!", static_cast<SimTK::CacheEntryIndex & (SimTK::CacheEntryIndex::*)(unsigned long) >(&SimTK::CacheEntryIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::CacheEntryIndex & SimTK::CacheEntryIndex::operator+=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::CacheEntryIndex & SimTK::CacheEntryIndex::operator+=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("add!", static_cast<SimTK::CacheEntryIndex & (SimTK::CacheEntryIndex::*)(unsigned long long) >(&SimTK::CacheEntryIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::CacheEntryIndex & SimTK::CacheEntryIndex::operator-=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::CacheEntryIndex & SimTK::CacheEntryIndex::operator-=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("sub!", static_cast<SimTK::CacheEntryIndex & (SimTK::CacheEntryIndex::*)(unsigned long long) >(&SimTK::CacheEntryIndex::operator-=));

  DEBUG_MSG("Adding wrapper for const SimTK::CacheEntryIndex & SimTK::CacheEntryIndex::Invalid() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::CacheEntryIndex & SimTK::CacheEntryIndex::Invalid()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("SimTK!CacheEntryIndex!Invalid", static_cast<const SimTK::CacheEntryIndex & (*)() >(&SimTK::CacheEntryIndex::Invalid));

  DEBUG_MSG("Adding wrapper for bool SimTK::CacheEntryIndex::isValid(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::CacheEntryIndex::isValid(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("SimTK!CacheEntryIndex!isValid", static_cast<bool (*)(int) >(&SimTK::CacheEntryIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::CacheEntryIndex::isValid(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::CacheEntryIndex::isValid(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("SimTK!CacheEntryIndex!isValid", static_cast<bool (*)(short) >(&SimTK::CacheEntryIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::CacheEntryIndex::isValid(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::CacheEntryIndex::isValid(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("SimTK!CacheEntryIndex!isValid", static_cast<bool (*)(long) >(&SimTK::CacheEntryIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::CacheEntryIndex::isValid(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::CacheEntryIndex::isValid(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("SimTK!CacheEntryIndex!isValid", static_cast<bool (*)(long long) >(&SimTK::CacheEntryIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::CacheEntryIndex::isValid(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::CacheEntryIndex::isValid(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("SimTK!CacheEntryIndex!isValid", static_cast<bool (*)(unsigned int) >(&SimTK::CacheEntryIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::CacheEntryIndex::isValid(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::CacheEntryIndex::isValid(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("SimTK!CacheEntryIndex!isValid", static_cast<bool (*)(unsigned short) >(&SimTK::CacheEntryIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::CacheEntryIndex::isValid(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::CacheEntryIndex::isValid(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("SimTK!CacheEntryIndex!isValid", static_cast<bool (*)(unsigned long) >(&SimTK::CacheEntryIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::CacheEntryIndex::isValid(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::CacheEntryIndex::isValid(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("SimTK!CacheEntryIndex!isValid", static_cast<bool (*)(unsigned long long) >(&SimTK::CacheEntryIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::CacheEntryIndex::isValidExtended(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::CacheEntryIndex::isValidExtended(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("SimTK!CacheEntryIndex!isValidExtended", static_cast<bool (*)(int) >(&SimTK::CacheEntryIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for bool SimTK::CacheEntryIndex::isValidExtended(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::CacheEntryIndex::isValidExtended(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("SimTK!CacheEntryIndex!isValidExtended", static_cast<bool (*)(short) >(&SimTK::CacheEntryIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for bool SimTK::CacheEntryIndex::isValidExtended(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::CacheEntryIndex::isValidExtended(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("SimTK!CacheEntryIndex!isValidExtended", static_cast<bool (*)(long) >(&SimTK::CacheEntryIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for bool SimTK::CacheEntryIndex::isValidExtended(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::CacheEntryIndex::isValidExtended(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("SimTK!CacheEntryIndex!isValidExtended", static_cast<bool (*)(long long) >(&SimTK::CacheEntryIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for SimTK::CacheEntryIndex::size_type SimTK::CacheEntryIndex::max_size() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::CacheEntryIndex::size_type SimTK::CacheEntryIndex::max_size()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  t24.method("SimTK!CacheEntryIndex!max_size", static_cast<SimTK::CacheEntryIndex::size_type (*)() >(&SimTK::CacheEntryIndex::max_size));

  /* End of SimTK::CacheEntryIndex class method wrappers
   **********************************************************************/


  /**********************************************************************/
  /* Wrappers for the methods of class SimTK::SystemYErrIndex
   */


  DEBUG_MSG("Adding wrapper for void SimTK::SystemYErrIndex::SystemYErrIndex(int) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:32
  t25.constructor<int>();


  DEBUG_MSG("Adding wrapper for void SimTK::SystemYErrIndex::SystemYErrIndex(long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:32
  t25.constructor<long>();


  DEBUG_MSG("Adding wrapper for void SimTK::SystemYErrIndex::SystemYErrIndex(long long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:32
  t25.constructor<long long>();


  DEBUG_MSG("Adding wrapper for void SimTK::SystemYErrIndex::SystemYErrIndex(unsigned int) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:32
  t25.constructor<unsigned int>();


  DEBUG_MSG("Adding wrapper for void SimTK::SystemYErrIndex::SystemYErrIndex(unsigned long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:32
  t25.constructor<unsigned long>();


  DEBUG_MSG("Adding wrapper for void SimTK::SystemYErrIndex::SystemYErrIndex(unsigned long long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:32
  t25.constructor<unsigned long long>();

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYErrIndex::isValid() (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYErrIndex::isValid()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("isValid", static_cast<bool (SimTK::SystemYErrIndex::*)()  const>(&SimTK::SystemYErrIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYErrIndex::isValidExtended() (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYErrIndex::isValidExtended()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("isValidExtended", static_cast<bool (SimTK::SystemYErrIndex::*)()  const>(&SimTK::SystemYErrIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for void SimTK::SystemYErrIndex::invalidate() (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::SystemYErrIndex::invalidate()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("invalidate", static_cast<void (SimTK::SystemYErrIndex::*)() >(&SimTK::SystemYErrIndex::invalidate));

  DEBUG_MSG("Adding wrapper for void SimTK::SystemYErrIndex::clear() (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::SystemYErrIndex::clear()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("clear", static_cast<void (SimTK::SystemYErrIndex::*)() >(&SimTK::SystemYErrIndex::clear));
  types.set_override_module(jl_base_module);

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYErrIndex::operator==(const SimTK::SystemYErrIndex &) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYErrIndex::operator==(const SimTK::SystemYErrIndex &)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("==", static_cast<bool (SimTK::SystemYErrIndex::*)(const SimTK::SystemYErrIndex &)  const>(&SimTK::SystemYErrIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYErrIndex::operator==(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYErrIndex::operator==(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("==", static_cast<bool (SimTK::SystemYErrIndex::*)(int)  const>(&SimTK::SystemYErrIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYErrIndex::operator==(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYErrIndex::operator==(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("==", static_cast<bool (SimTK::SystemYErrIndex::*)(short)  const>(&SimTK::SystemYErrIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYErrIndex::operator==(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYErrIndex::operator==(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("==", static_cast<bool (SimTK::SystemYErrIndex::*)(long)  const>(&SimTK::SystemYErrIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYErrIndex::operator==(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYErrIndex::operator==(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("==", static_cast<bool (SimTK::SystemYErrIndex::*)(long long)  const>(&SimTK::SystemYErrIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYErrIndex::operator==(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYErrIndex::operator==(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("==", static_cast<bool (SimTK::SystemYErrIndex::*)(unsigned int)  const>(&SimTK::SystemYErrIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYErrIndex::operator==(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYErrIndex::operator==(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("==", static_cast<bool (SimTK::SystemYErrIndex::*)(unsigned short)  const>(&SimTK::SystemYErrIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYErrIndex::operator==(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYErrIndex::operator==(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("==", static_cast<bool (SimTK::SystemYErrIndex::*)(unsigned long)  const>(&SimTK::SystemYErrIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYErrIndex::operator==(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYErrIndex::operator==(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("==", static_cast<bool (SimTK::SystemYErrIndex::*)(unsigned long long)  const>(&SimTK::SystemYErrIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYErrIndex::operator!=(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYErrIndex::operator!=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("!=", static_cast<bool (SimTK::SystemYErrIndex::*)(int)  const>(&SimTK::SystemYErrIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYErrIndex::operator!=(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYErrIndex::operator!=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("!=", static_cast<bool (SimTK::SystemYErrIndex::*)(short)  const>(&SimTK::SystemYErrIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYErrIndex::operator!=(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYErrIndex::operator!=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("!=", static_cast<bool (SimTK::SystemYErrIndex::*)(long)  const>(&SimTK::SystemYErrIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYErrIndex::operator!=(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYErrIndex::operator!=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("!=", static_cast<bool (SimTK::SystemYErrIndex::*)(long long)  const>(&SimTK::SystemYErrIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYErrIndex::operator!=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYErrIndex::operator!=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("!=", static_cast<bool (SimTK::SystemYErrIndex::*)(unsigned int)  const>(&SimTK::SystemYErrIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYErrIndex::operator!=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYErrIndex::operator!=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("!=", static_cast<bool (SimTK::SystemYErrIndex::*)(unsigned long)  const>(&SimTK::SystemYErrIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYErrIndex::operator!=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYErrIndex::operator!=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("!=", static_cast<bool (SimTK::SystemYErrIndex::*)(unsigned long long)  const>(&SimTK::SystemYErrIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYErrIndex::operator<(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYErrIndex::operator<(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("<", static_cast<bool (SimTK::SystemYErrIndex::*)(int)  const>(&SimTK::SystemYErrIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYErrIndex::operator<(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYErrIndex::operator<(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("<", static_cast<bool (SimTK::SystemYErrIndex::*)(short)  const>(&SimTK::SystemYErrIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYErrIndex::operator<(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYErrIndex::operator<(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("<", static_cast<bool (SimTK::SystemYErrIndex::*)(long)  const>(&SimTK::SystemYErrIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYErrIndex::operator<(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYErrIndex::operator<(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("<", static_cast<bool (SimTK::SystemYErrIndex::*)(long long)  const>(&SimTK::SystemYErrIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYErrIndex::operator<(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYErrIndex::operator<(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("<", static_cast<bool (SimTK::SystemYErrIndex::*)(unsigned int)  const>(&SimTK::SystemYErrIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYErrIndex::operator<(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYErrIndex::operator<(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("<", static_cast<bool (SimTK::SystemYErrIndex::*)(unsigned short)  const>(&SimTK::SystemYErrIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYErrIndex::operator<(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYErrIndex::operator<(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("<", static_cast<bool (SimTK::SystemYErrIndex::*)(unsigned long)  const>(&SimTK::SystemYErrIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYErrIndex::operator<(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYErrIndex::operator<(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("<", static_cast<bool (SimTK::SystemYErrIndex::*)(unsigned long long)  const>(&SimTK::SystemYErrIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYErrIndex::operator>=(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYErrIndex::operator>=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method(">=", static_cast<bool (SimTK::SystemYErrIndex::*)(int)  const>(&SimTK::SystemYErrIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYErrIndex::operator>=(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYErrIndex::operator>=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method(">=", static_cast<bool (SimTK::SystemYErrIndex::*)(short)  const>(&SimTK::SystemYErrIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYErrIndex::operator>=(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYErrIndex::operator>=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method(">=", static_cast<bool (SimTK::SystemYErrIndex::*)(long)  const>(&SimTK::SystemYErrIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYErrIndex::operator>=(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYErrIndex::operator>=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method(">=", static_cast<bool (SimTK::SystemYErrIndex::*)(long long)  const>(&SimTK::SystemYErrIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYErrIndex::operator>=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYErrIndex::operator>=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method(">=", static_cast<bool (SimTK::SystemYErrIndex::*)(unsigned int)  const>(&SimTK::SystemYErrIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYErrIndex::operator>=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYErrIndex::operator>=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method(">=", static_cast<bool (SimTK::SystemYErrIndex::*)(unsigned short)  const>(&SimTK::SystemYErrIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYErrIndex::operator>=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYErrIndex::operator>=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method(">=", static_cast<bool (SimTK::SystemYErrIndex::*)(unsigned long)  const>(&SimTK::SystemYErrIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYErrIndex::operator>=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYErrIndex::operator>=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method(">=", static_cast<bool (SimTK::SystemYErrIndex::*)(unsigned long long)  const>(&SimTK::SystemYErrIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYErrIndex::operator>(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYErrIndex::operator>(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method(">", static_cast<bool (SimTK::SystemYErrIndex::*)(int)  const>(&SimTK::SystemYErrIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYErrIndex::operator>(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYErrIndex::operator>(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method(">", static_cast<bool (SimTK::SystemYErrIndex::*)(short)  const>(&SimTK::SystemYErrIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYErrIndex::operator>(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYErrIndex::operator>(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method(">", static_cast<bool (SimTK::SystemYErrIndex::*)(long)  const>(&SimTK::SystemYErrIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYErrIndex::operator>(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYErrIndex::operator>(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method(">", static_cast<bool (SimTK::SystemYErrIndex::*)(long long)  const>(&SimTK::SystemYErrIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYErrIndex::operator>(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYErrIndex::operator>(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method(">", static_cast<bool (SimTK::SystemYErrIndex::*)(unsigned int)  const>(&SimTK::SystemYErrIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYErrIndex::operator>(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYErrIndex::operator>(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method(">", static_cast<bool (SimTK::SystemYErrIndex::*)(unsigned short)  const>(&SimTK::SystemYErrIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYErrIndex::operator>(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYErrIndex::operator>(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method(">", static_cast<bool (SimTK::SystemYErrIndex::*)(unsigned long)  const>(&SimTK::SystemYErrIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYErrIndex::operator>(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYErrIndex::operator>(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method(">", static_cast<bool (SimTK::SystemYErrIndex::*)(unsigned long long)  const>(&SimTK::SystemYErrIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYErrIndex::operator<=(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYErrIndex::operator<=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("<=", static_cast<bool (SimTK::SystemYErrIndex::*)(int)  const>(&SimTK::SystemYErrIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYErrIndex::operator<=(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYErrIndex::operator<=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("<=", static_cast<bool (SimTK::SystemYErrIndex::*)(short)  const>(&SimTK::SystemYErrIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYErrIndex::operator<=(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYErrIndex::operator<=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("<=", static_cast<bool (SimTK::SystemYErrIndex::*)(long)  const>(&SimTK::SystemYErrIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYErrIndex::operator<=(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYErrIndex::operator<=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("<=", static_cast<bool (SimTK::SystemYErrIndex::*)(long long)  const>(&SimTK::SystemYErrIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYErrIndex::operator<=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYErrIndex::operator<=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("<=", static_cast<bool (SimTK::SystemYErrIndex::*)(unsigned int)  const>(&SimTK::SystemYErrIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYErrIndex::operator<=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYErrIndex::operator<=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("<=", static_cast<bool (SimTK::SystemYErrIndex::*)(unsigned short)  const>(&SimTK::SystemYErrIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYErrIndex::operator<=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYErrIndex::operator<=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("<=", static_cast<bool (SimTK::SystemYErrIndex::*)(unsigned long)  const>(&SimTK::SystemYErrIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYErrIndex::operator<=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYErrIndex::operator<=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("<=", static_cast<bool (SimTK::SystemYErrIndex::*)(unsigned long long)  const>(&SimTK::SystemYErrIndex::operator<=));
  types.unset_override_module();

  DEBUG_MSG("Adding wrapper for const SimTK::SystemYErrIndex & SimTK::SystemYErrIndex::operator++() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::SystemYErrIndex & SimTK::SystemYErrIndex::operator++()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("inc!", static_cast<const SimTK::SystemYErrIndex & (SimTK::SystemYErrIndex::*)() >(&SimTK::SystemYErrIndex::operator++));

  DEBUG_MSG("Adding wrapper for SimTK::SystemYErrIndex SimTK::SystemYErrIndex::operator++(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemYErrIndex SimTK::SystemYErrIndex::operator++(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("inc!", static_cast<SimTK::SystemYErrIndex (SimTK::SystemYErrIndex::*)(int) >(&SimTK::SystemYErrIndex::operator++));

  DEBUG_MSG("Adding wrapper for const SimTK::SystemYErrIndex & SimTK::SystemYErrIndex::operator--() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::SystemYErrIndex & SimTK::SystemYErrIndex::operator--()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("dec!", static_cast<const SimTK::SystemYErrIndex & (SimTK::SystemYErrIndex::*)() >(&SimTK::SystemYErrIndex::operator--));

  DEBUG_MSG("Adding wrapper for SimTK::SystemYErrIndex SimTK::SystemYErrIndex::operator--(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemYErrIndex SimTK::SystemYErrIndex::operator--(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("dec!", static_cast<SimTK::SystemYErrIndex (SimTK::SystemYErrIndex::*)(int) >(&SimTK::SystemYErrIndex::operator--));

  DEBUG_MSG("Adding wrapper for SimTK::SystemYErrIndex SimTK::SystemYErrIndex::next() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemYErrIndex SimTK::SystemYErrIndex::next()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("next", static_cast<SimTK::SystemYErrIndex (SimTK::SystemYErrIndex::*)()  const>(&SimTK::SystemYErrIndex::next));

  DEBUG_MSG("Adding wrapper for SimTK::SystemYErrIndex SimTK::SystemYErrIndex::prev() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemYErrIndex SimTK::SystemYErrIndex::prev()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("prev", static_cast<SimTK::SystemYErrIndex (SimTK::SystemYErrIndex::*)()  const>(&SimTK::SystemYErrIndex::prev));

  DEBUG_MSG("Adding wrapper for SimTK::SystemYErrIndex & SimTK::SystemYErrIndex::operator+=(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemYErrIndex & SimTK::SystemYErrIndex::operator+=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("add!", static_cast<SimTK::SystemYErrIndex & (SimTK::SystemYErrIndex::*)(int) >(&SimTK::SystemYErrIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemYErrIndex & SimTK::SystemYErrIndex::operator-=(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemYErrIndex & SimTK::SystemYErrIndex::operator-=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("sub!", static_cast<SimTK::SystemYErrIndex & (SimTK::SystemYErrIndex::*)(int) >(&SimTK::SystemYErrIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemYErrIndex & SimTK::SystemYErrIndex::operator+=(short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemYErrIndex & SimTK::SystemYErrIndex::operator+=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("add!", static_cast<SimTK::SystemYErrIndex & (SimTK::SystemYErrIndex::*)(short) >(&SimTK::SystemYErrIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemYErrIndex & SimTK::SystemYErrIndex::operator-=(short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemYErrIndex & SimTK::SystemYErrIndex::operator-=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("sub!", static_cast<SimTK::SystemYErrIndex & (SimTK::SystemYErrIndex::*)(short) >(&SimTK::SystemYErrIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemYErrIndex & SimTK::SystemYErrIndex::operator+=(long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemYErrIndex & SimTK::SystemYErrIndex::operator+=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("add!", static_cast<SimTK::SystemYErrIndex & (SimTK::SystemYErrIndex::*)(long) >(&SimTK::SystemYErrIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemYErrIndex & SimTK::SystemYErrIndex::operator-=(long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemYErrIndex & SimTK::SystemYErrIndex::operator-=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("sub!", static_cast<SimTK::SystemYErrIndex & (SimTK::SystemYErrIndex::*)(long) >(&SimTK::SystemYErrIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemYErrIndex & SimTK::SystemYErrIndex::operator+=(long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemYErrIndex & SimTK::SystemYErrIndex::operator+=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("add!", static_cast<SimTK::SystemYErrIndex & (SimTK::SystemYErrIndex::*)(long long) >(&SimTK::SystemYErrIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemYErrIndex & SimTK::SystemYErrIndex::operator-=(long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemYErrIndex & SimTK::SystemYErrIndex::operator-=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("sub!", static_cast<SimTK::SystemYErrIndex & (SimTK::SystemYErrIndex::*)(long long) >(&SimTK::SystemYErrIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemYErrIndex & SimTK::SystemYErrIndex::operator+=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemYErrIndex & SimTK::SystemYErrIndex::operator+=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("add!", static_cast<SimTK::SystemYErrIndex & (SimTK::SystemYErrIndex::*)(unsigned int) >(&SimTK::SystemYErrIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemYErrIndex & SimTK::SystemYErrIndex::operator-=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemYErrIndex & SimTK::SystemYErrIndex::operator-=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("sub!", static_cast<SimTK::SystemYErrIndex & (SimTK::SystemYErrIndex::*)(unsigned int) >(&SimTK::SystemYErrIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemYErrIndex & SimTK::SystemYErrIndex::operator+=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemYErrIndex & SimTK::SystemYErrIndex::operator+=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("add!", static_cast<SimTK::SystemYErrIndex & (SimTK::SystemYErrIndex::*)(unsigned short) >(&SimTK::SystemYErrIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemYErrIndex & SimTK::SystemYErrIndex::operator-=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemYErrIndex & SimTK::SystemYErrIndex::operator-=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("sub!", static_cast<SimTK::SystemYErrIndex & (SimTK::SystemYErrIndex::*)(unsigned short) >(&SimTK::SystemYErrIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemYErrIndex & SimTK::SystemYErrIndex::operator+=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemYErrIndex & SimTK::SystemYErrIndex::operator+=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("add!", static_cast<SimTK::SystemYErrIndex & (SimTK::SystemYErrIndex::*)(unsigned long) >(&SimTK::SystemYErrIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemYErrIndex & SimTK::SystemYErrIndex::operator-=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemYErrIndex & SimTK::SystemYErrIndex::operator-=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("sub!", static_cast<SimTK::SystemYErrIndex & (SimTK::SystemYErrIndex::*)(unsigned long) >(&SimTK::SystemYErrIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemYErrIndex & SimTK::SystemYErrIndex::operator+=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemYErrIndex & SimTK::SystemYErrIndex::operator+=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("add!", static_cast<SimTK::SystemYErrIndex & (SimTK::SystemYErrIndex::*)(unsigned long long) >(&SimTK::SystemYErrIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemYErrIndex & SimTK::SystemYErrIndex::operator-=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemYErrIndex & SimTK::SystemYErrIndex::operator-=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("sub!", static_cast<SimTK::SystemYErrIndex & (SimTK::SystemYErrIndex::*)(unsigned long long) >(&SimTK::SystemYErrIndex::operator-=));

  DEBUG_MSG("Adding wrapper for const SimTK::SystemYErrIndex & SimTK::SystemYErrIndex::Invalid() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::SystemYErrIndex & SimTK::SystemYErrIndex::Invalid()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("SimTK!SystemYErrIndex!Invalid", static_cast<const SimTK::SystemYErrIndex & (*)() >(&SimTK::SystemYErrIndex::Invalid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYErrIndex::isValid(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYErrIndex::isValid(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("SimTK!SystemYErrIndex!isValid", static_cast<bool (*)(int) >(&SimTK::SystemYErrIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYErrIndex::isValid(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYErrIndex::isValid(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("SimTK!SystemYErrIndex!isValid", static_cast<bool (*)(short) >(&SimTK::SystemYErrIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYErrIndex::isValid(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYErrIndex::isValid(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("SimTK!SystemYErrIndex!isValid", static_cast<bool (*)(long) >(&SimTK::SystemYErrIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYErrIndex::isValid(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYErrIndex::isValid(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("SimTK!SystemYErrIndex!isValid", static_cast<bool (*)(long long) >(&SimTK::SystemYErrIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYErrIndex::isValid(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYErrIndex::isValid(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("SimTK!SystemYErrIndex!isValid", static_cast<bool (*)(unsigned int) >(&SimTK::SystemYErrIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYErrIndex::isValid(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYErrIndex::isValid(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("SimTK!SystemYErrIndex!isValid", static_cast<bool (*)(unsigned short) >(&SimTK::SystemYErrIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYErrIndex::isValid(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYErrIndex::isValid(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("SimTK!SystemYErrIndex!isValid", static_cast<bool (*)(unsigned long) >(&SimTK::SystemYErrIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYErrIndex::isValid(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYErrIndex::isValid(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("SimTK!SystemYErrIndex!isValid", static_cast<bool (*)(unsigned long long) >(&SimTK::SystemYErrIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYErrIndex::isValidExtended(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYErrIndex::isValidExtended(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("SimTK!SystemYErrIndex!isValidExtended", static_cast<bool (*)(int) >(&SimTK::SystemYErrIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYErrIndex::isValidExtended(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYErrIndex::isValidExtended(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("SimTK!SystemYErrIndex!isValidExtended", static_cast<bool (*)(short) >(&SimTK::SystemYErrIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYErrIndex::isValidExtended(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYErrIndex::isValidExtended(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("SimTK!SystemYErrIndex!isValidExtended", static_cast<bool (*)(long) >(&SimTK::SystemYErrIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemYErrIndex::isValidExtended(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemYErrIndex::isValidExtended(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("SimTK!SystemYErrIndex!isValidExtended", static_cast<bool (*)(long long) >(&SimTK::SystemYErrIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for SimTK::SystemYErrIndex::size_type SimTK::SystemYErrIndex::max_size() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemYErrIndex::size_type SimTK::SystemYErrIndex::max_size()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  t25.method("SimTK!SystemYErrIndex!max_size", static_cast<SimTK::SystemYErrIndex::size_type (*)() >(&SimTK::SystemYErrIndex::max_size));

  /* End of SimTK::SystemYErrIndex class method wrappers
   **********************************************************************/


  /**********************************************************************/
  /* Wrappers for the methods of class SimTK::SystemQErrIndex
   */


  DEBUG_MSG("Adding wrapper for void SimTK::SystemQErrIndex::SystemQErrIndex(int) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:32
  t26.constructor<int>();


  DEBUG_MSG("Adding wrapper for void SimTK::SystemQErrIndex::SystemQErrIndex(long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:32
  t26.constructor<long>();


  DEBUG_MSG("Adding wrapper for void SimTK::SystemQErrIndex::SystemQErrIndex(long long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:32
  t26.constructor<long long>();


  DEBUG_MSG("Adding wrapper for void SimTK::SystemQErrIndex::SystemQErrIndex(unsigned int) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:32
  t26.constructor<unsigned int>();


  DEBUG_MSG("Adding wrapper for void SimTK::SystemQErrIndex::SystemQErrIndex(unsigned long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:32
  t26.constructor<unsigned long>();


  DEBUG_MSG("Adding wrapper for void SimTK::SystemQErrIndex::SystemQErrIndex(unsigned long long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:32
  t26.constructor<unsigned long long>();

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQErrIndex::isValid() (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQErrIndex::isValid()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("isValid", static_cast<bool (SimTK::SystemQErrIndex::*)()  const>(&SimTK::SystemQErrIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQErrIndex::isValidExtended() (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQErrIndex::isValidExtended()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("isValidExtended", static_cast<bool (SimTK::SystemQErrIndex::*)()  const>(&SimTK::SystemQErrIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for void SimTK::SystemQErrIndex::invalidate() (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::SystemQErrIndex::invalidate()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("invalidate", static_cast<void (SimTK::SystemQErrIndex::*)() >(&SimTK::SystemQErrIndex::invalidate));

  DEBUG_MSG("Adding wrapper for void SimTK::SystemQErrIndex::clear() (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::SystemQErrIndex::clear()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("clear", static_cast<void (SimTK::SystemQErrIndex::*)() >(&SimTK::SystemQErrIndex::clear));
  types.set_override_module(jl_base_module);

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQErrIndex::operator==(const SimTK::SystemQErrIndex &) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQErrIndex::operator==(const SimTK::SystemQErrIndex &)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("==", static_cast<bool (SimTK::SystemQErrIndex::*)(const SimTK::SystemQErrIndex &)  const>(&SimTK::SystemQErrIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQErrIndex::operator==(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQErrIndex::operator==(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("==", static_cast<bool (SimTK::SystemQErrIndex::*)(int)  const>(&SimTK::SystemQErrIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQErrIndex::operator==(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQErrIndex::operator==(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("==", static_cast<bool (SimTK::SystemQErrIndex::*)(short)  const>(&SimTK::SystemQErrIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQErrIndex::operator==(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQErrIndex::operator==(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("==", static_cast<bool (SimTK::SystemQErrIndex::*)(long)  const>(&SimTK::SystemQErrIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQErrIndex::operator==(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQErrIndex::operator==(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("==", static_cast<bool (SimTK::SystemQErrIndex::*)(long long)  const>(&SimTK::SystemQErrIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQErrIndex::operator==(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQErrIndex::operator==(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("==", static_cast<bool (SimTK::SystemQErrIndex::*)(unsigned int)  const>(&SimTK::SystemQErrIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQErrIndex::operator==(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQErrIndex::operator==(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("==", static_cast<bool (SimTK::SystemQErrIndex::*)(unsigned short)  const>(&SimTK::SystemQErrIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQErrIndex::operator==(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQErrIndex::operator==(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("==", static_cast<bool (SimTK::SystemQErrIndex::*)(unsigned long)  const>(&SimTK::SystemQErrIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQErrIndex::operator==(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQErrIndex::operator==(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("==", static_cast<bool (SimTK::SystemQErrIndex::*)(unsigned long long)  const>(&SimTK::SystemQErrIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQErrIndex::operator!=(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQErrIndex::operator!=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("!=", static_cast<bool (SimTK::SystemQErrIndex::*)(int)  const>(&SimTK::SystemQErrIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQErrIndex::operator!=(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQErrIndex::operator!=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("!=", static_cast<bool (SimTK::SystemQErrIndex::*)(short)  const>(&SimTK::SystemQErrIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQErrIndex::operator!=(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQErrIndex::operator!=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("!=", static_cast<bool (SimTK::SystemQErrIndex::*)(long)  const>(&SimTK::SystemQErrIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQErrIndex::operator!=(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQErrIndex::operator!=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("!=", static_cast<bool (SimTK::SystemQErrIndex::*)(long long)  const>(&SimTK::SystemQErrIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQErrIndex::operator!=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQErrIndex::operator!=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("!=", static_cast<bool (SimTK::SystemQErrIndex::*)(unsigned int)  const>(&SimTK::SystemQErrIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQErrIndex::operator!=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQErrIndex::operator!=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("!=", static_cast<bool (SimTK::SystemQErrIndex::*)(unsigned long)  const>(&SimTK::SystemQErrIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQErrIndex::operator!=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQErrIndex::operator!=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("!=", static_cast<bool (SimTK::SystemQErrIndex::*)(unsigned long long)  const>(&SimTK::SystemQErrIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQErrIndex::operator<(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQErrIndex::operator<(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("<", static_cast<bool (SimTK::SystemQErrIndex::*)(int)  const>(&SimTK::SystemQErrIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQErrIndex::operator<(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQErrIndex::operator<(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("<", static_cast<bool (SimTK::SystemQErrIndex::*)(short)  const>(&SimTK::SystemQErrIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQErrIndex::operator<(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQErrIndex::operator<(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("<", static_cast<bool (SimTK::SystemQErrIndex::*)(long)  const>(&SimTK::SystemQErrIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQErrIndex::operator<(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQErrIndex::operator<(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("<", static_cast<bool (SimTK::SystemQErrIndex::*)(long long)  const>(&SimTK::SystemQErrIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQErrIndex::operator<(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQErrIndex::operator<(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("<", static_cast<bool (SimTK::SystemQErrIndex::*)(unsigned int)  const>(&SimTK::SystemQErrIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQErrIndex::operator<(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQErrIndex::operator<(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("<", static_cast<bool (SimTK::SystemQErrIndex::*)(unsigned short)  const>(&SimTK::SystemQErrIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQErrIndex::operator<(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQErrIndex::operator<(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("<", static_cast<bool (SimTK::SystemQErrIndex::*)(unsigned long)  const>(&SimTK::SystemQErrIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQErrIndex::operator<(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQErrIndex::operator<(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("<", static_cast<bool (SimTK::SystemQErrIndex::*)(unsigned long long)  const>(&SimTK::SystemQErrIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQErrIndex::operator>=(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQErrIndex::operator>=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method(">=", static_cast<bool (SimTK::SystemQErrIndex::*)(int)  const>(&SimTK::SystemQErrIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQErrIndex::operator>=(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQErrIndex::operator>=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method(">=", static_cast<bool (SimTK::SystemQErrIndex::*)(short)  const>(&SimTK::SystemQErrIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQErrIndex::operator>=(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQErrIndex::operator>=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method(">=", static_cast<bool (SimTK::SystemQErrIndex::*)(long)  const>(&SimTK::SystemQErrIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQErrIndex::operator>=(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQErrIndex::operator>=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method(">=", static_cast<bool (SimTK::SystemQErrIndex::*)(long long)  const>(&SimTK::SystemQErrIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQErrIndex::operator>=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQErrIndex::operator>=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method(">=", static_cast<bool (SimTK::SystemQErrIndex::*)(unsigned int)  const>(&SimTK::SystemQErrIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQErrIndex::operator>=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQErrIndex::operator>=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method(">=", static_cast<bool (SimTK::SystemQErrIndex::*)(unsigned short)  const>(&SimTK::SystemQErrIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQErrIndex::operator>=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQErrIndex::operator>=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method(">=", static_cast<bool (SimTK::SystemQErrIndex::*)(unsigned long)  const>(&SimTK::SystemQErrIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQErrIndex::operator>=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQErrIndex::operator>=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method(">=", static_cast<bool (SimTK::SystemQErrIndex::*)(unsigned long long)  const>(&SimTK::SystemQErrIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQErrIndex::operator>(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQErrIndex::operator>(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method(">", static_cast<bool (SimTK::SystemQErrIndex::*)(int)  const>(&SimTK::SystemQErrIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQErrIndex::operator>(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQErrIndex::operator>(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method(">", static_cast<bool (SimTK::SystemQErrIndex::*)(short)  const>(&SimTK::SystemQErrIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQErrIndex::operator>(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQErrIndex::operator>(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method(">", static_cast<bool (SimTK::SystemQErrIndex::*)(long)  const>(&SimTK::SystemQErrIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQErrIndex::operator>(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQErrIndex::operator>(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method(">", static_cast<bool (SimTK::SystemQErrIndex::*)(long long)  const>(&SimTK::SystemQErrIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQErrIndex::operator>(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQErrIndex::operator>(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method(">", static_cast<bool (SimTK::SystemQErrIndex::*)(unsigned int)  const>(&SimTK::SystemQErrIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQErrIndex::operator>(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQErrIndex::operator>(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method(">", static_cast<bool (SimTK::SystemQErrIndex::*)(unsigned short)  const>(&SimTK::SystemQErrIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQErrIndex::operator>(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQErrIndex::operator>(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method(">", static_cast<bool (SimTK::SystemQErrIndex::*)(unsigned long)  const>(&SimTK::SystemQErrIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQErrIndex::operator>(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQErrIndex::operator>(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method(">", static_cast<bool (SimTK::SystemQErrIndex::*)(unsigned long long)  const>(&SimTK::SystemQErrIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQErrIndex::operator<=(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQErrIndex::operator<=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("<=", static_cast<bool (SimTK::SystemQErrIndex::*)(int)  const>(&SimTK::SystemQErrIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQErrIndex::operator<=(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQErrIndex::operator<=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("<=", static_cast<bool (SimTK::SystemQErrIndex::*)(short)  const>(&SimTK::SystemQErrIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQErrIndex::operator<=(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQErrIndex::operator<=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("<=", static_cast<bool (SimTK::SystemQErrIndex::*)(long)  const>(&SimTK::SystemQErrIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQErrIndex::operator<=(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQErrIndex::operator<=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("<=", static_cast<bool (SimTK::SystemQErrIndex::*)(long long)  const>(&SimTK::SystemQErrIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQErrIndex::operator<=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQErrIndex::operator<=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("<=", static_cast<bool (SimTK::SystemQErrIndex::*)(unsigned int)  const>(&SimTK::SystemQErrIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQErrIndex::operator<=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQErrIndex::operator<=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("<=", static_cast<bool (SimTK::SystemQErrIndex::*)(unsigned short)  const>(&SimTK::SystemQErrIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQErrIndex::operator<=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQErrIndex::operator<=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("<=", static_cast<bool (SimTK::SystemQErrIndex::*)(unsigned long)  const>(&SimTK::SystemQErrIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQErrIndex::operator<=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQErrIndex::operator<=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("<=", static_cast<bool (SimTK::SystemQErrIndex::*)(unsigned long long)  const>(&SimTK::SystemQErrIndex::operator<=));
  types.unset_override_module();

  DEBUG_MSG("Adding wrapper for const SimTK::SystemQErrIndex & SimTK::SystemQErrIndex::operator++() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::SystemQErrIndex & SimTK::SystemQErrIndex::operator++()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("inc!", static_cast<const SimTK::SystemQErrIndex & (SimTK::SystemQErrIndex::*)() >(&SimTK::SystemQErrIndex::operator++));

  DEBUG_MSG("Adding wrapper for SimTK::SystemQErrIndex SimTK::SystemQErrIndex::operator++(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemQErrIndex SimTK::SystemQErrIndex::operator++(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("inc!", static_cast<SimTK::SystemQErrIndex (SimTK::SystemQErrIndex::*)(int) >(&SimTK::SystemQErrIndex::operator++));

  DEBUG_MSG("Adding wrapper for const SimTK::SystemQErrIndex & SimTK::SystemQErrIndex::operator--() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::SystemQErrIndex & SimTK::SystemQErrIndex::operator--()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("dec!", static_cast<const SimTK::SystemQErrIndex & (SimTK::SystemQErrIndex::*)() >(&SimTK::SystemQErrIndex::operator--));

  DEBUG_MSG("Adding wrapper for SimTK::SystemQErrIndex SimTK::SystemQErrIndex::operator--(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemQErrIndex SimTK::SystemQErrIndex::operator--(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("dec!", static_cast<SimTK::SystemQErrIndex (SimTK::SystemQErrIndex::*)(int) >(&SimTK::SystemQErrIndex::operator--));

  DEBUG_MSG("Adding wrapper for SimTK::SystemQErrIndex SimTK::SystemQErrIndex::next() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemQErrIndex SimTK::SystemQErrIndex::next()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("next", static_cast<SimTK::SystemQErrIndex (SimTK::SystemQErrIndex::*)()  const>(&SimTK::SystemQErrIndex::next));

  DEBUG_MSG("Adding wrapper for SimTK::SystemQErrIndex SimTK::SystemQErrIndex::prev() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemQErrIndex SimTK::SystemQErrIndex::prev()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("prev", static_cast<SimTK::SystemQErrIndex (SimTK::SystemQErrIndex::*)()  const>(&SimTK::SystemQErrIndex::prev));

  DEBUG_MSG("Adding wrapper for SimTK::SystemQErrIndex & SimTK::SystemQErrIndex::operator+=(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemQErrIndex & SimTK::SystemQErrIndex::operator+=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("add!", static_cast<SimTK::SystemQErrIndex & (SimTK::SystemQErrIndex::*)(int) >(&SimTK::SystemQErrIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemQErrIndex & SimTK::SystemQErrIndex::operator-=(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemQErrIndex & SimTK::SystemQErrIndex::operator-=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("sub!", static_cast<SimTK::SystemQErrIndex & (SimTK::SystemQErrIndex::*)(int) >(&SimTK::SystemQErrIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemQErrIndex & SimTK::SystemQErrIndex::operator+=(short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemQErrIndex & SimTK::SystemQErrIndex::operator+=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("add!", static_cast<SimTK::SystemQErrIndex & (SimTK::SystemQErrIndex::*)(short) >(&SimTK::SystemQErrIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemQErrIndex & SimTK::SystemQErrIndex::operator-=(short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemQErrIndex & SimTK::SystemQErrIndex::operator-=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("sub!", static_cast<SimTK::SystemQErrIndex & (SimTK::SystemQErrIndex::*)(short) >(&SimTK::SystemQErrIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemQErrIndex & SimTK::SystemQErrIndex::operator+=(long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemQErrIndex & SimTK::SystemQErrIndex::operator+=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("add!", static_cast<SimTK::SystemQErrIndex & (SimTK::SystemQErrIndex::*)(long) >(&SimTK::SystemQErrIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemQErrIndex & SimTK::SystemQErrIndex::operator-=(long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemQErrIndex & SimTK::SystemQErrIndex::operator-=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("sub!", static_cast<SimTK::SystemQErrIndex & (SimTK::SystemQErrIndex::*)(long) >(&SimTK::SystemQErrIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemQErrIndex & SimTK::SystemQErrIndex::operator+=(long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemQErrIndex & SimTK::SystemQErrIndex::operator+=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("add!", static_cast<SimTK::SystemQErrIndex & (SimTK::SystemQErrIndex::*)(long long) >(&SimTK::SystemQErrIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemQErrIndex & SimTK::SystemQErrIndex::operator-=(long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemQErrIndex & SimTK::SystemQErrIndex::operator-=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("sub!", static_cast<SimTK::SystemQErrIndex & (SimTK::SystemQErrIndex::*)(long long) >(&SimTK::SystemQErrIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemQErrIndex & SimTK::SystemQErrIndex::operator+=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemQErrIndex & SimTK::SystemQErrIndex::operator+=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("add!", static_cast<SimTK::SystemQErrIndex & (SimTK::SystemQErrIndex::*)(unsigned int) >(&SimTK::SystemQErrIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemQErrIndex & SimTK::SystemQErrIndex::operator-=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemQErrIndex & SimTK::SystemQErrIndex::operator-=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("sub!", static_cast<SimTK::SystemQErrIndex & (SimTK::SystemQErrIndex::*)(unsigned int) >(&SimTK::SystemQErrIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemQErrIndex & SimTK::SystemQErrIndex::operator+=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemQErrIndex & SimTK::SystemQErrIndex::operator+=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("add!", static_cast<SimTK::SystemQErrIndex & (SimTK::SystemQErrIndex::*)(unsigned short) >(&SimTK::SystemQErrIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemQErrIndex & SimTK::SystemQErrIndex::operator-=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemQErrIndex & SimTK::SystemQErrIndex::operator-=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("sub!", static_cast<SimTK::SystemQErrIndex & (SimTK::SystemQErrIndex::*)(unsigned short) >(&SimTK::SystemQErrIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemQErrIndex & SimTK::SystemQErrIndex::operator+=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemQErrIndex & SimTK::SystemQErrIndex::operator+=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("add!", static_cast<SimTK::SystemQErrIndex & (SimTK::SystemQErrIndex::*)(unsigned long) >(&SimTK::SystemQErrIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemQErrIndex & SimTK::SystemQErrIndex::operator-=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemQErrIndex & SimTK::SystemQErrIndex::operator-=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("sub!", static_cast<SimTK::SystemQErrIndex & (SimTK::SystemQErrIndex::*)(unsigned long) >(&SimTK::SystemQErrIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemQErrIndex & SimTK::SystemQErrIndex::operator+=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemQErrIndex & SimTK::SystemQErrIndex::operator+=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("add!", static_cast<SimTK::SystemQErrIndex & (SimTK::SystemQErrIndex::*)(unsigned long long) >(&SimTK::SystemQErrIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemQErrIndex & SimTK::SystemQErrIndex::operator-=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemQErrIndex & SimTK::SystemQErrIndex::operator-=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("sub!", static_cast<SimTK::SystemQErrIndex & (SimTK::SystemQErrIndex::*)(unsigned long long) >(&SimTK::SystemQErrIndex::operator-=));

  DEBUG_MSG("Adding wrapper for const SimTK::SystemQErrIndex & SimTK::SystemQErrIndex::Invalid() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::SystemQErrIndex & SimTK::SystemQErrIndex::Invalid()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("SimTK!SystemQErrIndex!Invalid", static_cast<const SimTK::SystemQErrIndex & (*)() >(&SimTK::SystemQErrIndex::Invalid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQErrIndex::isValid(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQErrIndex::isValid(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("SimTK!SystemQErrIndex!isValid", static_cast<bool (*)(int) >(&SimTK::SystemQErrIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQErrIndex::isValid(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQErrIndex::isValid(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("SimTK!SystemQErrIndex!isValid", static_cast<bool (*)(short) >(&SimTK::SystemQErrIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQErrIndex::isValid(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQErrIndex::isValid(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("SimTK!SystemQErrIndex!isValid", static_cast<bool (*)(long) >(&SimTK::SystemQErrIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQErrIndex::isValid(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQErrIndex::isValid(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("SimTK!SystemQErrIndex!isValid", static_cast<bool (*)(long long) >(&SimTK::SystemQErrIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQErrIndex::isValid(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQErrIndex::isValid(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("SimTK!SystemQErrIndex!isValid", static_cast<bool (*)(unsigned int) >(&SimTK::SystemQErrIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQErrIndex::isValid(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQErrIndex::isValid(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("SimTK!SystemQErrIndex!isValid", static_cast<bool (*)(unsigned short) >(&SimTK::SystemQErrIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQErrIndex::isValid(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQErrIndex::isValid(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("SimTK!SystemQErrIndex!isValid", static_cast<bool (*)(unsigned long) >(&SimTK::SystemQErrIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQErrIndex::isValid(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQErrIndex::isValid(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("SimTK!SystemQErrIndex!isValid", static_cast<bool (*)(unsigned long long) >(&SimTK::SystemQErrIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQErrIndex::isValidExtended(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQErrIndex::isValidExtended(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("SimTK!SystemQErrIndex!isValidExtended", static_cast<bool (*)(int) >(&SimTK::SystemQErrIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQErrIndex::isValidExtended(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQErrIndex::isValidExtended(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("SimTK!SystemQErrIndex!isValidExtended", static_cast<bool (*)(short) >(&SimTK::SystemQErrIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQErrIndex::isValidExtended(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQErrIndex::isValidExtended(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("SimTK!SystemQErrIndex!isValidExtended", static_cast<bool (*)(long) >(&SimTK::SystemQErrIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemQErrIndex::isValidExtended(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemQErrIndex::isValidExtended(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("SimTK!SystemQErrIndex!isValidExtended", static_cast<bool (*)(long long) >(&SimTK::SystemQErrIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for SimTK::SystemQErrIndex::size_type SimTK::SystemQErrIndex::max_size() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemQErrIndex::size_type SimTK::SystemQErrIndex::max_size()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  t26.method("SimTK!SystemQErrIndex!max_size", static_cast<SimTK::SystemQErrIndex::size_type (*)() >(&SimTK::SystemQErrIndex::max_size));

  /* End of SimTK::SystemQErrIndex class method wrappers
   **********************************************************************/


  /**********************************************************************/
  /* Wrappers for the methods of class SimTK::QErrIndex
   */


  DEBUG_MSG("Adding wrapper for void SimTK::QErrIndex::QErrIndex(int) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:32
  t27.constructor<int>();


  DEBUG_MSG("Adding wrapper for void SimTK::QErrIndex::QErrIndex(long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:32
  t27.constructor<long>();


  DEBUG_MSG("Adding wrapper for void SimTK::QErrIndex::QErrIndex(long long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:32
  t27.constructor<long long>();


  DEBUG_MSG("Adding wrapper for void SimTK::QErrIndex::QErrIndex(unsigned int) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:32
  t27.constructor<unsigned int>();


  DEBUG_MSG("Adding wrapper for void SimTK::QErrIndex::QErrIndex(unsigned long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:32
  t27.constructor<unsigned long>();


  DEBUG_MSG("Adding wrapper for void SimTK::QErrIndex::QErrIndex(unsigned long long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:32
  t27.constructor<unsigned long long>();

  DEBUG_MSG("Adding wrapper for bool SimTK::QErrIndex::isValid() (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QErrIndex::isValid()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("isValid", static_cast<bool (SimTK::QErrIndex::*)()  const>(&SimTK::QErrIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::QErrIndex::isValidExtended() (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QErrIndex::isValidExtended()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("isValidExtended", static_cast<bool (SimTK::QErrIndex::*)()  const>(&SimTK::QErrIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for void SimTK::QErrIndex::invalidate() (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::QErrIndex::invalidate()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("invalidate", static_cast<void (SimTK::QErrIndex::*)() >(&SimTK::QErrIndex::invalidate));

  DEBUG_MSG("Adding wrapper for void SimTK::QErrIndex::clear() (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::QErrIndex::clear()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("clear", static_cast<void (SimTK::QErrIndex::*)() >(&SimTK::QErrIndex::clear));
  types.set_override_module(jl_base_module);

  DEBUG_MSG("Adding wrapper for bool SimTK::QErrIndex::operator==(const SimTK::QErrIndex &) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QErrIndex::operator==(const SimTK::QErrIndex &)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("==", static_cast<bool (SimTK::QErrIndex::*)(const SimTK::QErrIndex &)  const>(&SimTK::QErrIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::QErrIndex::operator==(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QErrIndex::operator==(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("==", static_cast<bool (SimTK::QErrIndex::*)(int)  const>(&SimTK::QErrIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::QErrIndex::operator==(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QErrIndex::operator==(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("==", static_cast<bool (SimTK::QErrIndex::*)(short)  const>(&SimTK::QErrIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::QErrIndex::operator==(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QErrIndex::operator==(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("==", static_cast<bool (SimTK::QErrIndex::*)(long)  const>(&SimTK::QErrIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::QErrIndex::operator==(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QErrIndex::operator==(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("==", static_cast<bool (SimTK::QErrIndex::*)(long long)  const>(&SimTK::QErrIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::QErrIndex::operator==(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QErrIndex::operator==(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("==", static_cast<bool (SimTK::QErrIndex::*)(unsigned int)  const>(&SimTK::QErrIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::QErrIndex::operator==(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QErrIndex::operator==(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("==", static_cast<bool (SimTK::QErrIndex::*)(unsigned short)  const>(&SimTK::QErrIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::QErrIndex::operator==(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QErrIndex::operator==(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("==", static_cast<bool (SimTK::QErrIndex::*)(unsigned long)  const>(&SimTK::QErrIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::QErrIndex::operator==(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QErrIndex::operator==(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("==", static_cast<bool (SimTK::QErrIndex::*)(unsigned long long)  const>(&SimTK::QErrIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::QErrIndex::operator!=(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QErrIndex::operator!=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("!=", static_cast<bool (SimTK::QErrIndex::*)(int)  const>(&SimTK::QErrIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::QErrIndex::operator!=(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QErrIndex::operator!=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("!=", static_cast<bool (SimTK::QErrIndex::*)(short)  const>(&SimTK::QErrIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::QErrIndex::operator!=(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QErrIndex::operator!=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("!=", static_cast<bool (SimTK::QErrIndex::*)(long)  const>(&SimTK::QErrIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::QErrIndex::operator!=(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QErrIndex::operator!=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("!=", static_cast<bool (SimTK::QErrIndex::*)(long long)  const>(&SimTK::QErrIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::QErrIndex::operator!=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QErrIndex::operator!=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("!=", static_cast<bool (SimTK::QErrIndex::*)(unsigned int)  const>(&SimTK::QErrIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::QErrIndex::operator!=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QErrIndex::operator!=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("!=", static_cast<bool (SimTK::QErrIndex::*)(unsigned long)  const>(&SimTK::QErrIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::QErrIndex::operator!=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QErrIndex::operator!=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("!=", static_cast<bool (SimTK::QErrIndex::*)(unsigned long long)  const>(&SimTK::QErrIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::QErrIndex::operator<(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QErrIndex::operator<(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("<", static_cast<bool (SimTK::QErrIndex::*)(int)  const>(&SimTK::QErrIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::QErrIndex::operator<(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QErrIndex::operator<(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("<", static_cast<bool (SimTK::QErrIndex::*)(short)  const>(&SimTK::QErrIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::QErrIndex::operator<(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QErrIndex::operator<(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("<", static_cast<bool (SimTK::QErrIndex::*)(long)  const>(&SimTK::QErrIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::QErrIndex::operator<(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QErrIndex::operator<(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("<", static_cast<bool (SimTK::QErrIndex::*)(long long)  const>(&SimTK::QErrIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::QErrIndex::operator<(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QErrIndex::operator<(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("<", static_cast<bool (SimTK::QErrIndex::*)(unsigned int)  const>(&SimTK::QErrIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::QErrIndex::operator<(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QErrIndex::operator<(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("<", static_cast<bool (SimTK::QErrIndex::*)(unsigned short)  const>(&SimTK::QErrIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::QErrIndex::operator<(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QErrIndex::operator<(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("<", static_cast<bool (SimTK::QErrIndex::*)(unsigned long)  const>(&SimTK::QErrIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::QErrIndex::operator<(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QErrIndex::operator<(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("<", static_cast<bool (SimTK::QErrIndex::*)(unsigned long long)  const>(&SimTK::QErrIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::QErrIndex::operator>=(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QErrIndex::operator>=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method(">=", static_cast<bool (SimTK::QErrIndex::*)(int)  const>(&SimTK::QErrIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::QErrIndex::operator>=(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QErrIndex::operator>=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method(">=", static_cast<bool (SimTK::QErrIndex::*)(short)  const>(&SimTK::QErrIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::QErrIndex::operator>=(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QErrIndex::operator>=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method(">=", static_cast<bool (SimTK::QErrIndex::*)(long)  const>(&SimTK::QErrIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::QErrIndex::operator>=(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QErrIndex::operator>=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method(">=", static_cast<bool (SimTK::QErrIndex::*)(long long)  const>(&SimTK::QErrIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::QErrIndex::operator>=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QErrIndex::operator>=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method(">=", static_cast<bool (SimTK::QErrIndex::*)(unsigned int)  const>(&SimTK::QErrIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::QErrIndex::operator>=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QErrIndex::operator>=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method(">=", static_cast<bool (SimTK::QErrIndex::*)(unsigned short)  const>(&SimTK::QErrIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::QErrIndex::operator>=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QErrIndex::operator>=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method(">=", static_cast<bool (SimTK::QErrIndex::*)(unsigned long)  const>(&SimTK::QErrIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::QErrIndex::operator>=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QErrIndex::operator>=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method(">=", static_cast<bool (SimTK::QErrIndex::*)(unsigned long long)  const>(&SimTK::QErrIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::QErrIndex::operator>(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QErrIndex::operator>(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method(">", static_cast<bool (SimTK::QErrIndex::*)(int)  const>(&SimTK::QErrIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::QErrIndex::operator>(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QErrIndex::operator>(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method(">", static_cast<bool (SimTK::QErrIndex::*)(short)  const>(&SimTK::QErrIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::QErrIndex::operator>(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QErrIndex::operator>(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method(">", static_cast<bool (SimTK::QErrIndex::*)(long)  const>(&SimTK::QErrIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::QErrIndex::operator>(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QErrIndex::operator>(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method(">", static_cast<bool (SimTK::QErrIndex::*)(long long)  const>(&SimTK::QErrIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::QErrIndex::operator>(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QErrIndex::operator>(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method(">", static_cast<bool (SimTK::QErrIndex::*)(unsigned int)  const>(&SimTK::QErrIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::QErrIndex::operator>(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QErrIndex::operator>(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method(">", static_cast<bool (SimTK::QErrIndex::*)(unsigned short)  const>(&SimTK::QErrIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::QErrIndex::operator>(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QErrIndex::operator>(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method(">", static_cast<bool (SimTK::QErrIndex::*)(unsigned long)  const>(&SimTK::QErrIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::QErrIndex::operator>(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QErrIndex::operator>(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method(">", static_cast<bool (SimTK::QErrIndex::*)(unsigned long long)  const>(&SimTK::QErrIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::QErrIndex::operator<=(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QErrIndex::operator<=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("<=", static_cast<bool (SimTK::QErrIndex::*)(int)  const>(&SimTK::QErrIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::QErrIndex::operator<=(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QErrIndex::operator<=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("<=", static_cast<bool (SimTK::QErrIndex::*)(short)  const>(&SimTK::QErrIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::QErrIndex::operator<=(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QErrIndex::operator<=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("<=", static_cast<bool (SimTK::QErrIndex::*)(long)  const>(&SimTK::QErrIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::QErrIndex::operator<=(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QErrIndex::operator<=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("<=", static_cast<bool (SimTK::QErrIndex::*)(long long)  const>(&SimTK::QErrIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::QErrIndex::operator<=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QErrIndex::operator<=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("<=", static_cast<bool (SimTK::QErrIndex::*)(unsigned int)  const>(&SimTK::QErrIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::QErrIndex::operator<=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QErrIndex::operator<=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("<=", static_cast<bool (SimTK::QErrIndex::*)(unsigned short)  const>(&SimTK::QErrIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::QErrIndex::operator<=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QErrIndex::operator<=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("<=", static_cast<bool (SimTK::QErrIndex::*)(unsigned long)  const>(&SimTK::QErrIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::QErrIndex::operator<=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QErrIndex::operator<=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("<=", static_cast<bool (SimTK::QErrIndex::*)(unsigned long long)  const>(&SimTK::QErrIndex::operator<=));
  types.unset_override_module();

  DEBUG_MSG("Adding wrapper for const SimTK::QErrIndex & SimTK::QErrIndex::operator++() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::QErrIndex & SimTK::QErrIndex::operator++()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("inc!", static_cast<const SimTK::QErrIndex & (SimTK::QErrIndex::*)() >(&SimTK::QErrIndex::operator++));

  DEBUG_MSG("Adding wrapper for SimTK::QErrIndex SimTK::QErrIndex::operator++(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::QErrIndex SimTK::QErrIndex::operator++(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("inc!", static_cast<SimTK::QErrIndex (SimTK::QErrIndex::*)(int) >(&SimTK::QErrIndex::operator++));

  DEBUG_MSG("Adding wrapper for const SimTK::QErrIndex & SimTK::QErrIndex::operator--() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::QErrIndex & SimTK::QErrIndex::operator--()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("dec!", static_cast<const SimTK::QErrIndex & (SimTK::QErrIndex::*)() >(&SimTK::QErrIndex::operator--));

  DEBUG_MSG("Adding wrapper for SimTK::QErrIndex SimTK::QErrIndex::operator--(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::QErrIndex SimTK::QErrIndex::operator--(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("dec!", static_cast<SimTK::QErrIndex (SimTK::QErrIndex::*)(int) >(&SimTK::QErrIndex::operator--));

  DEBUG_MSG("Adding wrapper for SimTK::QErrIndex SimTK::QErrIndex::next() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::QErrIndex SimTK::QErrIndex::next()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("next", static_cast<SimTK::QErrIndex (SimTK::QErrIndex::*)()  const>(&SimTK::QErrIndex::next));

  DEBUG_MSG("Adding wrapper for SimTK::QErrIndex SimTK::QErrIndex::prev() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::QErrIndex SimTK::QErrIndex::prev()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("prev", static_cast<SimTK::QErrIndex (SimTK::QErrIndex::*)()  const>(&SimTK::QErrIndex::prev));

  DEBUG_MSG("Adding wrapper for SimTK::QErrIndex & SimTK::QErrIndex::operator+=(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::QErrIndex & SimTK::QErrIndex::operator+=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("add!", static_cast<SimTK::QErrIndex & (SimTK::QErrIndex::*)(int) >(&SimTK::QErrIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::QErrIndex & SimTK::QErrIndex::operator-=(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::QErrIndex & SimTK::QErrIndex::operator-=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("sub!", static_cast<SimTK::QErrIndex & (SimTK::QErrIndex::*)(int) >(&SimTK::QErrIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::QErrIndex & SimTK::QErrIndex::operator+=(short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::QErrIndex & SimTK::QErrIndex::operator+=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("add!", static_cast<SimTK::QErrIndex & (SimTK::QErrIndex::*)(short) >(&SimTK::QErrIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::QErrIndex & SimTK::QErrIndex::operator-=(short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::QErrIndex & SimTK::QErrIndex::operator-=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("sub!", static_cast<SimTK::QErrIndex & (SimTK::QErrIndex::*)(short) >(&SimTK::QErrIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::QErrIndex & SimTK::QErrIndex::operator+=(long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::QErrIndex & SimTK::QErrIndex::operator+=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("add!", static_cast<SimTK::QErrIndex & (SimTK::QErrIndex::*)(long) >(&SimTK::QErrIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::QErrIndex & SimTK::QErrIndex::operator-=(long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::QErrIndex & SimTK::QErrIndex::operator-=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("sub!", static_cast<SimTK::QErrIndex & (SimTK::QErrIndex::*)(long) >(&SimTK::QErrIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::QErrIndex & SimTK::QErrIndex::operator+=(long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::QErrIndex & SimTK::QErrIndex::operator+=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("add!", static_cast<SimTK::QErrIndex & (SimTK::QErrIndex::*)(long long) >(&SimTK::QErrIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::QErrIndex & SimTK::QErrIndex::operator-=(long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::QErrIndex & SimTK::QErrIndex::operator-=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("sub!", static_cast<SimTK::QErrIndex & (SimTK::QErrIndex::*)(long long) >(&SimTK::QErrIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::QErrIndex & SimTK::QErrIndex::operator+=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::QErrIndex & SimTK::QErrIndex::operator+=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("add!", static_cast<SimTK::QErrIndex & (SimTK::QErrIndex::*)(unsigned int) >(&SimTK::QErrIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::QErrIndex & SimTK::QErrIndex::operator-=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::QErrIndex & SimTK::QErrIndex::operator-=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("sub!", static_cast<SimTK::QErrIndex & (SimTK::QErrIndex::*)(unsigned int) >(&SimTK::QErrIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::QErrIndex & SimTK::QErrIndex::operator+=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::QErrIndex & SimTK::QErrIndex::operator+=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("add!", static_cast<SimTK::QErrIndex & (SimTK::QErrIndex::*)(unsigned short) >(&SimTK::QErrIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::QErrIndex & SimTK::QErrIndex::operator-=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::QErrIndex & SimTK::QErrIndex::operator-=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("sub!", static_cast<SimTK::QErrIndex & (SimTK::QErrIndex::*)(unsigned short) >(&SimTK::QErrIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::QErrIndex & SimTK::QErrIndex::operator+=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::QErrIndex & SimTK::QErrIndex::operator+=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("add!", static_cast<SimTK::QErrIndex & (SimTK::QErrIndex::*)(unsigned long) >(&SimTK::QErrIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::QErrIndex & SimTK::QErrIndex::operator-=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::QErrIndex & SimTK::QErrIndex::operator-=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("sub!", static_cast<SimTK::QErrIndex & (SimTK::QErrIndex::*)(unsigned long) >(&SimTK::QErrIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::QErrIndex & SimTK::QErrIndex::operator+=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::QErrIndex & SimTK::QErrIndex::operator+=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("add!", static_cast<SimTK::QErrIndex & (SimTK::QErrIndex::*)(unsigned long long) >(&SimTK::QErrIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::QErrIndex & SimTK::QErrIndex::operator-=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::QErrIndex & SimTK::QErrIndex::operator-=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("sub!", static_cast<SimTK::QErrIndex & (SimTK::QErrIndex::*)(unsigned long long) >(&SimTK::QErrIndex::operator-=));

  DEBUG_MSG("Adding wrapper for const SimTK::QErrIndex & SimTK::QErrIndex::Invalid() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::QErrIndex & SimTK::QErrIndex::Invalid()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("SimTK!QErrIndex!Invalid", static_cast<const SimTK::QErrIndex & (*)() >(&SimTK::QErrIndex::Invalid));

  DEBUG_MSG("Adding wrapper for bool SimTK::QErrIndex::isValid(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QErrIndex::isValid(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("SimTK!QErrIndex!isValid", static_cast<bool (*)(int) >(&SimTK::QErrIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::QErrIndex::isValid(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QErrIndex::isValid(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("SimTK!QErrIndex!isValid", static_cast<bool (*)(short) >(&SimTK::QErrIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::QErrIndex::isValid(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QErrIndex::isValid(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("SimTK!QErrIndex!isValid", static_cast<bool (*)(long) >(&SimTK::QErrIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::QErrIndex::isValid(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QErrIndex::isValid(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("SimTK!QErrIndex!isValid", static_cast<bool (*)(long long) >(&SimTK::QErrIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::QErrIndex::isValid(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QErrIndex::isValid(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("SimTK!QErrIndex!isValid", static_cast<bool (*)(unsigned int) >(&SimTK::QErrIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::QErrIndex::isValid(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QErrIndex::isValid(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("SimTK!QErrIndex!isValid", static_cast<bool (*)(unsigned short) >(&SimTK::QErrIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::QErrIndex::isValid(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QErrIndex::isValid(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("SimTK!QErrIndex!isValid", static_cast<bool (*)(unsigned long) >(&SimTK::QErrIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::QErrIndex::isValid(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QErrIndex::isValid(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("SimTK!QErrIndex!isValid", static_cast<bool (*)(unsigned long long) >(&SimTK::QErrIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::QErrIndex::isValidExtended(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QErrIndex::isValidExtended(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("SimTK!QErrIndex!isValidExtended", static_cast<bool (*)(int) >(&SimTK::QErrIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for bool SimTK::QErrIndex::isValidExtended(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QErrIndex::isValidExtended(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("SimTK!QErrIndex!isValidExtended", static_cast<bool (*)(short) >(&SimTK::QErrIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for bool SimTK::QErrIndex::isValidExtended(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QErrIndex::isValidExtended(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("SimTK!QErrIndex!isValidExtended", static_cast<bool (*)(long) >(&SimTK::QErrIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for bool SimTK::QErrIndex::isValidExtended(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::QErrIndex::isValidExtended(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("SimTK!QErrIndex!isValidExtended", static_cast<bool (*)(long long) >(&SimTK::QErrIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for SimTK::QErrIndex::size_type SimTK::QErrIndex::max_size() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::QErrIndex::size_type SimTK::QErrIndex::max_size()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  t27.method("SimTK!QErrIndex!max_size", static_cast<SimTK::QErrIndex::size_type (*)() >(&SimTK::QErrIndex::max_size));

  /* End of SimTK::QErrIndex class method wrappers
   **********************************************************************/


  /**********************************************************************/
  /* Wrappers for the methods of class SimTK::SystemUErrIndex
   */


  DEBUG_MSG("Adding wrapper for void SimTK::SystemUErrIndex::SystemUErrIndex(int) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:32
  t28.constructor<int>();


  DEBUG_MSG("Adding wrapper for void SimTK::SystemUErrIndex::SystemUErrIndex(long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:32
  t28.constructor<long>();


  DEBUG_MSG("Adding wrapper for void SimTK::SystemUErrIndex::SystemUErrIndex(long long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:32
  t28.constructor<long long>();


  DEBUG_MSG("Adding wrapper for void SimTK::SystemUErrIndex::SystemUErrIndex(unsigned int) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:32
  t28.constructor<unsigned int>();


  DEBUG_MSG("Adding wrapper for void SimTK::SystemUErrIndex::SystemUErrIndex(unsigned long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:32
  t28.constructor<unsigned long>();


  DEBUG_MSG("Adding wrapper for void SimTK::SystemUErrIndex::SystemUErrIndex(unsigned long long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:32
  t28.constructor<unsigned long long>();

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUErrIndex::isValid() (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUErrIndex::isValid()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("isValid", static_cast<bool (SimTK::SystemUErrIndex::*)()  const>(&SimTK::SystemUErrIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUErrIndex::isValidExtended() (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUErrIndex::isValidExtended()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("isValidExtended", static_cast<bool (SimTK::SystemUErrIndex::*)()  const>(&SimTK::SystemUErrIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for void SimTK::SystemUErrIndex::invalidate() (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::SystemUErrIndex::invalidate()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("invalidate", static_cast<void (SimTK::SystemUErrIndex::*)() >(&SimTK::SystemUErrIndex::invalidate));

  DEBUG_MSG("Adding wrapper for void SimTK::SystemUErrIndex::clear() (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::SystemUErrIndex::clear()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("clear", static_cast<void (SimTK::SystemUErrIndex::*)() >(&SimTK::SystemUErrIndex::clear));
  types.set_override_module(jl_base_module);

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUErrIndex::operator==(const SimTK::SystemUErrIndex &) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUErrIndex::operator==(const SimTK::SystemUErrIndex &)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("==", static_cast<bool (SimTK::SystemUErrIndex::*)(const SimTK::SystemUErrIndex &)  const>(&SimTK::SystemUErrIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUErrIndex::operator==(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUErrIndex::operator==(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("==", static_cast<bool (SimTK::SystemUErrIndex::*)(int)  const>(&SimTK::SystemUErrIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUErrIndex::operator==(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUErrIndex::operator==(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("==", static_cast<bool (SimTK::SystemUErrIndex::*)(short)  const>(&SimTK::SystemUErrIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUErrIndex::operator==(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUErrIndex::operator==(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("==", static_cast<bool (SimTK::SystemUErrIndex::*)(long)  const>(&SimTK::SystemUErrIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUErrIndex::operator==(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUErrIndex::operator==(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("==", static_cast<bool (SimTK::SystemUErrIndex::*)(long long)  const>(&SimTK::SystemUErrIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUErrIndex::operator==(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUErrIndex::operator==(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("==", static_cast<bool (SimTK::SystemUErrIndex::*)(unsigned int)  const>(&SimTK::SystemUErrIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUErrIndex::operator==(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUErrIndex::operator==(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("==", static_cast<bool (SimTK::SystemUErrIndex::*)(unsigned short)  const>(&SimTK::SystemUErrIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUErrIndex::operator==(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUErrIndex::operator==(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("==", static_cast<bool (SimTK::SystemUErrIndex::*)(unsigned long)  const>(&SimTK::SystemUErrIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUErrIndex::operator==(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUErrIndex::operator==(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("==", static_cast<bool (SimTK::SystemUErrIndex::*)(unsigned long long)  const>(&SimTK::SystemUErrIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUErrIndex::operator!=(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUErrIndex::operator!=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("!=", static_cast<bool (SimTK::SystemUErrIndex::*)(int)  const>(&SimTK::SystemUErrIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUErrIndex::operator!=(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUErrIndex::operator!=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("!=", static_cast<bool (SimTK::SystemUErrIndex::*)(short)  const>(&SimTK::SystemUErrIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUErrIndex::operator!=(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUErrIndex::operator!=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("!=", static_cast<bool (SimTK::SystemUErrIndex::*)(long)  const>(&SimTK::SystemUErrIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUErrIndex::operator!=(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUErrIndex::operator!=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("!=", static_cast<bool (SimTK::SystemUErrIndex::*)(long long)  const>(&SimTK::SystemUErrIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUErrIndex::operator!=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUErrIndex::operator!=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("!=", static_cast<bool (SimTK::SystemUErrIndex::*)(unsigned int)  const>(&SimTK::SystemUErrIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUErrIndex::operator!=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUErrIndex::operator!=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("!=", static_cast<bool (SimTK::SystemUErrIndex::*)(unsigned long)  const>(&SimTK::SystemUErrIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUErrIndex::operator!=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUErrIndex::operator!=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("!=", static_cast<bool (SimTK::SystemUErrIndex::*)(unsigned long long)  const>(&SimTK::SystemUErrIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUErrIndex::operator<(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUErrIndex::operator<(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("<", static_cast<bool (SimTK::SystemUErrIndex::*)(int)  const>(&SimTK::SystemUErrIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUErrIndex::operator<(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUErrIndex::operator<(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("<", static_cast<bool (SimTK::SystemUErrIndex::*)(short)  const>(&SimTK::SystemUErrIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUErrIndex::operator<(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUErrIndex::operator<(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("<", static_cast<bool (SimTK::SystemUErrIndex::*)(long)  const>(&SimTK::SystemUErrIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUErrIndex::operator<(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUErrIndex::operator<(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("<", static_cast<bool (SimTK::SystemUErrIndex::*)(long long)  const>(&SimTK::SystemUErrIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUErrIndex::operator<(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUErrIndex::operator<(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("<", static_cast<bool (SimTK::SystemUErrIndex::*)(unsigned int)  const>(&SimTK::SystemUErrIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUErrIndex::operator<(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUErrIndex::operator<(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("<", static_cast<bool (SimTK::SystemUErrIndex::*)(unsigned short)  const>(&SimTK::SystemUErrIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUErrIndex::operator<(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUErrIndex::operator<(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("<", static_cast<bool (SimTK::SystemUErrIndex::*)(unsigned long)  const>(&SimTK::SystemUErrIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUErrIndex::operator<(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUErrIndex::operator<(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("<", static_cast<bool (SimTK::SystemUErrIndex::*)(unsigned long long)  const>(&SimTK::SystemUErrIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUErrIndex::operator>=(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUErrIndex::operator>=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method(">=", static_cast<bool (SimTK::SystemUErrIndex::*)(int)  const>(&SimTK::SystemUErrIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUErrIndex::operator>=(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUErrIndex::operator>=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method(">=", static_cast<bool (SimTK::SystemUErrIndex::*)(short)  const>(&SimTK::SystemUErrIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUErrIndex::operator>=(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUErrIndex::operator>=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method(">=", static_cast<bool (SimTK::SystemUErrIndex::*)(long)  const>(&SimTK::SystemUErrIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUErrIndex::operator>=(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUErrIndex::operator>=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method(">=", static_cast<bool (SimTK::SystemUErrIndex::*)(long long)  const>(&SimTK::SystemUErrIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUErrIndex::operator>=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUErrIndex::operator>=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method(">=", static_cast<bool (SimTK::SystemUErrIndex::*)(unsigned int)  const>(&SimTK::SystemUErrIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUErrIndex::operator>=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUErrIndex::operator>=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method(">=", static_cast<bool (SimTK::SystemUErrIndex::*)(unsigned short)  const>(&SimTK::SystemUErrIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUErrIndex::operator>=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUErrIndex::operator>=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method(">=", static_cast<bool (SimTK::SystemUErrIndex::*)(unsigned long)  const>(&SimTK::SystemUErrIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUErrIndex::operator>=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUErrIndex::operator>=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method(">=", static_cast<bool (SimTK::SystemUErrIndex::*)(unsigned long long)  const>(&SimTK::SystemUErrIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUErrIndex::operator>(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUErrIndex::operator>(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method(">", static_cast<bool (SimTK::SystemUErrIndex::*)(int)  const>(&SimTK::SystemUErrIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUErrIndex::operator>(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUErrIndex::operator>(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method(">", static_cast<bool (SimTK::SystemUErrIndex::*)(short)  const>(&SimTK::SystemUErrIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUErrIndex::operator>(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUErrIndex::operator>(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method(">", static_cast<bool (SimTK::SystemUErrIndex::*)(long)  const>(&SimTK::SystemUErrIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUErrIndex::operator>(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUErrIndex::operator>(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method(">", static_cast<bool (SimTK::SystemUErrIndex::*)(long long)  const>(&SimTK::SystemUErrIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUErrIndex::operator>(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUErrIndex::operator>(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method(">", static_cast<bool (SimTK::SystemUErrIndex::*)(unsigned int)  const>(&SimTK::SystemUErrIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUErrIndex::operator>(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUErrIndex::operator>(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method(">", static_cast<bool (SimTK::SystemUErrIndex::*)(unsigned short)  const>(&SimTK::SystemUErrIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUErrIndex::operator>(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUErrIndex::operator>(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method(">", static_cast<bool (SimTK::SystemUErrIndex::*)(unsigned long)  const>(&SimTK::SystemUErrIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUErrIndex::operator>(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUErrIndex::operator>(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method(">", static_cast<bool (SimTK::SystemUErrIndex::*)(unsigned long long)  const>(&SimTK::SystemUErrIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUErrIndex::operator<=(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUErrIndex::operator<=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("<=", static_cast<bool (SimTK::SystemUErrIndex::*)(int)  const>(&SimTK::SystemUErrIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUErrIndex::operator<=(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUErrIndex::operator<=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("<=", static_cast<bool (SimTK::SystemUErrIndex::*)(short)  const>(&SimTK::SystemUErrIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUErrIndex::operator<=(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUErrIndex::operator<=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("<=", static_cast<bool (SimTK::SystemUErrIndex::*)(long)  const>(&SimTK::SystemUErrIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUErrIndex::operator<=(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUErrIndex::operator<=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("<=", static_cast<bool (SimTK::SystemUErrIndex::*)(long long)  const>(&SimTK::SystemUErrIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUErrIndex::operator<=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUErrIndex::operator<=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("<=", static_cast<bool (SimTK::SystemUErrIndex::*)(unsigned int)  const>(&SimTK::SystemUErrIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUErrIndex::operator<=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUErrIndex::operator<=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("<=", static_cast<bool (SimTK::SystemUErrIndex::*)(unsigned short)  const>(&SimTK::SystemUErrIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUErrIndex::operator<=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUErrIndex::operator<=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("<=", static_cast<bool (SimTK::SystemUErrIndex::*)(unsigned long)  const>(&SimTK::SystemUErrIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUErrIndex::operator<=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUErrIndex::operator<=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("<=", static_cast<bool (SimTK::SystemUErrIndex::*)(unsigned long long)  const>(&SimTK::SystemUErrIndex::operator<=));
  types.unset_override_module();

  DEBUG_MSG("Adding wrapper for const SimTK::SystemUErrIndex & SimTK::SystemUErrIndex::operator++() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::SystemUErrIndex & SimTK::SystemUErrIndex::operator++()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("inc!", static_cast<const SimTK::SystemUErrIndex & (SimTK::SystemUErrIndex::*)() >(&SimTK::SystemUErrIndex::operator++));

  DEBUG_MSG("Adding wrapper for SimTK::SystemUErrIndex SimTK::SystemUErrIndex::operator++(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemUErrIndex SimTK::SystemUErrIndex::operator++(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("inc!", static_cast<SimTK::SystemUErrIndex (SimTK::SystemUErrIndex::*)(int) >(&SimTK::SystemUErrIndex::operator++));

  DEBUG_MSG("Adding wrapper for const SimTK::SystemUErrIndex & SimTK::SystemUErrIndex::operator--() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::SystemUErrIndex & SimTK::SystemUErrIndex::operator--()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("dec!", static_cast<const SimTK::SystemUErrIndex & (SimTK::SystemUErrIndex::*)() >(&SimTK::SystemUErrIndex::operator--));

  DEBUG_MSG("Adding wrapper for SimTK::SystemUErrIndex SimTK::SystemUErrIndex::operator--(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemUErrIndex SimTK::SystemUErrIndex::operator--(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("dec!", static_cast<SimTK::SystemUErrIndex (SimTK::SystemUErrIndex::*)(int) >(&SimTK::SystemUErrIndex::operator--));

  DEBUG_MSG("Adding wrapper for SimTK::SystemUErrIndex SimTK::SystemUErrIndex::next() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemUErrIndex SimTK::SystemUErrIndex::next()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("next", static_cast<SimTK::SystemUErrIndex (SimTK::SystemUErrIndex::*)()  const>(&SimTK::SystemUErrIndex::next));

  DEBUG_MSG("Adding wrapper for SimTK::SystemUErrIndex SimTK::SystemUErrIndex::prev() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemUErrIndex SimTK::SystemUErrIndex::prev()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("prev", static_cast<SimTK::SystemUErrIndex (SimTK::SystemUErrIndex::*)()  const>(&SimTK::SystemUErrIndex::prev));

  DEBUG_MSG("Adding wrapper for SimTK::SystemUErrIndex & SimTK::SystemUErrIndex::operator+=(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemUErrIndex & SimTK::SystemUErrIndex::operator+=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("add!", static_cast<SimTK::SystemUErrIndex & (SimTK::SystemUErrIndex::*)(int) >(&SimTK::SystemUErrIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemUErrIndex & SimTK::SystemUErrIndex::operator-=(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemUErrIndex & SimTK::SystemUErrIndex::operator-=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("sub!", static_cast<SimTK::SystemUErrIndex & (SimTK::SystemUErrIndex::*)(int) >(&SimTK::SystemUErrIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemUErrIndex & SimTK::SystemUErrIndex::operator+=(short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemUErrIndex & SimTK::SystemUErrIndex::operator+=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("add!", static_cast<SimTK::SystemUErrIndex & (SimTK::SystemUErrIndex::*)(short) >(&SimTK::SystemUErrIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemUErrIndex & SimTK::SystemUErrIndex::operator-=(short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemUErrIndex & SimTK::SystemUErrIndex::operator-=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("sub!", static_cast<SimTK::SystemUErrIndex & (SimTK::SystemUErrIndex::*)(short) >(&SimTK::SystemUErrIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemUErrIndex & SimTK::SystemUErrIndex::operator+=(long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemUErrIndex & SimTK::SystemUErrIndex::operator+=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("add!", static_cast<SimTK::SystemUErrIndex & (SimTK::SystemUErrIndex::*)(long) >(&SimTK::SystemUErrIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemUErrIndex & SimTK::SystemUErrIndex::operator-=(long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemUErrIndex & SimTK::SystemUErrIndex::operator-=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("sub!", static_cast<SimTK::SystemUErrIndex & (SimTK::SystemUErrIndex::*)(long) >(&SimTK::SystemUErrIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemUErrIndex & SimTK::SystemUErrIndex::operator+=(long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemUErrIndex & SimTK::SystemUErrIndex::operator+=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("add!", static_cast<SimTK::SystemUErrIndex & (SimTK::SystemUErrIndex::*)(long long) >(&SimTK::SystemUErrIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemUErrIndex & SimTK::SystemUErrIndex::operator-=(long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemUErrIndex & SimTK::SystemUErrIndex::operator-=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("sub!", static_cast<SimTK::SystemUErrIndex & (SimTK::SystemUErrIndex::*)(long long) >(&SimTK::SystemUErrIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemUErrIndex & SimTK::SystemUErrIndex::operator+=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemUErrIndex & SimTK::SystemUErrIndex::operator+=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("add!", static_cast<SimTK::SystemUErrIndex & (SimTK::SystemUErrIndex::*)(unsigned int) >(&SimTK::SystemUErrIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemUErrIndex & SimTK::SystemUErrIndex::operator-=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemUErrIndex & SimTK::SystemUErrIndex::operator-=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("sub!", static_cast<SimTK::SystemUErrIndex & (SimTK::SystemUErrIndex::*)(unsigned int) >(&SimTK::SystemUErrIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemUErrIndex & SimTK::SystemUErrIndex::operator+=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemUErrIndex & SimTK::SystemUErrIndex::operator+=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("add!", static_cast<SimTK::SystemUErrIndex & (SimTK::SystemUErrIndex::*)(unsigned short) >(&SimTK::SystemUErrIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemUErrIndex & SimTK::SystemUErrIndex::operator-=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemUErrIndex & SimTK::SystemUErrIndex::operator-=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("sub!", static_cast<SimTK::SystemUErrIndex & (SimTK::SystemUErrIndex::*)(unsigned short) >(&SimTK::SystemUErrIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemUErrIndex & SimTK::SystemUErrIndex::operator+=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemUErrIndex & SimTK::SystemUErrIndex::operator+=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("add!", static_cast<SimTK::SystemUErrIndex & (SimTK::SystemUErrIndex::*)(unsigned long) >(&SimTK::SystemUErrIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemUErrIndex & SimTK::SystemUErrIndex::operator-=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemUErrIndex & SimTK::SystemUErrIndex::operator-=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("sub!", static_cast<SimTK::SystemUErrIndex & (SimTK::SystemUErrIndex::*)(unsigned long) >(&SimTK::SystemUErrIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemUErrIndex & SimTK::SystemUErrIndex::operator+=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemUErrIndex & SimTK::SystemUErrIndex::operator+=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("add!", static_cast<SimTK::SystemUErrIndex & (SimTK::SystemUErrIndex::*)(unsigned long long) >(&SimTK::SystemUErrIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemUErrIndex & SimTK::SystemUErrIndex::operator-=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemUErrIndex & SimTK::SystemUErrIndex::operator-=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("sub!", static_cast<SimTK::SystemUErrIndex & (SimTK::SystemUErrIndex::*)(unsigned long long) >(&SimTK::SystemUErrIndex::operator-=));

  DEBUG_MSG("Adding wrapper for const SimTK::SystemUErrIndex & SimTK::SystemUErrIndex::Invalid() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::SystemUErrIndex & SimTK::SystemUErrIndex::Invalid()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("SimTK!SystemUErrIndex!Invalid", static_cast<const SimTK::SystemUErrIndex & (*)() >(&SimTK::SystemUErrIndex::Invalid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUErrIndex::isValid(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUErrIndex::isValid(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("SimTK!SystemUErrIndex!isValid", static_cast<bool (*)(int) >(&SimTK::SystemUErrIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUErrIndex::isValid(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUErrIndex::isValid(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("SimTK!SystemUErrIndex!isValid", static_cast<bool (*)(short) >(&SimTK::SystemUErrIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUErrIndex::isValid(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUErrIndex::isValid(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("SimTK!SystemUErrIndex!isValid", static_cast<bool (*)(long) >(&SimTK::SystemUErrIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUErrIndex::isValid(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUErrIndex::isValid(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("SimTK!SystemUErrIndex!isValid", static_cast<bool (*)(long long) >(&SimTK::SystemUErrIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUErrIndex::isValid(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUErrIndex::isValid(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("SimTK!SystemUErrIndex!isValid", static_cast<bool (*)(unsigned int) >(&SimTK::SystemUErrIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUErrIndex::isValid(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUErrIndex::isValid(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("SimTK!SystemUErrIndex!isValid", static_cast<bool (*)(unsigned short) >(&SimTK::SystemUErrIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUErrIndex::isValid(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUErrIndex::isValid(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("SimTK!SystemUErrIndex!isValid", static_cast<bool (*)(unsigned long) >(&SimTK::SystemUErrIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUErrIndex::isValid(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUErrIndex::isValid(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("SimTK!SystemUErrIndex!isValid", static_cast<bool (*)(unsigned long long) >(&SimTK::SystemUErrIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUErrIndex::isValidExtended(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUErrIndex::isValidExtended(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("SimTK!SystemUErrIndex!isValidExtended", static_cast<bool (*)(int) >(&SimTK::SystemUErrIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUErrIndex::isValidExtended(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUErrIndex::isValidExtended(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("SimTK!SystemUErrIndex!isValidExtended", static_cast<bool (*)(short) >(&SimTK::SystemUErrIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUErrIndex::isValidExtended(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUErrIndex::isValidExtended(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("SimTK!SystemUErrIndex!isValidExtended", static_cast<bool (*)(long) >(&SimTK::SystemUErrIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUErrIndex::isValidExtended(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUErrIndex::isValidExtended(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("SimTK!SystemUErrIndex!isValidExtended", static_cast<bool (*)(long long) >(&SimTK::SystemUErrIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for SimTK::SystemUErrIndex::size_type SimTK::SystemUErrIndex::max_size() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemUErrIndex::size_type SimTK::SystemUErrIndex::max_size()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  t28.method("SimTK!SystemUErrIndex!max_size", static_cast<SimTK::SystemUErrIndex::size_type (*)() >(&SimTK::SystemUErrIndex::max_size));

  /* End of SimTK::SystemUErrIndex class method wrappers
   **********************************************************************/


  /**********************************************************************/
  /* Wrappers for the methods of class SimTK::UErrIndex
   */


  DEBUG_MSG("Adding wrapper for void SimTK::UErrIndex::UErrIndex(int) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:32
  t29.constructor<int>();


  DEBUG_MSG("Adding wrapper for void SimTK::UErrIndex::UErrIndex(long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:32
  t29.constructor<long>();


  DEBUG_MSG("Adding wrapper for void SimTK::UErrIndex::UErrIndex(long long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:32
  t29.constructor<long long>();


  DEBUG_MSG("Adding wrapper for void SimTK::UErrIndex::UErrIndex(unsigned int) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:32
  t29.constructor<unsigned int>();


  DEBUG_MSG("Adding wrapper for void SimTK::UErrIndex::UErrIndex(unsigned long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:32
  t29.constructor<unsigned long>();


  DEBUG_MSG("Adding wrapper for void SimTK::UErrIndex::UErrIndex(unsigned long long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:32
  t29.constructor<unsigned long long>();

  DEBUG_MSG("Adding wrapper for bool SimTK::UErrIndex::isValid() (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UErrIndex::isValid()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("isValid", static_cast<bool (SimTK::UErrIndex::*)()  const>(&SimTK::UErrIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::UErrIndex::isValidExtended() (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UErrIndex::isValidExtended()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("isValidExtended", static_cast<bool (SimTK::UErrIndex::*)()  const>(&SimTK::UErrIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for void SimTK::UErrIndex::invalidate() (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::UErrIndex::invalidate()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("invalidate", static_cast<void (SimTK::UErrIndex::*)() >(&SimTK::UErrIndex::invalidate));

  DEBUG_MSG("Adding wrapper for void SimTK::UErrIndex::clear() (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::UErrIndex::clear()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("clear", static_cast<void (SimTK::UErrIndex::*)() >(&SimTK::UErrIndex::clear));
  types.set_override_module(jl_base_module);

  DEBUG_MSG("Adding wrapper for bool SimTK::UErrIndex::operator==(const SimTK::UErrIndex &) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UErrIndex::operator==(const SimTK::UErrIndex &)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("==", static_cast<bool (SimTK::UErrIndex::*)(const SimTK::UErrIndex &)  const>(&SimTK::UErrIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::UErrIndex::operator==(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UErrIndex::operator==(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("==", static_cast<bool (SimTK::UErrIndex::*)(int)  const>(&SimTK::UErrIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::UErrIndex::operator==(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UErrIndex::operator==(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("==", static_cast<bool (SimTK::UErrIndex::*)(short)  const>(&SimTK::UErrIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::UErrIndex::operator==(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UErrIndex::operator==(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("==", static_cast<bool (SimTK::UErrIndex::*)(long)  const>(&SimTK::UErrIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::UErrIndex::operator==(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UErrIndex::operator==(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("==", static_cast<bool (SimTK::UErrIndex::*)(long long)  const>(&SimTK::UErrIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::UErrIndex::operator==(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UErrIndex::operator==(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("==", static_cast<bool (SimTK::UErrIndex::*)(unsigned int)  const>(&SimTK::UErrIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::UErrIndex::operator==(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UErrIndex::operator==(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("==", static_cast<bool (SimTK::UErrIndex::*)(unsigned short)  const>(&SimTK::UErrIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::UErrIndex::operator==(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UErrIndex::operator==(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("==", static_cast<bool (SimTK::UErrIndex::*)(unsigned long)  const>(&SimTK::UErrIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::UErrIndex::operator==(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UErrIndex::operator==(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("==", static_cast<bool (SimTK::UErrIndex::*)(unsigned long long)  const>(&SimTK::UErrIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::UErrIndex::operator!=(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UErrIndex::operator!=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("!=", static_cast<bool (SimTK::UErrIndex::*)(int)  const>(&SimTK::UErrIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::UErrIndex::operator!=(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UErrIndex::operator!=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("!=", static_cast<bool (SimTK::UErrIndex::*)(short)  const>(&SimTK::UErrIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::UErrIndex::operator!=(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UErrIndex::operator!=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("!=", static_cast<bool (SimTK::UErrIndex::*)(long)  const>(&SimTK::UErrIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::UErrIndex::operator!=(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UErrIndex::operator!=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("!=", static_cast<bool (SimTK::UErrIndex::*)(long long)  const>(&SimTK::UErrIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::UErrIndex::operator!=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UErrIndex::operator!=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("!=", static_cast<bool (SimTK::UErrIndex::*)(unsigned int)  const>(&SimTK::UErrIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::UErrIndex::operator!=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UErrIndex::operator!=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("!=", static_cast<bool (SimTK::UErrIndex::*)(unsigned long)  const>(&SimTK::UErrIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::UErrIndex::operator!=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UErrIndex::operator!=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("!=", static_cast<bool (SimTK::UErrIndex::*)(unsigned long long)  const>(&SimTK::UErrIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::UErrIndex::operator<(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UErrIndex::operator<(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("<", static_cast<bool (SimTK::UErrIndex::*)(int)  const>(&SimTK::UErrIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::UErrIndex::operator<(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UErrIndex::operator<(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("<", static_cast<bool (SimTK::UErrIndex::*)(short)  const>(&SimTK::UErrIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::UErrIndex::operator<(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UErrIndex::operator<(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("<", static_cast<bool (SimTK::UErrIndex::*)(long)  const>(&SimTK::UErrIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::UErrIndex::operator<(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UErrIndex::operator<(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("<", static_cast<bool (SimTK::UErrIndex::*)(long long)  const>(&SimTK::UErrIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::UErrIndex::operator<(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UErrIndex::operator<(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("<", static_cast<bool (SimTK::UErrIndex::*)(unsigned int)  const>(&SimTK::UErrIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::UErrIndex::operator<(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UErrIndex::operator<(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("<", static_cast<bool (SimTK::UErrIndex::*)(unsigned short)  const>(&SimTK::UErrIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::UErrIndex::operator<(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UErrIndex::operator<(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("<", static_cast<bool (SimTK::UErrIndex::*)(unsigned long)  const>(&SimTK::UErrIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::UErrIndex::operator<(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UErrIndex::operator<(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("<", static_cast<bool (SimTK::UErrIndex::*)(unsigned long long)  const>(&SimTK::UErrIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::UErrIndex::operator>=(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UErrIndex::operator>=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method(">=", static_cast<bool (SimTK::UErrIndex::*)(int)  const>(&SimTK::UErrIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::UErrIndex::operator>=(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UErrIndex::operator>=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method(">=", static_cast<bool (SimTK::UErrIndex::*)(short)  const>(&SimTK::UErrIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::UErrIndex::operator>=(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UErrIndex::operator>=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method(">=", static_cast<bool (SimTK::UErrIndex::*)(long)  const>(&SimTK::UErrIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::UErrIndex::operator>=(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UErrIndex::operator>=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method(">=", static_cast<bool (SimTK::UErrIndex::*)(long long)  const>(&SimTK::UErrIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::UErrIndex::operator>=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UErrIndex::operator>=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method(">=", static_cast<bool (SimTK::UErrIndex::*)(unsigned int)  const>(&SimTK::UErrIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::UErrIndex::operator>=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UErrIndex::operator>=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method(">=", static_cast<bool (SimTK::UErrIndex::*)(unsigned short)  const>(&SimTK::UErrIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::UErrIndex::operator>=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UErrIndex::operator>=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method(">=", static_cast<bool (SimTK::UErrIndex::*)(unsigned long)  const>(&SimTK::UErrIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::UErrIndex::operator>=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UErrIndex::operator>=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method(">=", static_cast<bool (SimTK::UErrIndex::*)(unsigned long long)  const>(&SimTK::UErrIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::UErrIndex::operator>(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UErrIndex::operator>(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method(">", static_cast<bool (SimTK::UErrIndex::*)(int)  const>(&SimTK::UErrIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::UErrIndex::operator>(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UErrIndex::operator>(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method(">", static_cast<bool (SimTK::UErrIndex::*)(short)  const>(&SimTK::UErrIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::UErrIndex::operator>(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UErrIndex::operator>(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method(">", static_cast<bool (SimTK::UErrIndex::*)(long)  const>(&SimTK::UErrIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::UErrIndex::operator>(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UErrIndex::operator>(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method(">", static_cast<bool (SimTK::UErrIndex::*)(long long)  const>(&SimTK::UErrIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::UErrIndex::operator>(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UErrIndex::operator>(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method(">", static_cast<bool (SimTK::UErrIndex::*)(unsigned int)  const>(&SimTK::UErrIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::UErrIndex::operator>(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UErrIndex::operator>(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method(">", static_cast<bool (SimTK::UErrIndex::*)(unsigned short)  const>(&SimTK::UErrIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::UErrIndex::operator>(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UErrIndex::operator>(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method(">", static_cast<bool (SimTK::UErrIndex::*)(unsigned long)  const>(&SimTK::UErrIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::UErrIndex::operator>(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UErrIndex::operator>(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method(">", static_cast<bool (SimTK::UErrIndex::*)(unsigned long long)  const>(&SimTK::UErrIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::UErrIndex::operator<=(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UErrIndex::operator<=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("<=", static_cast<bool (SimTK::UErrIndex::*)(int)  const>(&SimTK::UErrIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::UErrIndex::operator<=(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UErrIndex::operator<=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("<=", static_cast<bool (SimTK::UErrIndex::*)(short)  const>(&SimTK::UErrIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::UErrIndex::operator<=(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UErrIndex::operator<=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("<=", static_cast<bool (SimTK::UErrIndex::*)(long)  const>(&SimTK::UErrIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::UErrIndex::operator<=(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UErrIndex::operator<=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("<=", static_cast<bool (SimTK::UErrIndex::*)(long long)  const>(&SimTK::UErrIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::UErrIndex::operator<=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UErrIndex::operator<=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("<=", static_cast<bool (SimTK::UErrIndex::*)(unsigned int)  const>(&SimTK::UErrIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::UErrIndex::operator<=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UErrIndex::operator<=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("<=", static_cast<bool (SimTK::UErrIndex::*)(unsigned short)  const>(&SimTK::UErrIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::UErrIndex::operator<=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UErrIndex::operator<=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("<=", static_cast<bool (SimTK::UErrIndex::*)(unsigned long)  const>(&SimTK::UErrIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::UErrIndex::operator<=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UErrIndex::operator<=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("<=", static_cast<bool (SimTK::UErrIndex::*)(unsigned long long)  const>(&SimTK::UErrIndex::operator<=));
  types.unset_override_module();

  DEBUG_MSG("Adding wrapper for const SimTK::UErrIndex & SimTK::UErrIndex::operator++() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::UErrIndex & SimTK::UErrIndex::operator++()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("inc!", static_cast<const SimTK::UErrIndex & (SimTK::UErrIndex::*)() >(&SimTK::UErrIndex::operator++));

  DEBUG_MSG("Adding wrapper for SimTK::UErrIndex SimTK::UErrIndex::operator++(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::UErrIndex SimTK::UErrIndex::operator++(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("inc!", static_cast<SimTK::UErrIndex (SimTK::UErrIndex::*)(int) >(&SimTK::UErrIndex::operator++));

  DEBUG_MSG("Adding wrapper for const SimTK::UErrIndex & SimTK::UErrIndex::operator--() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::UErrIndex & SimTK::UErrIndex::operator--()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("dec!", static_cast<const SimTK::UErrIndex & (SimTK::UErrIndex::*)() >(&SimTK::UErrIndex::operator--));

  DEBUG_MSG("Adding wrapper for SimTK::UErrIndex SimTK::UErrIndex::operator--(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::UErrIndex SimTK::UErrIndex::operator--(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("dec!", static_cast<SimTK::UErrIndex (SimTK::UErrIndex::*)(int) >(&SimTK::UErrIndex::operator--));

  DEBUG_MSG("Adding wrapper for SimTK::UErrIndex SimTK::UErrIndex::next() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::UErrIndex SimTK::UErrIndex::next()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("next", static_cast<SimTK::UErrIndex (SimTK::UErrIndex::*)()  const>(&SimTK::UErrIndex::next));

  DEBUG_MSG("Adding wrapper for SimTK::UErrIndex SimTK::UErrIndex::prev() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::UErrIndex SimTK::UErrIndex::prev()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("prev", static_cast<SimTK::UErrIndex (SimTK::UErrIndex::*)()  const>(&SimTK::UErrIndex::prev));

  DEBUG_MSG("Adding wrapper for SimTK::UErrIndex & SimTK::UErrIndex::operator+=(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::UErrIndex & SimTK::UErrIndex::operator+=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("add!", static_cast<SimTK::UErrIndex & (SimTK::UErrIndex::*)(int) >(&SimTK::UErrIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::UErrIndex & SimTK::UErrIndex::operator-=(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::UErrIndex & SimTK::UErrIndex::operator-=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("sub!", static_cast<SimTK::UErrIndex & (SimTK::UErrIndex::*)(int) >(&SimTK::UErrIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::UErrIndex & SimTK::UErrIndex::operator+=(short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::UErrIndex & SimTK::UErrIndex::operator+=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("add!", static_cast<SimTK::UErrIndex & (SimTK::UErrIndex::*)(short) >(&SimTK::UErrIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::UErrIndex & SimTK::UErrIndex::operator-=(short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::UErrIndex & SimTK::UErrIndex::operator-=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("sub!", static_cast<SimTK::UErrIndex & (SimTK::UErrIndex::*)(short) >(&SimTK::UErrIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::UErrIndex & SimTK::UErrIndex::operator+=(long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::UErrIndex & SimTK::UErrIndex::operator+=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("add!", static_cast<SimTK::UErrIndex & (SimTK::UErrIndex::*)(long) >(&SimTK::UErrIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::UErrIndex & SimTK::UErrIndex::operator-=(long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::UErrIndex & SimTK::UErrIndex::operator-=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("sub!", static_cast<SimTK::UErrIndex & (SimTK::UErrIndex::*)(long) >(&SimTK::UErrIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::UErrIndex & SimTK::UErrIndex::operator+=(long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::UErrIndex & SimTK::UErrIndex::operator+=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("add!", static_cast<SimTK::UErrIndex & (SimTK::UErrIndex::*)(long long) >(&SimTK::UErrIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::UErrIndex & SimTK::UErrIndex::operator-=(long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::UErrIndex & SimTK::UErrIndex::operator-=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("sub!", static_cast<SimTK::UErrIndex & (SimTK::UErrIndex::*)(long long) >(&SimTK::UErrIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::UErrIndex & SimTK::UErrIndex::operator+=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::UErrIndex & SimTK::UErrIndex::operator+=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("add!", static_cast<SimTK::UErrIndex & (SimTK::UErrIndex::*)(unsigned int) >(&SimTK::UErrIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::UErrIndex & SimTK::UErrIndex::operator-=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::UErrIndex & SimTK::UErrIndex::operator-=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("sub!", static_cast<SimTK::UErrIndex & (SimTK::UErrIndex::*)(unsigned int) >(&SimTK::UErrIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::UErrIndex & SimTK::UErrIndex::operator+=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::UErrIndex & SimTK::UErrIndex::operator+=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("add!", static_cast<SimTK::UErrIndex & (SimTK::UErrIndex::*)(unsigned short) >(&SimTK::UErrIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::UErrIndex & SimTK::UErrIndex::operator-=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::UErrIndex & SimTK::UErrIndex::operator-=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("sub!", static_cast<SimTK::UErrIndex & (SimTK::UErrIndex::*)(unsigned short) >(&SimTK::UErrIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::UErrIndex & SimTK::UErrIndex::operator+=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::UErrIndex & SimTK::UErrIndex::operator+=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("add!", static_cast<SimTK::UErrIndex & (SimTK::UErrIndex::*)(unsigned long) >(&SimTK::UErrIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::UErrIndex & SimTK::UErrIndex::operator-=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::UErrIndex & SimTK::UErrIndex::operator-=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("sub!", static_cast<SimTK::UErrIndex & (SimTK::UErrIndex::*)(unsigned long) >(&SimTK::UErrIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::UErrIndex & SimTK::UErrIndex::operator+=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::UErrIndex & SimTK::UErrIndex::operator+=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("add!", static_cast<SimTK::UErrIndex & (SimTK::UErrIndex::*)(unsigned long long) >(&SimTK::UErrIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::UErrIndex & SimTK::UErrIndex::operator-=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::UErrIndex & SimTK::UErrIndex::operator-=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("sub!", static_cast<SimTK::UErrIndex & (SimTK::UErrIndex::*)(unsigned long long) >(&SimTK::UErrIndex::operator-=));

  DEBUG_MSG("Adding wrapper for const SimTK::UErrIndex & SimTK::UErrIndex::Invalid() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::UErrIndex & SimTK::UErrIndex::Invalid()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("SimTK!UErrIndex!Invalid", static_cast<const SimTK::UErrIndex & (*)() >(&SimTK::UErrIndex::Invalid));

  DEBUG_MSG("Adding wrapper for bool SimTK::UErrIndex::isValid(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UErrIndex::isValid(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("SimTK!UErrIndex!isValid", static_cast<bool (*)(int) >(&SimTK::UErrIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::UErrIndex::isValid(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UErrIndex::isValid(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("SimTK!UErrIndex!isValid", static_cast<bool (*)(short) >(&SimTK::UErrIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::UErrIndex::isValid(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UErrIndex::isValid(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("SimTK!UErrIndex!isValid", static_cast<bool (*)(long) >(&SimTK::UErrIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::UErrIndex::isValid(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UErrIndex::isValid(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("SimTK!UErrIndex!isValid", static_cast<bool (*)(long long) >(&SimTK::UErrIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::UErrIndex::isValid(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UErrIndex::isValid(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("SimTK!UErrIndex!isValid", static_cast<bool (*)(unsigned int) >(&SimTK::UErrIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::UErrIndex::isValid(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UErrIndex::isValid(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("SimTK!UErrIndex!isValid", static_cast<bool (*)(unsigned short) >(&SimTK::UErrIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::UErrIndex::isValid(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UErrIndex::isValid(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("SimTK!UErrIndex!isValid", static_cast<bool (*)(unsigned long) >(&SimTK::UErrIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::UErrIndex::isValid(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UErrIndex::isValid(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("SimTK!UErrIndex!isValid", static_cast<bool (*)(unsigned long long) >(&SimTK::UErrIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::UErrIndex::isValidExtended(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UErrIndex::isValidExtended(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("SimTK!UErrIndex!isValidExtended", static_cast<bool (*)(int) >(&SimTK::UErrIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for bool SimTK::UErrIndex::isValidExtended(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UErrIndex::isValidExtended(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("SimTK!UErrIndex!isValidExtended", static_cast<bool (*)(short) >(&SimTK::UErrIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for bool SimTK::UErrIndex::isValidExtended(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UErrIndex::isValidExtended(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("SimTK!UErrIndex!isValidExtended", static_cast<bool (*)(long) >(&SimTK::UErrIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for bool SimTK::UErrIndex::isValidExtended(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UErrIndex::isValidExtended(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("SimTK!UErrIndex!isValidExtended", static_cast<bool (*)(long long) >(&SimTK::UErrIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for SimTK::UErrIndex::size_type SimTK::UErrIndex::max_size() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::UErrIndex::size_type SimTK::UErrIndex::max_size()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  t29.method("SimTK!UErrIndex!max_size", static_cast<SimTK::UErrIndex::size_type (*)() >(&SimTK::UErrIndex::max_size));

  /* End of SimTK::UErrIndex class method wrappers
   **********************************************************************/


  /**********************************************************************/
  /* Wrappers for the methods of class SimTK::SystemUDotErrIndex
   */


  DEBUG_MSG("Adding wrapper for void SimTK::SystemUDotErrIndex::SystemUDotErrIndex(int) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:32
  t30.constructor<int>();


  DEBUG_MSG("Adding wrapper for void SimTK::SystemUDotErrIndex::SystemUDotErrIndex(long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:32
  t30.constructor<long>();


  DEBUG_MSG("Adding wrapper for void SimTK::SystemUDotErrIndex::SystemUDotErrIndex(long long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:32
  t30.constructor<long long>();


  DEBUG_MSG("Adding wrapper for void SimTK::SystemUDotErrIndex::SystemUDotErrIndex(unsigned int) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:32
  t30.constructor<unsigned int>();


  DEBUG_MSG("Adding wrapper for void SimTK::SystemUDotErrIndex::SystemUDotErrIndex(unsigned long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:32
  t30.constructor<unsigned long>();


  DEBUG_MSG("Adding wrapper for void SimTK::SystemUDotErrIndex::SystemUDotErrIndex(unsigned long long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:32
  t30.constructor<unsigned long long>();

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUDotErrIndex::isValid() (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUDotErrIndex::isValid()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("isValid", static_cast<bool (SimTK::SystemUDotErrIndex::*)()  const>(&SimTK::SystemUDotErrIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUDotErrIndex::isValidExtended() (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUDotErrIndex::isValidExtended()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("isValidExtended", static_cast<bool (SimTK::SystemUDotErrIndex::*)()  const>(&SimTK::SystemUDotErrIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for void SimTK::SystemUDotErrIndex::invalidate() (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::SystemUDotErrIndex::invalidate()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("invalidate", static_cast<void (SimTK::SystemUDotErrIndex::*)() >(&SimTK::SystemUDotErrIndex::invalidate));

  DEBUG_MSG("Adding wrapper for void SimTK::SystemUDotErrIndex::clear() (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::SystemUDotErrIndex::clear()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("clear", static_cast<void (SimTK::SystemUDotErrIndex::*)() >(&SimTK::SystemUDotErrIndex::clear));
  types.set_override_module(jl_base_module);

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUDotErrIndex::operator==(const SimTK::SystemUDotErrIndex &) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUDotErrIndex::operator==(const SimTK::SystemUDotErrIndex &)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("==", static_cast<bool (SimTK::SystemUDotErrIndex::*)(const SimTK::SystemUDotErrIndex &)  const>(&SimTK::SystemUDotErrIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUDotErrIndex::operator==(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUDotErrIndex::operator==(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("==", static_cast<bool (SimTK::SystemUDotErrIndex::*)(int)  const>(&SimTK::SystemUDotErrIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUDotErrIndex::operator==(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUDotErrIndex::operator==(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("==", static_cast<bool (SimTK::SystemUDotErrIndex::*)(short)  const>(&SimTK::SystemUDotErrIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUDotErrIndex::operator==(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUDotErrIndex::operator==(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("==", static_cast<bool (SimTK::SystemUDotErrIndex::*)(long)  const>(&SimTK::SystemUDotErrIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUDotErrIndex::operator==(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUDotErrIndex::operator==(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("==", static_cast<bool (SimTK::SystemUDotErrIndex::*)(long long)  const>(&SimTK::SystemUDotErrIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUDotErrIndex::operator==(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUDotErrIndex::operator==(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("==", static_cast<bool (SimTK::SystemUDotErrIndex::*)(unsigned int)  const>(&SimTK::SystemUDotErrIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUDotErrIndex::operator==(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUDotErrIndex::operator==(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("==", static_cast<bool (SimTK::SystemUDotErrIndex::*)(unsigned short)  const>(&SimTK::SystemUDotErrIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUDotErrIndex::operator==(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUDotErrIndex::operator==(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("==", static_cast<bool (SimTK::SystemUDotErrIndex::*)(unsigned long)  const>(&SimTK::SystemUDotErrIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUDotErrIndex::operator==(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUDotErrIndex::operator==(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("==", static_cast<bool (SimTK::SystemUDotErrIndex::*)(unsigned long long)  const>(&SimTK::SystemUDotErrIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUDotErrIndex::operator!=(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUDotErrIndex::operator!=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("!=", static_cast<bool (SimTK::SystemUDotErrIndex::*)(int)  const>(&SimTK::SystemUDotErrIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUDotErrIndex::operator!=(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUDotErrIndex::operator!=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("!=", static_cast<bool (SimTK::SystemUDotErrIndex::*)(short)  const>(&SimTK::SystemUDotErrIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUDotErrIndex::operator!=(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUDotErrIndex::operator!=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("!=", static_cast<bool (SimTK::SystemUDotErrIndex::*)(long)  const>(&SimTK::SystemUDotErrIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUDotErrIndex::operator!=(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUDotErrIndex::operator!=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("!=", static_cast<bool (SimTK::SystemUDotErrIndex::*)(long long)  const>(&SimTK::SystemUDotErrIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUDotErrIndex::operator!=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUDotErrIndex::operator!=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("!=", static_cast<bool (SimTK::SystemUDotErrIndex::*)(unsigned int)  const>(&SimTK::SystemUDotErrIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUDotErrIndex::operator!=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUDotErrIndex::operator!=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("!=", static_cast<bool (SimTK::SystemUDotErrIndex::*)(unsigned long)  const>(&SimTK::SystemUDotErrIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUDotErrIndex::operator!=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUDotErrIndex::operator!=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("!=", static_cast<bool (SimTK::SystemUDotErrIndex::*)(unsigned long long)  const>(&SimTK::SystemUDotErrIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUDotErrIndex::operator<(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUDotErrIndex::operator<(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("<", static_cast<bool (SimTK::SystemUDotErrIndex::*)(int)  const>(&SimTK::SystemUDotErrIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUDotErrIndex::operator<(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUDotErrIndex::operator<(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("<", static_cast<bool (SimTK::SystemUDotErrIndex::*)(short)  const>(&SimTK::SystemUDotErrIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUDotErrIndex::operator<(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUDotErrIndex::operator<(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("<", static_cast<bool (SimTK::SystemUDotErrIndex::*)(long)  const>(&SimTK::SystemUDotErrIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUDotErrIndex::operator<(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUDotErrIndex::operator<(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("<", static_cast<bool (SimTK::SystemUDotErrIndex::*)(long long)  const>(&SimTK::SystemUDotErrIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUDotErrIndex::operator<(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUDotErrIndex::operator<(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("<", static_cast<bool (SimTK::SystemUDotErrIndex::*)(unsigned int)  const>(&SimTK::SystemUDotErrIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUDotErrIndex::operator<(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUDotErrIndex::operator<(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("<", static_cast<bool (SimTK::SystemUDotErrIndex::*)(unsigned short)  const>(&SimTK::SystemUDotErrIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUDotErrIndex::operator<(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUDotErrIndex::operator<(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("<", static_cast<bool (SimTK::SystemUDotErrIndex::*)(unsigned long)  const>(&SimTK::SystemUDotErrIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUDotErrIndex::operator<(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUDotErrIndex::operator<(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("<", static_cast<bool (SimTK::SystemUDotErrIndex::*)(unsigned long long)  const>(&SimTK::SystemUDotErrIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUDotErrIndex::operator>=(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUDotErrIndex::operator>=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method(">=", static_cast<bool (SimTK::SystemUDotErrIndex::*)(int)  const>(&SimTK::SystemUDotErrIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUDotErrIndex::operator>=(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUDotErrIndex::operator>=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method(">=", static_cast<bool (SimTK::SystemUDotErrIndex::*)(short)  const>(&SimTK::SystemUDotErrIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUDotErrIndex::operator>=(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUDotErrIndex::operator>=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method(">=", static_cast<bool (SimTK::SystemUDotErrIndex::*)(long)  const>(&SimTK::SystemUDotErrIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUDotErrIndex::operator>=(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUDotErrIndex::operator>=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method(">=", static_cast<bool (SimTK::SystemUDotErrIndex::*)(long long)  const>(&SimTK::SystemUDotErrIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUDotErrIndex::operator>=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUDotErrIndex::operator>=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method(">=", static_cast<bool (SimTK::SystemUDotErrIndex::*)(unsigned int)  const>(&SimTK::SystemUDotErrIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUDotErrIndex::operator>=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUDotErrIndex::operator>=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method(">=", static_cast<bool (SimTK::SystemUDotErrIndex::*)(unsigned short)  const>(&SimTK::SystemUDotErrIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUDotErrIndex::operator>=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUDotErrIndex::operator>=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method(">=", static_cast<bool (SimTK::SystemUDotErrIndex::*)(unsigned long)  const>(&SimTK::SystemUDotErrIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUDotErrIndex::operator>=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUDotErrIndex::operator>=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method(">=", static_cast<bool (SimTK::SystemUDotErrIndex::*)(unsigned long long)  const>(&SimTK::SystemUDotErrIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUDotErrIndex::operator>(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUDotErrIndex::operator>(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method(">", static_cast<bool (SimTK::SystemUDotErrIndex::*)(int)  const>(&SimTK::SystemUDotErrIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUDotErrIndex::operator>(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUDotErrIndex::operator>(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method(">", static_cast<bool (SimTK::SystemUDotErrIndex::*)(short)  const>(&SimTK::SystemUDotErrIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUDotErrIndex::operator>(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUDotErrIndex::operator>(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method(">", static_cast<bool (SimTK::SystemUDotErrIndex::*)(long)  const>(&SimTK::SystemUDotErrIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUDotErrIndex::operator>(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUDotErrIndex::operator>(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method(">", static_cast<bool (SimTK::SystemUDotErrIndex::*)(long long)  const>(&SimTK::SystemUDotErrIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUDotErrIndex::operator>(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUDotErrIndex::operator>(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method(">", static_cast<bool (SimTK::SystemUDotErrIndex::*)(unsigned int)  const>(&SimTK::SystemUDotErrIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUDotErrIndex::operator>(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUDotErrIndex::operator>(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method(">", static_cast<bool (SimTK::SystemUDotErrIndex::*)(unsigned short)  const>(&SimTK::SystemUDotErrIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUDotErrIndex::operator>(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUDotErrIndex::operator>(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method(">", static_cast<bool (SimTK::SystemUDotErrIndex::*)(unsigned long)  const>(&SimTK::SystemUDotErrIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUDotErrIndex::operator>(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUDotErrIndex::operator>(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method(">", static_cast<bool (SimTK::SystemUDotErrIndex::*)(unsigned long long)  const>(&SimTK::SystemUDotErrIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUDotErrIndex::operator<=(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUDotErrIndex::operator<=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("<=", static_cast<bool (SimTK::SystemUDotErrIndex::*)(int)  const>(&SimTK::SystemUDotErrIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUDotErrIndex::operator<=(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUDotErrIndex::operator<=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("<=", static_cast<bool (SimTK::SystemUDotErrIndex::*)(short)  const>(&SimTK::SystemUDotErrIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUDotErrIndex::operator<=(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUDotErrIndex::operator<=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("<=", static_cast<bool (SimTK::SystemUDotErrIndex::*)(long)  const>(&SimTK::SystemUDotErrIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUDotErrIndex::operator<=(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUDotErrIndex::operator<=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("<=", static_cast<bool (SimTK::SystemUDotErrIndex::*)(long long)  const>(&SimTK::SystemUDotErrIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUDotErrIndex::operator<=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUDotErrIndex::operator<=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("<=", static_cast<bool (SimTK::SystemUDotErrIndex::*)(unsigned int)  const>(&SimTK::SystemUDotErrIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUDotErrIndex::operator<=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUDotErrIndex::operator<=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("<=", static_cast<bool (SimTK::SystemUDotErrIndex::*)(unsigned short)  const>(&SimTK::SystemUDotErrIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUDotErrIndex::operator<=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUDotErrIndex::operator<=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("<=", static_cast<bool (SimTK::SystemUDotErrIndex::*)(unsigned long)  const>(&SimTK::SystemUDotErrIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUDotErrIndex::operator<=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUDotErrIndex::operator<=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("<=", static_cast<bool (SimTK::SystemUDotErrIndex::*)(unsigned long long)  const>(&SimTK::SystemUDotErrIndex::operator<=));
  types.unset_override_module();

  DEBUG_MSG("Adding wrapper for const SimTK::SystemUDotErrIndex & SimTK::SystemUDotErrIndex::operator++() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::SystemUDotErrIndex & SimTK::SystemUDotErrIndex::operator++()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("inc!", static_cast<const SimTK::SystemUDotErrIndex & (SimTK::SystemUDotErrIndex::*)() >(&SimTK::SystemUDotErrIndex::operator++));

  DEBUG_MSG("Adding wrapper for SimTK::SystemUDotErrIndex SimTK::SystemUDotErrIndex::operator++(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemUDotErrIndex SimTK::SystemUDotErrIndex::operator++(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("inc!", static_cast<SimTK::SystemUDotErrIndex (SimTK::SystemUDotErrIndex::*)(int) >(&SimTK::SystemUDotErrIndex::operator++));

  DEBUG_MSG("Adding wrapper for const SimTK::SystemUDotErrIndex & SimTK::SystemUDotErrIndex::operator--() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::SystemUDotErrIndex & SimTK::SystemUDotErrIndex::operator--()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("dec!", static_cast<const SimTK::SystemUDotErrIndex & (SimTK::SystemUDotErrIndex::*)() >(&SimTK::SystemUDotErrIndex::operator--));

  DEBUG_MSG("Adding wrapper for SimTK::SystemUDotErrIndex SimTK::SystemUDotErrIndex::operator--(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemUDotErrIndex SimTK::SystemUDotErrIndex::operator--(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("dec!", static_cast<SimTK::SystemUDotErrIndex (SimTK::SystemUDotErrIndex::*)(int) >(&SimTK::SystemUDotErrIndex::operator--));

  DEBUG_MSG("Adding wrapper for SimTK::SystemUDotErrIndex SimTK::SystemUDotErrIndex::next() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemUDotErrIndex SimTK::SystemUDotErrIndex::next()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("next", static_cast<SimTK::SystemUDotErrIndex (SimTK::SystemUDotErrIndex::*)()  const>(&SimTK::SystemUDotErrIndex::next));

  DEBUG_MSG("Adding wrapper for SimTK::SystemUDotErrIndex SimTK::SystemUDotErrIndex::prev() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemUDotErrIndex SimTK::SystemUDotErrIndex::prev()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("prev", static_cast<SimTK::SystemUDotErrIndex (SimTK::SystemUDotErrIndex::*)()  const>(&SimTK::SystemUDotErrIndex::prev));

  DEBUG_MSG("Adding wrapper for SimTK::SystemUDotErrIndex & SimTK::SystemUDotErrIndex::operator+=(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemUDotErrIndex & SimTK::SystemUDotErrIndex::operator+=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("add!", static_cast<SimTK::SystemUDotErrIndex & (SimTK::SystemUDotErrIndex::*)(int) >(&SimTK::SystemUDotErrIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemUDotErrIndex & SimTK::SystemUDotErrIndex::operator-=(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemUDotErrIndex & SimTK::SystemUDotErrIndex::operator-=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("sub!", static_cast<SimTK::SystemUDotErrIndex & (SimTK::SystemUDotErrIndex::*)(int) >(&SimTK::SystemUDotErrIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemUDotErrIndex & SimTK::SystemUDotErrIndex::operator+=(short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemUDotErrIndex & SimTK::SystemUDotErrIndex::operator+=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("add!", static_cast<SimTK::SystemUDotErrIndex & (SimTK::SystemUDotErrIndex::*)(short) >(&SimTK::SystemUDotErrIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemUDotErrIndex & SimTK::SystemUDotErrIndex::operator-=(short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemUDotErrIndex & SimTK::SystemUDotErrIndex::operator-=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("sub!", static_cast<SimTK::SystemUDotErrIndex & (SimTK::SystemUDotErrIndex::*)(short) >(&SimTK::SystemUDotErrIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemUDotErrIndex & SimTK::SystemUDotErrIndex::operator+=(long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemUDotErrIndex & SimTK::SystemUDotErrIndex::operator+=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("add!", static_cast<SimTK::SystemUDotErrIndex & (SimTK::SystemUDotErrIndex::*)(long) >(&SimTK::SystemUDotErrIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemUDotErrIndex & SimTK::SystemUDotErrIndex::operator-=(long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemUDotErrIndex & SimTK::SystemUDotErrIndex::operator-=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("sub!", static_cast<SimTK::SystemUDotErrIndex & (SimTK::SystemUDotErrIndex::*)(long) >(&SimTK::SystemUDotErrIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemUDotErrIndex & SimTK::SystemUDotErrIndex::operator+=(long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemUDotErrIndex & SimTK::SystemUDotErrIndex::operator+=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("add!", static_cast<SimTK::SystemUDotErrIndex & (SimTK::SystemUDotErrIndex::*)(long long) >(&SimTK::SystemUDotErrIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemUDotErrIndex & SimTK::SystemUDotErrIndex::operator-=(long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemUDotErrIndex & SimTK::SystemUDotErrIndex::operator-=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("sub!", static_cast<SimTK::SystemUDotErrIndex & (SimTK::SystemUDotErrIndex::*)(long long) >(&SimTK::SystemUDotErrIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemUDotErrIndex & SimTK::SystemUDotErrIndex::operator+=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemUDotErrIndex & SimTK::SystemUDotErrIndex::operator+=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("add!", static_cast<SimTK::SystemUDotErrIndex & (SimTK::SystemUDotErrIndex::*)(unsigned int) >(&SimTK::SystemUDotErrIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemUDotErrIndex & SimTK::SystemUDotErrIndex::operator-=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemUDotErrIndex & SimTK::SystemUDotErrIndex::operator-=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("sub!", static_cast<SimTK::SystemUDotErrIndex & (SimTK::SystemUDotErrIndex::*)(unsigned int) >(&SimTK::SystemUDotErrIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemUDotErrIndex & SimTK::SystemUDotErrIndex::operator+=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemUDotErrIndex & SimTK::SystemUDotErrIndex::operator+=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("add!", static_cast<SimTK::SystemUDotErrIndex & (SimTK::SystemUDotErrIndex::*)(unsigned short) >(&SimTK::SystemUDotErrIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemUDotErrIndex & SimTK::SystemUDotErrIndex::operator-=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemUDotErrIndex & SimTK::SystemUDotErrIndex::operator-=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("sub!", static_cast<SimTK::SystemUDotErrIndex & (SimTK::SystemUDotErrIndex::*)(unsigned short) >(&SimTK::SystemUDotErrIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemUDotErrIndex & SimTK::SystemUDotErrIndex::operator+=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemUDotErrIndex & SimTK::SystemUDotErrIndex::operator+=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("add!", static_cast<SimTK::SystemUDotErrIndex & (SimTK::SystemUDotErrIndex::*)(unsigned long) >(&SimTK::SystemUDotErrIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemUDotErrIndex & SimTK::SystemUDotErrIndex::operator-=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemUDotErrIndex & SimTK::SystemUDotErrIndex::operator-=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("sub!", static_cast<SimTK::SystemUDotErrIndex & (SimTK::SystemUDotErrIndex::*)(unsigned long) >(&SimTK::SystemUDotErrIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemUDotErrIndex & SimTK::SystemUDotErrIndex::operator+=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemUDotErrIndex & SimTK::SystemUDotErrIndex::operator+=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("add!", static_cast<SimTK::SystemUDotErrIndex & (SimTK::SystemUDotErrIndex::*)(unsigned long long) >(&SimTK::SystemUDotErrIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemUDotErrIndex & SimTK::SystemUDotErrIndex::operator-=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemUDotErrIndex & SimTK::SystemUDotErrIndex::operator-=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("sub!", static_cast<SimTK::SystemUDotErrIndex & (SimTK::SystemUDotErrIndex::*)(unsigned long long) >(&SimTK::SystemUDotErrIndex::operator-=));

  DEBUG_MSG("Adding wrapper for const SimTK::SystemUDotErrIndex & SimTK::SystemUDotErrIndex::Invalid() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::SystemUDotErrIndex & SimTK::SystemUDotErrIndex::Invalid()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("SimTK!SystemUDotErrIndex!Invalid", static_cast<const SimTK::SystemUDotErrIndex & (*)() >(&SimTK::SystemUDotErrIndex::Invalid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUDotErrIndex::isValid(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUDotErrIndex::isValid(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("SimTK!SystemUDotErrIndex!isValid", static_cast<bool (*)(int) >(&SimTK::SystemUDotErrIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUDotErrIndex::isValid(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUDotErrIndex::isValid(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("SimTK!SystemUDotErrIndex!isValid", static_cast<bool (*)(short) >(&SimTK::SystemUDotErrIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUDotErrIndex::isValid(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUDotErrIndex::isValid(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("SimTK!SystemUDotErrIndex!isValid", static_cast<bool (*)(long) >(&SimTK::SystemUDotErrIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUDotErrIndex::isValid(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUDotErrIndex::isValid(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("SimTK!SystemUDotErrIndex!isValid", static_cast<bool (*)(long long) >(&SimTK::SystemUDotErrIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUDotErrIndex::isValid(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUDotErrIndex::isValid(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("SimTK!SystemUDotErrIndex!isValid", static_cast<bool (*)(unsigned int) >(&SimTK::SystemUDotErrIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUDotErrIndex::isValid(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUDotErrIndex::isValid(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("SimTK!SystemUDotErrIndex!isValid", static_cast<bool (*)(unsigned short) >(&SimTK::SystemUDotErrIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUDotErrIndex::isValid(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUDotErrIndex::isValid(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("SimTK!SystemUDotErrIndex!isValid", static_cast<bool (*)(unsigned long) >(&SimTK::SystemUDotErrIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUDotErrIndex::isValid(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUDotErrIndex::isValid(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("SimTK!SystemUDotErrIndex!isValid", static_cast<bool (*)(unsigned long long) >(&SimTK::SystemUDotErrIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUDotErrIndex::isValidExtended(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUDotErrIndex::isValidExtended(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("SimTK!SystemUDotErrIndex!isValidExtended", static_cast<bool (*)(int) >(&SimTK::SystemUDotErrIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUDotErrIndex::isValidExtended(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUDotErrIndex::isValidExtended(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("SimTK!SystemUDotErrIndex!isValidExtended", static_cast<bool (*)(short) >(&SimTK::SystemUDotErrIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUDotErrIndex::isValidExtended(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUDotErrIndex::isValidExtended(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("SimTK!SystemUDotErrIndex!isValidExtended", static_cast<bool (*)(long) >(&SimTK::SystemUDotErrIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemUDotErrIndex::isValidExtended(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemUDotErrIndex::isValidExtended(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("SimTK!SystemUDotErrIndex!isValidExtended", static_cast<bool (*)(long long) >(&SimTK::SystemUDotErrIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for SimTK::SystemUDotErrIndex::size_type SimTK::SystemUDotErrIndex::max_size() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemUDotErrIndex::size_type SimTK::SystemUDotErrIndex::max_size()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  t30.method("SimTK!SystemUDotErrIndex!max_size", static_cast<SimTK::SystemUDotErrIndex::size_type (*)() >(&SimTK::SystemUDotErrIndex::max_size));

  /* End of SimTK::SystemUDotErrIndex class method wrappers
   **********************************************************************/


  /**********************************************************************/
  /* Wrappers for the methods of class SimTK::UDotErrIndex
   */


  DEBUG_MSG("Adding wrapper for void SimTK::UDotErrIndex::UDotErrIndex(int) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:32
  t31.constructor<int>();


  DEBUG_MSG("Adding wrapper for void SimTK::UDotErrIndex::UDotErrIndex(long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:32
  t31.constructor<long>();


  DEBUG_MSG("Adding wrapper for void SimTK::UDotErrIndex::UDotErrIndex(long long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:32
  t31.constructor<long long>();


  DEBUG_MSG("Adding wrapper for void SimTK::UDotErrIndex::UDotErrIndex(unsigned int) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:32
  t31.constructor<unsigned int>();


  DEBUG_MSG("Adding wrapper for void SimTK::UDotErrIndex::UDotErrIndex(unsigned long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:32
  t31.constructor<unsigned long>();


  DEBUG_MSG("Adding wrapper for void SimTK::UDotErrIndex::UDotErrIndex(unsigned long long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:32
  t31.constructor<unsigned long long>();

  DEBUG_MSG("Adding wrapper for bool SimTK::UDotErrIndex::isValid() (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UDotErrIndex::isValid()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("isValid", static_cast<bool (SimTK::UDotErrIndex::*)()  const>(&SimTK::UDotErrIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::UDotErrIndex::isValidExtended() (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UDotErrIndex::isValidExtended()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("isValidExtended", static_cast<bool (SimTK::UDotErrIndex::*)()  const>(&SimTK::UDotErrIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for void SimTK::UDotErrIndex::invalidate() (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::UDotErrIndex::invalidate()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("invalidate", static_cast<void (SimTK::UDotErrIndex::*)() >(&SimTK::UDotErrIndex::invalidate));

  DEBUG_MSG("Adding wrapper for void SimTK::UDotErrIndex::clear() (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::UDotErrIndex::clear()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("clear", static_cast<void (SimTK::UDotErrIndex::*)() >(&SimTK::UDotErrIndex::clear));
  types.set_override_module(jl_base_module);

  DEBUG_MSG("Adding wrapper for bool SimTK::UDotErrIndex::operator==(const SimTK::UDotErrIndex &) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UDotErrIndex::operator==(const SimTK::UDotErrIndex &)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("==", static_cast<bool (SimTK::UDotErrIndex::*)(const SimTK::UDotErrIndex &)  const>(&SimTK::UDotErrIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::UDotErrIndex::operator==(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UDotErrIndex::operator==(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("==", static_cast<bool (SimTK::UDotErrIndex::*)(int)  const>(&SimTK::UDotErrIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::UDotErrIndex::operator==(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UDotErrIndex::operator==(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("==", static_cast<bool (SimTK::UDotErrIndex::*)(short)  const>(&SimTK::UDotErrIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::UDotErrIndex::operator==(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UDotErrIndex::operator==(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("==", static_cast<bool (SimTK::UDotErrIndex::*)(long)  const>(&SimTK::UDotErrIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::UDotErrIndex::operator==(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UDotErrIndex::operator==(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("==", static_cast<bool (SimTK::UDotErrIndex::*)(long long)  const>(&SimTK::UDotErrIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::UDotErrIndex::operator==(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UDotErrIndex::operator==(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("==", static_cast<bool (SimTK::UDotErrIndex::*)(unsigned int)  const>(&SimTK::UDotErrIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::UDotErrIndex::operator==(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UDotErrIndex::operator==(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("==", static_cast<bool (SimTK::UDotErrIndex::*)(unsigned short)  const>(&SimTK::UDotErrIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::UDotErrIndex::operator==(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UDotErrIndex::operator==(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("==", static_cast<bool (SimTK::UDotErrIndex::*)(unsigned long)  const>(&SimTK::UDotErrIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::UDotErrIndex::operator==(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UDotErrIndex::operator==(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("==", static_cast<bool (SimTK::UDotErrIndex::*)(unsigned long long)  const>(&SimTK::UDotErrIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::UDotErrIndex::operator!=(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UDotErrIndex::operator!=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("!=", static_cast<bool (SimTK::UDotErrIndex::*)(int)  const>(&SimTK::UDotErrIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::UDotErrIndex::operator!=(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UDotErrIndex::operator!=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("!=", static_cast<bool (SimTK::UDotErrIndex::*)(short)  const>(&SimTK::UDotErrIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::UDotErrIndex::operator!=(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UDotErrIndex::operator!=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("!=", static_cast<bool (SimTK::UDotErrIndex::*)(long)  const>(&SimTK::UDotErrIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::UDotErrIndex::operator!=(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UDotErrIndex::operator!=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("!=", static_cast<bool (SimTK::UDotErrIndex::*)(long long)  const>(&SimTK::UDotErrIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::UDotErrIndex::operator!=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UDotErrIndex::operator!=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("!=", static_cast<bool (SimTK::UDotErrIndex::*)(unsigned int)  const>(&SimTK::UDotErrIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::UDotErrIndex::operator!=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UDotErrIndex::operator!=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("!=", static_cast<bool (SimTK::UDotErrIndex::*)(unsigned long)  const>(&SimTK::UDotErrIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::UDotErrIndex::operator!=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UDotErrIndex::operator!=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("!=", static_cast<bool (SimTK::UDotErrIndex::*)(unsigned long long)  const>(&SimTK::UDotErrIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::UDotErrIndex::operator<(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UDotErrIndex::operator<(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("<", static_cast<bool (SimTK::UDotErrIndex::*)(int)  const>(&SimTK::UDotErrIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::UDotErrIndex::operator<(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UDotErrIndex::operator<(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("<", static_cast<bool (SimTK::UDotErrIndex::*)(short)  const>(&SimTK::UDotErrIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::UDotErrIndex::operator<(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UDotErrIndex::operator<(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("<", static_cast<bool (SimTK::UDotErrIndex::*)(long)  const>(&SimTK::UDotErrIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::UDotErrIndex::operator<(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UDotErrIndex::operator<(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("<", static_cast<bool (SimTK::UDotErrIndex::*)(long long)  const>(&SimTK::UDotErrIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::UDotErrIndex::operator<(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UDotErrIndex::operator<(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("<", static_cast<bool (SimTK::UDotErrIndex::*)(unsigned int)  const>(&SimTK::UDotErrIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::UDotErrIndex::operator<(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UDotErrIndex::operator<(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("<", static_cast<bool (SimTK::UDotErrIndex::*)(unsigned short)  const>(&SimTK::UDotErrIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::UDotErrIndex::operator<(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UDotErrIndex::operator<(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("<", static_cast<bool (SimTK::UDotErrIndex::*)(unsigned long)  const>(&SimTK::UDotErrIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::UDotErrIndex::operator<(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UDotErrIndex::operator<(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("<", static_cast<bool (SimTK::UDotErrIndex::*)(unsigned long long)  const>(&SimTK::UDotErrIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::UDotErrIndex::operator>=(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UDotErrIndex::operator>=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method(">=", static_cast<bool (SimTK::UDotErrIndex::*)(int)  const>(&SimTK::UDotErrIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::UDotErrIndex::operator>=(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UDotErrIndex::operator>=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method(">=", static_cast<bool (SimTK::UDotErrIndex::*)(short)  const>(&SimTK::UDotErrIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::UDotErrIndex::operator>=(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UDotErrIndex::operator>=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method(">=", static_cast<bool (SimTK::UDotErrIndex::*)(long)  const>(&SimTK::UDotErrIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::UDotErrIndex::operator>=(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UDotErrIndex::operator>=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method(">=", static_cast<bool (SimTK::UDotErrIndex::*)(long long)  const>(&SimTK::UDotErrIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::UDotErrIndex::operator>=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UDotErrIndex::operator>=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method(">=", static_cast<bool (SimTK::UDotErrIndex::*)(unsigned int)  const>(&SimTK::UDotErrIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::UDotErrIndex::operator>=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UDotErrIndex::operator>=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method(">=", static_cast<bool (SimTK::UDotErrIndex::*)(unsigned short)  const>(&SimTK::UDotErrIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::UDotErrIndex::operator>=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UDotErrIndex::operator>=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method(">=", static_cast<bool (SimTK::UDotErrIndex::*)(unsigned long)  const>(&SimTK::UDotErrIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::UDotErrIndex::operator>=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UDotErrIndex::operator>=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method(">=", static_cast<bool (SimTK::UDotErrIndex::*)(unsigned long long)  const>(&SimTK::UDotErrIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::UDotErrIndex::operator>(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UDotErrIndex::operator>(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method(">", static_cast<bool (SimTK::UDotErrIndex::*)(int)  const>(&SimTK::UDotErrIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::UDotErrIndex::operator>(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UDotErrIndex::operator>(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method(">", static_cast<bool (SimTK::UDotErrIndex::*)(short)  const>(&SimTK::UDotErrIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::UDotErrIndex::operator>(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UDotErrIndex::operator>(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method(">", static_cast<bool (SimTK::UDotErrIndex::*)(long)  const>(&SimTK::UDotErrIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::UDotErrIndex::operator>(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UDotErrIndex::operator>(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method(">", static_cast<bool (SimTK::UDotErrIndex::*)(long long)  const>(&SimTK::UDotErrIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::UDotErrIndex::operator>(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UDotErrIndex::operator>(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method(">", static_cast<bool (SimTK::UDotErrIndex::*)(unsigned int)  const>(&SimTK::UDotErrIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::UDotErrIndex::operator>(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UDotErrIndex::operator>(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method(">", static_cast<bool (SimTK::UDotErrIndex::*)(unsigned short)  const>(&SimTK::UDotErrIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::UDotErrIndex::operator>(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UDotErrIndex::operator>(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method(">", static_cast<bool (SimTK::UDotErrIndex::*)(unsigned long)  const>(&SimTK::UDotErrIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::UDotErrIndex::operator>(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UDotErrIndex::operator>(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method(">", static_cast<bool (SimTK::UDotErrIndex::*)(unsigned long long)  const>(&SimTK::UDotErrIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::UDotErrIndex::operator<=(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UDotErrIndex::operator<=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("<=", static_cast<bool (SimTK::UDotErrIndex::*)(int)  const>(&SimTK::UDotErrIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::UDotErrIndex::operator<=(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UDotErrIndex::operator<=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("<=", static_cast<bool (SimTK::UDotErrIndex::*)(short)  const>(&SimTK::UDotErrIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::UDotErrIndex::operator<=(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UDotErrIndex::operator<=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("<=", static_cast<bool (SimTK::UDotErrIndex::*)(long)  const>(&SimTK::UDotErrIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::UDotErrIndex::operator<=(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UDotErrIndex::operator<=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("<=", static_cast<bool (SimTK::UDotErrIndex::*)(long long)  const>(&SimTK::UDotErrIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::UDotErrIndex::operator<=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UDotErrIndex::operator<=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("<=", static_cast<bool (SimTK::UDotErrIndex::*)(unsigned int)  const>(&SimTK::UDotErrIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::UDotErrIndex::operator<=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UDotErrIndex::operator<=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("<=", static_cast<bool (SimTK::UDotErrIndex::*)(unsigned short)  const>(&SimTK::UDotErrIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::UDotErrIndex::operator<=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UDotErrIndex::operator<=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("<=", static_cast<bool (SimTK::UDotErrIndex::*)(unsigned long)  const>(&SimTK::UDotErrIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::UDotErrIndex::operator<=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UDotErrIndex::operator<=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("<=", static_cast<bool (SimTK::UDotErrIndex::*)(unsigned long long)  const>(&SimTK::UDotErrIndex::operator<=));
  types.unset_override_module();

  DEBUG_MSG("Adding wrapper for const SimTK::UDotErrIndex & SimTK::UDotErrIndex::operator++() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::UDotErrIndex & SimTK::UDotErrIndex::operator++()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("inc!", static_cast<const SimTK::UDotErrIndex & (SimTK::UDotErrIndex::*)() >(&SimTK::UDotErrIndex::operator++));

  DEBUG_MSG("Adding wrapper for SimTK::UDotErrIndex SimTK::UDotErrIndex::operator++(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::UDotErrIndex SimTK::UDotErrIndex::operator++(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("inc!", static_cast<SimTK::UDotErrIndex (SimTK::UDotErrIndex::*)(int) >(&SimTK::UDotErrIndex::operator++));

  DEBUG_MSG("Adding wrapper for const SimTK::UDotErrIndex & SimTK::UDotErrIndex::operator--() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::UDotErrIndex & SimTK::UDotErrIndex::operator--()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("dec!", static_cast<const SimTK::UDotErrIndex & (SimTK::UDotErrIndex::*)() >(&SimTK::UDotErrIndex::operator--));

  DEBUG_MSG("Adding wrapper for SimTK::UDotErrIndex SimTK::UDotErrIndex::operator--(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::UDotErrIndex SimTK::UDotErrIndex::operator--(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("dec!", static_cast<SimTK::UDotErrIndex (SimTK::UDotErrIndex::*)(int) >(&SimTK::UDotErrIndex::operator--));

  DEBUG_MSG("Adding wrapper for SimTK::UDotErrIndex SimTK::UDotErrIndex::next() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::UDotErrIndex SimTK::UDotErrIndex::next()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("next", static_cast<SimTK::UDotErrIndex (SimTK::UDotErrIndex::*)()  const>(&SimTK::UDotErrIndex::next));

  DEBUG_MSG("Adding wrapper for SimTK::UDotErrIndex SimTK::UDotErrIndex::prev() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::UDotErrIndex SimTK::UDotErrIndex::prev()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("prev", static_cast<SimTK::UDotErrIndex (SimTK::UDotErrIndex::*)()  const>(&SimTK::UDotErrIndex::prev));

  DEBUG_MSG("Adding wrapper for SimTK::UDotErrIndex & SimTK::UDotErrIndex::operator+=(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::UDotErrIndex & SimTK::UDotErrIndex::operator+=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("add!", static_cast<SimTK::UDotErrIndex & (SimTK::UDotErrIndex::*)(int) >(&SimTK::UDotErrIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::UDotErrIndex & SimTK::UDotErrIndex::operator-=(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::UDotErrIndex & SimTK::UDotErrIndex::operator-=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("sub!", static_cast<SimTK::UDotErrIndex & (SimTK::UDotErrIndex::*)(int) >(&SimTK::UDotErrIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::UDotErrIndex & SimTK::UDotErrIndex::operator+=(short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::UDotErrIndex & SimTK::UDotErrIndex::operator+=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("add!", static_cast<SimTK::UDotErrIndex & (SimTK::UDotErrIndex::*)(short) >(&SimTK::UDotErrIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::UDotErrIndex & SimTK::UDotErrIndex::operator-=(short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::UDotErrIndex & SimTK::UDotErrIndex::operator-=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("sub!", static_cast<SimTK::UDotErrIndex & (SimTK::UDotErrIndex::*)(short) >(&SimTK::UDotErrIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::UDotErrIndex & SimTK::UDotErrIndex::operator+=(long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::UDotErrIndex & SimTK::UDotErrIndex::operator+=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("add!", static_cast<SimTK::UDotErrIndex & (SimTK::UDotErrIndex::*)(long) >(&SimTK::UDotErrIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::UDotErrIndex & SimTK::UDotErrIndex::operator-=(long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::UDotErrIndex & SimTK::UDotErrIndex::operator-=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("sub!", static_cast<SimTK::UDotErrIndex & (SimTK::UDotErrIndex::*)(long) >(&SimTK::UDotErrIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::UDotErrIndex & SimTK::UDotErrIndex::operator+=(long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::UDotErrIndex & SimTK::UDotErrIndex::operator+=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("add!", static_cast<SimTK::UDotErrIndex & (SimTK::UDotErrIndex::*)(long long) >(&SimTK::UDotErrIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::UDotErrIndex & SimTK::UDotErrIndex::operator-=(long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::UDotErrIndex & SimTK::UDotErrIndex::operator-=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("sub!", static_cast<SimTK::UDotErrIndex & (SimTK::UDotErrIndex::*)(long long) >(&SimTK::UDotErrIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::UDotErrIndex & SimTK::UDotErrIndex::operator+=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::UDotErrIndex & SimTK::UDotErrIndex::operator+=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("add!", static_cast<SimTK::UDotErrIndex & (SimTK::UDotErrIndex::*)(unsigned int) >(&SimTK::UDotErrIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::UDotErrIndex & SimTK::UDotErrIndex::operator-=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::UDotErrIndex & SimTK::UDotErrIndex::operator-=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("sub!", static_cast<SimTK::UDotErrIndex & (SimTK::UDotErrIndex::*)(unsigned int) >(&SimTK::UDotErrIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::UDotErrIndex & SimTK::UDotErrIndex::operator+=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::UDotErrIndex & SimTK::UDotErrIndex::operator+=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("add!", static_cast<SimTK::UDotErrIndex & (SimTK::UDotErrIndex::*)(unsigned short) >(&SimTK::UDotErrIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::UDotErrIndex & SimTK::UDotErrIndex::operator-=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::UDotErrIndex & SimTK::UDotErrIndex::operator-=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("sub!", static_cast<SimTK::UDotErrIndex & (SimTK::UDotErrIndex::*)(unsigned short) >(&SimTK::UDotErrIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::UDotErrIndex & SimTK::UDotErrIndex::operator+=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::UDotErrIndex & SimTK::UDotErrIndex::operator+=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("add!", static_cast<SimTK::UDotErrIndex & (SimTK::UDotErrIndex::*)(unsigned long) >(&SimTK::UDotErrIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::UDotErrIndex & SimTK::UDotErrIndex::operator-=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::UDotErrIndex & SimTK::UDotErrIndex::operator-=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("sub!", static_cast<SimTK::UDotErrIndex & (SimTK::UDotErrIndex::*)(unsigned long) >(&SimTK::UDotErrIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::UDotErrIndex & SimTK::UDotErrIndex::operator+=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::UDotErrIndex & SimTK::UDotErrIndex::operator+=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("add!", static_cast<SimTK::UDotErrIndex & (SimTK::UDotErrIndex::*)(unsigned long long) >(&SimTK::UDotErrIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::UDotErrIndex & SimTK::UDotErrIndex::operator-=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::UDotErrIndex & SimTK::UDotErrIndex::operator-=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("sub!", static_cast<SimTK::UDotErrIndex & (SimTK::UDotErrIndex::*)(unsigned long long) >(&SimTK::UDotErrIndex::operator-=));

  DEBUG_MSG("Adding wrapper for const SimTK::UDotErrIndex & SimTK::UDotErrIndex::Invalid() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::UDotErrIndex & SimTK::UDotErrIndex::Invalid()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("SimTK!UDotErrIndex!Invalid", static_cast<const SimTK::UDotErrIndex & (*)() >(&SimTK::UDotErrIndex::Invalid));

  DEBUG_MSG("Adding wrapper for bool SimTK::UDotErrIndex::isValid(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UDotErrIndex::isValid(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("SimTK!UDotErrIndex!isValid", static_cast<bool (*)(int) >(&SimTK::UDotErrIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::UDotErrIndex::isValid(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UDotErrIndex::isValid(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("SimTK!UDotErrIndex!isValid", static_cast<bool (*)(short) >(&SimTK::UDotErrIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::UDotErrIndex::isValid(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UDotErrIndex::isValid(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("SimTK!UDotErrIndex!isValid", static_cast<bool (*)(long) >(&SimTK::UDotErrIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::UDotErrIndex::isValid(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UDotErrIndex::isValid(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("SimTK!UDotErrIndex!isValid", static_cast<bool (*)(long long) >(&SimTK::UDotErrIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::UDotErrIndex::isValid(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UDotErrIndex::isValid(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("SimTK!UDotErrIndex!isValid", static_cast<bool (*)(unsigned int) >(&SimTK::UDotErrIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::UDotErrIndex::isValid(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UDotErrIndex::isValid(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("SimTK!UDotErrIndex!isValid", static_cast<bool (*)(unsigned short) >(&SimTK::UDotErrIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::UDotErrIndex::isValid(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UDotErrIndex::isValid(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("SimTK!UDotErrIndex!isValid", static_cast<bool (*)(unsigned long) >(&SimTK::UDotErrIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::UDotErrIndex::isValid(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UDotErrIndex::isValid(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("SimTK!UDotErrIndex!isValid", static_cast<bool (*)(unsigned long long) >(&SimTK::UDotErrIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::UDotErrIndex::isValidExtended(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UDotErrIndex::isValidExtended(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("SimTK!UDotErrIndex!isValidExtended", static_cast<bool (*)(int) >(&SimTK::UDotErrIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for bool SimTK::UDotErrIndex::isValidExtended(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UDotErrIndex::isValidExtended(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("SimTK!UDotErrIndex!isValidExtended", static_cast<bool (*)(short) >(&SimTK::UDotErrIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for bool SimTK::UDotErrIndex::isValidExtended(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UDotErrIndex::isValidExtended(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("SimTK!UDotErrIndex!isValidExtended", static_cast<bool (*)(long) >(&SimTK::UDotErrIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for bool SimTK::UDotErrIndex::isValidExtended(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::UDotErrIndex::isValidExtended(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("SimTK!UDotErrIndex!isValidExtended", static_cast<bool (*)(long long) >(&SimTK::UDotErrIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for SimTK::UDotErrIndex::size_type SimTK::UDotErrIndex::max_size() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::UDotErrIndex::size_type SimTK::UDotErrIndex::max_size()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  t31.method("SimTK!UDotErrIndex!max_size", static_cast<SimTK::UDotErrIndex::size_type (*)() >(&SimTK::UDotErrIndex::max_size));

  /* End of SimTK::UDotErrIndex class method wrappers
   **********************************************************************/


  /**********************************************************************/
  /* Wrappers for the methods of class SimTK::SystemMultiplierIndex
   */


  DEBUG_MSG("Adding wrapper for void SimTK::SystemMultiplierIndex::SystemMultiplierIndex(int) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:32
  t32.constructor<int>();


  DEBUG_MSG("Adding wrapper for void SimTK::SystemMultiplierIndex::SystemMultiplierIndex(long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:32
  t32.constructor<long>();


  DEBUG_MSG("Adding wrapper for void SimTK::SystemMultiplierIndex::SystemMultiplierIndex(long long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:32
  t32.constructor<long long>();


  DEBUG_MSG("Adding wrapper for void SimTK::SystemMultiplierIndex::SystemMultiplierIndex(unsigned int) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:32
  t32.constructor<unsigned int>();


  DEBUG_MSG("Adding wrapper for void SimTK::SystemMultiplierIndex::SystemMultiplierIndex(unsigned long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:32
  t32.constructor<unsigned long>();


  DEBUG_MSG("Adding wrapper for void SimTK::SystemMultiplierIndex::SystemMultiplierIndex(unsigned long long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:32
  t32.constructor<unsigned long long>();

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemMultiplierIndex::isValid() (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemMultiplierIndex::isValid()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("isValid", static_cast<bool (SimTK::SystemMultiplierIndex::*)()  const>(&SimTK::SystemMultiplierIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemMultiplierIndex::isValidExtended() (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemMultiplierIndex::isValidExtended()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("isValidExtended", static_cast<bool (SimTK::SystemMultiplierIndex::*)()  const>(&SimTK::SystemMultiplierIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for void SimTK::SystemMultiplierIndex::invalidate() (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::SystemMultiplierIndex::invalidate()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("invalidate", static_cast<void (SimTK::SystemMultiplierIndex::*)() >(&SimTK::SystemMultiplierIndex::invalidate));

  DEBUG_MSG("Adding wrapper for void SimTK::SystemMultiplierIndex::clear() (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::SystemMultiplierIndex::clear()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("clear", static_cast<void (SimTK::SystemMultiplierIndex::*)() >(&SimTK::SystemMultiplierIndex::clear));
  types.set_override_module(jl_base_module);

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemMultiplierIndex::operator==(const SimTK::SystemMultiplierIndex &) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemMultiplierIndex::operator==(const SimTK::SystemMultiplierIndex &)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("==", static_cast<bool (SimTK::SystemMultiplierIndex::*)(const SimTK::SystemMultiplierIndex &)  const>(&SimTK::SystemMultiplierIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemMultiplierIndex::operator==(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemMultiplierIndex::operator==(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("==", static_cast<bool (SimTK::SystemMultiplierIndex::*)(int)  const>(&SimTK::SystemMultiplierIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemMultiplierIndex::operator==(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemMultiplierIndex::operator==(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("==", static_cast<bool (SimTK::SystemMultiplierIndex::*)(short)  const>(&SimTK::SystemMultiplierIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemMultiplierIndex::operator==(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemMultiplierIndex::operator==(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("==", static_cast<bool (SimTK::SystemMultiplierIndex::*)(long)  const>(&SimTK::SystemMultiplierIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemMultiplierIndex::operator==(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemMultiplierIndex::operator==(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("==", static_cast<bool (SimTK::SystemMultiplierIndex::*)(long long)  const>(&SimTK::SystemMultiplierIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemMultiplierIndex::operator==(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemMultiplierIndex::operator==(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("==", static_cast<bool (SimTK::SystemMultiplierIndex::*)(unsigned int)  const>(&SimTK::SystemMultiplierIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemMultiplierIndex::operator==(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemMultiplierIndex::operator==(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("==", static_cast<bool (SimTK::SystemMultiplierIndex::*)(unsigned short)  const>(&SimTK::SystemMultiplierIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemMultiplierIndex::operator==(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemMultiplierIndex::operator==(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("==", static_cast<bool (SimTK::SystemMultiplierIndex::*)(unsigned long)  const>(&SimTK::SystemMultiplierIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemMultiplierIndex::operator==(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemMultiplierIndex::operator==(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("==", static_cast<bool (SimTK::SystemMultiplierIndex::*)(unsigned long long)  const>(&SimTK::SystemMultiplierIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemMultiplierIndex::operator!=(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemMultiplierIndex::operator!=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("!=", static_cast<bool (SimTK::SystemMultiplierIndex::*)(int)  const>(&SimTK::SystemMultiplierIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemMultiplierIndex::operator!=(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemMultiplierIndex::operator!=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("!=", static_cast<bool (SimTK::SystemMultiplierIndex::*)(short)  const>(&SimTK::SystemMultiplierIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemMultiplierIndex::operator!=(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemMultiplierIndex::operator!=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("!=", static_cast<bool (SimTK::SystemMultiplierIndex::*)(long)  const>(&SimTK::SystemMultiplierIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemMultiplierIndex::operator!=(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemMultiplierIndex::operator!=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("!=", static_cast<bool (SimTK::SystemMultiplierIndex::*)(long long)  const>(&SimTK::SystemMultiplierIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemMultiplierIndex::operator!=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemMultiplierIndex::operator!=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("!=", static_cast<bool (SimTK::SystemMultiplierIndex::*)(unsigned int)  const>(&SimTK::SystemMultiplierIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemMultiplierIndex::operator!=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemMultiplierIndex::operator!=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("!=", static_cast<bool (SimTK::SystemMultiplierIndex::*)(unsigned long)  const>(&SimTK::SystemMultiplierIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemMultiplierIndex::operator!=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemMultiplierIndex::operator!=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("!=", static_cast<bool (SimTK::SystemMultiplierIndex::*)(unsigned long long)  const>(&SimTK::SystemMultiplierIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemMultiplierIndex::operator<(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemMultiplierIndex::operator<(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("<", static_cast<bool (SimTK::SystemMultiplierIndex::*)(int)  const>(&SimTK::SystemMultiplierIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemMultiplierIndex::operator<(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemMultiplierIndex::operator<(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("<", static_cast<bool (SimTK::SystemMultiplierIndex::*)(short)  const>(&SimTK::SystemMultiplierIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemMultiplierIndex::operator<(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemMultiplierIndex::operator<(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("<", static_cast<bool (SimTK::SystemMultiplierIndex::*)(long)  const>(&SimTK::SystemMultiplierIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemMultiplierIndex::operator<(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemMultiplierIndex::operator<(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("<", static_cast<bool (SimTK::SystemMultiplierIndex::*)(long long)  const>(&SimTK::SystemMultiplierIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemMultiplierIndex::operator<(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemMultiplierIndex::operator<(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("<", static_cast<bool (SimTK::SystemMultiplierIndex::*)(unsigned int)  const>(&SimTK::SystemMultiplierIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemMultiplierIndex::operator<(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemMultiplierIndex::operator<(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("<", static_cast<bool (SimTK::SystemMultiplierIndex::*)(unsigned short)  const>(&SimTK::SystemMultiplierIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemMultiplierIndex::operator<(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemMultiplierIndex::operator<(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("<", static_cast<bool (SimTK::SystemMultiplierIndex::*)(unsigned long)  const>(&SimTK::SystemMultiplierIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemMultiplierIndex::operator<(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemMultiplierIndex::operator<(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("<", static_cast<bool (SimTK::SystemMultiplierIndex::*)(unsigned long long)  const>(&SimTK::SystemMultiplierIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemMultiplierIndex::operator>=(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemMultiplierIndex::operator>=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method(">=", static_cast<bool (SimTK::SystemMultiplierIndex::*)(int)  const>(&SimTK::SystemMultiplierIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemMultiplierIndex::operator>=(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemMultiplierIndex::operator>=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method(">=", static_cast<bool (SimTK::SystemMultiplierIndex::*)(short)  const>(&SimTK::SystemMultiplierIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemMultiplierIndex::operator>=(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemMultiplierIndex::operator>=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method(">=", static_cast<bool (SimTK::SystemMultiplierIndex::*)(long)  const>(&SimTK::SystemMultiplierIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemMultiplierIndex::operator>=(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemMultiplierIndex::operator>=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method(">=", static_cast<bool (SimTK::SystemMultiplierIndex::*)(long long)  const>(&SimTK::SystemMultiplierIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemMultiplierIndex::operator>=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemMultiplierIndex::operator>=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method(">=", static_cast<bool (SimTK::SystemMultiplierIndex::*)(unsigned int)  const>(&SimTK::SystemMultiplierIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemMultiplierIndex::operator>=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemMultiplierIndex::operator>=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method(">=", static_cast<bool (SimTK::SystemMultiplierIndex::*)(unsigned short)  const>(&SimTK::SystemMultiplierIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemMultiplierIndex::operator>=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemMultiplierIndex::operator>=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method(">=", static_cast<bool (SimTK::SystemMultiplierIndex::*)(unsigned long)  const>(&SimTK::SystemMultiplierIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemMultiplierIndex::operator>=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemMultiplierIndex::operator>=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method(">=", static_cast<bool (SimTK::SystemMultiplierIndex::*)(unsigned long long)  const>(&SimTK::SystemMultiplierIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemMultiplierIndex::operator>(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemMultiplierIndex::operator>(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method(">", static_cast<bool (SimTK::SystemMultiplierIndex::*)(int)  const>(&SimTK::SystemMultiplierIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemMultiplierIndex::operator>(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemMultiplierIndex::operator>(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method(">", static_cast<bool (SimTK::SystemMultiplierIndex::*)(short)  const>(&SimTK::SystemMultiplierIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemMultiplierIndex::operator>(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemMultiplierIndex::operator>(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method(">", static_cast<bool (SimTK::SystemMultiplierIndex::*)(long)  const>(&SimTK::SystemMultiplierIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemMultiplierIndex::operator>(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemMultiplierIndex::operator>(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method(">", static_cast<bool (SimTK::SystemMultiplierIndex::*)(long long)  const>(&SimTK::SystemMultiplierIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemMultiplierIndex::operator>(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemMultiplierIndex::operator>(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method(">", static_cast<bool (SimTK::SystemMultiplierIndex::*)(unsigned int)  const>(&SimTK::SystemMultiplierIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemMultiplierIndex::operator>(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemMultiplierIndex::operator>(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method(">", static_cast<bool (SimTK::SystemMultiplierIndex::*)(unsigned short)  const>(&SimTK::SystemMultiplierIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemMultiplierIndex::operator>(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemMultiplierIndex::operator>(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method(">", static_cast<bool (SimTK::SystemMultiplierIndex::*)(unsigned long)  const>(&SimTK::SystemMultiplierIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemMultiplierIndex::operator>(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemMultiplierIndex::operator>(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method(">", static_cast<bool (SimTK::SystemMultiplierIndex::*)(unsigned long long)  const>(&SimTK::SystemMultiplierIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemMultiplierIndex::operator<=(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemMultiplierIndex::operator<=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("<=", static_cast<bool (SimTK::SystemMultiplierIndex::*)(int)  const>(&SimTK::SystemMultiplierIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemMultiplierIndex::operator<=(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemMultiplierIndex::operator<=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("<=", static_cast<bool (SimTK::SystemMultiplierIndex::*)(short)  const>(&SimTK::SystemMultiplierIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemMultiplierIndex::operator<=(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemMultiplierIndex::operator<=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("<=", static_cast<bool (SimTK::SystemMultiplierIndex::*)(long)  const>(&SimTK::SystemMultiplierIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemMultiplierIndex::operator<=(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemMultiplierIndex::operator<=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("<=", static_cast<bool (SimTK::SystemMultiplierIndex::*)(long long)  const>(&SimTK::SystemMultiplierIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemMultiplierIndex::operator<=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemMultiplierIndex::operator<=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("<=", static_cast<bool (SimTK::SystemMultiplierIndex::*)(unsigned int)  const>(&SimTK::SystemMultiplierIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemMultiplierIndex::operator<=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemMultiplierIndex::operator<=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("<=", static_cast<bool (SimTK::SystemMultiplierIndex::*)(unsigned short)  const>(&SimTK::SystemMultiplierIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemMultiplierIndex::operator<=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemMultiplierIndex::operator<=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("<=", static_cast<bool (SimTK::SystemMultiplierIndex::*)(unsigned long)  const>(&SimTK::SystemMultiplierIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemMultiplierIndex::operator<=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemMultiplierIndex::operator<=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("<=", static_cast<bool (SimTK::SystemMultiplierIndex::*)(unsigned long long)  const>(&SimTK::SystemMultiplierIndex::operator<=));
  types.unset_override_module();

  DEBUG_MSG("Adding wrapper for const SimTK::SystemMultiplierIndex & SimTK::SystemMultiplierIndex::operator++() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::SystemMultiplierIndex & SimTK::SystemMultiplierIndex::operator++()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("inc!", static_cast<const SimTK::SystemMultiplierIndex & (SimTK::SystemMultiplierIndex::*)() >(&SimTK::SystemMultiplierIndex::operator++));

  DEBUG_MSG("Adding wrapper for SimTK::SystemMultiplierIndex SimTK::SystemMultiplierIndex::operator++(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemMultiplierIndex SimTK::SystemMultiplierIndex::operator++(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("inc!", static_cast<SimTK::SystemMultiplierIndex (SimTK::SystemMultiplierIndex::*)(int) >(&SimTK::SystemMultiplierIndex::operator++));

  DEBUG_MSG("Adding wrapper for const SimTK::SystemMultiplierIndex & SimTK::SystemMultiplierIndex::operator--() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::SystemMultiplierIndex & SimTK::SystemMultiplierIndex::operator--()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("dec!", static_cast<const SimTK::SystemMultiplierIndex & (SimTK::SystemMultiplierIndex::*)() >(&SimTK::SystemMultiplierIndex::operator--));

  DEBUG_MSG("Adding wrapper for SimTK::SystemMultiplierIndex SimTK::SystemMultiplierIndex::operator--(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemMultiplierIndex SimTK::SystemMultiplierIndex::operator--(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("dec!", static_cast<SimTK::SystemMultiplierIndex (SimTK::SystemMultiplierIndex::*)(int) >(&SimTK::SystemMultiplierIndex::operator--));

  DEBUG_MSG("Adding wrapper for SimTK::SystemMultiplierIndex SimTK::SystemMultiplierIndex::next() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemMultiplierIndex SimTK::SystemMultiplierIndex::next()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("next", static_cast<SimTK::SystemMultiplierIndex (SimTK::SystemMultiplierIndex::*)()  const>(&SimTK::SystemMultiplierIndex::next));

  DEBUG_MSG("Adding wrapper for SimTK::SystemMultiplierIndex SimTK::SystemMultiplierIndex::prev() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemMultiplierIndex SimTK::SystemMultiplierIndex::prev()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("prev", static_cast<SimTK::SystemMultiplierIndex (SimTK::SystemMultiplierIndex::*)()  const>(&SimTK::SystemMultiplierIndex::prev));

  DEBUG_MSG("Adding wrapper for SimTK::SystemMultiplierIndex & SimTK::SystemMultiplierIndex::operator+=(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemMultiplierIndex & SimTK::SystemMultiplierIndex::operator+=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("add!", static_cast<SimTK::SystemMultiplierIndex & (SimTK::SystemMultiplierIndex::*)(int) >(&SimTK::SystemMultiplierIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemMultiplierIndex & SimTK::SystemMultiplierIndex::operator-=(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemMultiplierIndex & SimTK::SystemMultiplierIndex::operator-=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("sub!", static_cast<SimTK::SystemMultiplierIndex & (SimTK::SystemMultiplierIndex::*)(int) >(&SimTK::SystemMultiplierIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemMultiplierIndex & SimTK::SystemMultiplierIndex::operator+=(short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemMultiplierIndex & SimTK::SystemMultiplierIndex::operator+=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("add!", static_cast<SimTK::SystemMultiplierIndex & (SimTK::SystemMultiplierIndex::*)(short) >(&SimTK::SystemMultiplierIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemMultiplierIndex & SimTK::SystemMultiplierIndex::operator-=(short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemMultiplierIndex & SimTK::SystemMultiplierIndex::operator-=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("sub!", static_cast<SimTK::SystemMultiplierIndex & (SimTK::SystemMultiplierIndex::*)(short) >(&SimTK::SystemMultiplierIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemMultiplierIndex & SimTK::SystemMultiplierIndex::operator+=(long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemMultiplierIndex & SimTK::SystemMultiplierIndex::operator+=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("add!", static_cast<SimTK::SystemMultiplierIndex & (SimTK::SystemMultiplierIndex::*)(long) >(&SimTK::SystemMultiplierIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemMultiplierIndex & SimTK::SystemMultiplierIndex::operator-=(long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemMultiplierIndex & SimTK::SystemMultiplierIndex::operator-=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("sub!", static_cast<SimTK::SystemMultiplierIndex & (SimTK::SystemMultiplierIndex::*)(long) >(&SimTK::SystemMultiplierIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemMultiplierIndex & SimTK::SystemMultiplierIndex::operator+=(long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemMultiplierIndex & SimTK::SystemMultiplierIndex::operator+=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("add!", static_cast<SimTK::SystemMultiplierIndex & (SimTK::SystemMultiplierIndex::*)(long long) >(&SimTK::SystemMultiplierIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemMultiplierIndex & SimTK::SystemMultiplierIndex::operator-=(long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemMultiplierIndex & SimTK::SystemMultiplierIndex::operator-=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("sub!", static_cast<SimTK::SystemMultiplierIndex & (SimTK::SystemMultiplierIndex::*)(long long) >(&SimTK::SystemMultiplierIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemMultiplierIndex & SimTK::SystemMultiplierIndex::operator+=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemMultiplierIndex & SimTK::SystemMultiplierIndex::operator+=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("add!", static_cast<SimTK::SystemMultiplierIndex & (SimTK::SystemMultiplierIndex::*)(unsigned int) >(&SimTK::SystemMultiplierIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemMultiplierIndex & SimTK::SystemMultiplierIndex::operator-=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemMultiplierIndex & SimTK::SystemMultiplierIndex::operator-=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("sub!", static_cast<SimTK::SystemMultiplierIndex & (SimTK::SystemMultiplierIndex::*)(unsigned int) >(&SimTK::SystemMultiplierIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemMultiplierIndex & SimTK::SystemMultiplierIndex::operator+=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemMultiplierIndex & SimTK::SystemMultiplierIndex::operator+=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("add!", static_cast<SimTK::SystemMultiplierIndex & (SimTK::SystemMultiplierIndex::*)(unsigned short) >(&SimTK::SystemMultiplierIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemMultiplierIndex & SimTK::SystemMultiplierIndex::operator-=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemMultiplierIndex & SimTK::SystemMultiplierIndex::operator-=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("sub!", static_cast<SimTK::SystemMultiplierIndex & (SimTK::SystemMultiplierIndex::*)(unsigned short) >(&SimTK::SystemMultiplierIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemMultiplierIndex & SimTK::SystemMultiplierIndex::operator+=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemMultiplierIndex & SimTK::SystemMultiplierIndex::operator+=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("add!", static_cast<SimTK::SystemMultiplierIndex & (SimTK::SystemMultiplierIndex::*)(unsigned long) >(&SimTK::SystemMultiplierIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemMultiplierIndex & SimTK::SystemMultiplierIndex::operator-=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemMultiplierIndex & SimTK::SystemMultiplierIndex::operator-=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("sub!", static_cast<SimTK::SystemMultiplierIndex & (SimTK::SystemMultiplierIndex::*)(unsigned long) >(&SimTK::SystemMultiplierIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemMultiplierIndex & SimTK::SystemMultiplierIndex::operator+=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemMultiplierIndex & SimTK::SystemMultiplierIndex::operator+=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("add!", static_cast<SimTK::SystemMultiplierIndex & (SimTK::SystemMultiplierIndex::*)(unsigned long long) >(&SimTK::SystemMultiplierIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::SystemMultiplierIndex & SimTK::SystemMultiplierIndex::operator-=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemMultiplierIndex & SimTK::SystemMultiplierIndex::operator-=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("sub!", static_cast<SimTK::SystemMultiplierIndex & (SimTK::SystemMultiplierIndex::*)(unsigned long long) >(&SimTK::SystemMultiplierIndex::operator-=));

  DEBUG_MSG("Adding wrapper for const SimTK::SystemMultiplierIndex & SimTK::SystemMultiplierIndex::Invalid() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::SystemMultiplierIndex & SimTK::SystemMultiplierIndex::Invalid()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("SimTK!SystemMultiplierIndex!Invalid", static_cast<const SimTK::SystemMultiplierIndex & (*)() >(&SimTK::SystemMultiplierIndex::Invalid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemMultiplierIndex::isValid(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemMultiplierIndex::isValid(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("SimTK!SystemMultiplierIndex!isValid", static_cast<bool (*)(int) >(&SimTK::SystemMultiplierIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemMultiplierIndex::isValid(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemMultiplierIndex::isValid(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("SimTK!SystemMultiplierIndex!isValid", static_cast<bool (*)(short) >(&SimTK::SystemMultiplierIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemMultiplierIndex::isValid(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemMultiplierIndex::isValid(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("SimTK!SystemMultiplierIndex!isValid", static_cast<bool (*)(long) >(&SimTK::SystemMultiplierIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemMultiplierIndex::isValid(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemMultiplierIndex::isValid(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("SimTK!SystemMultiplierIndex!isValid", static_cast<bool (*)(long long) >(&SimTK::SystemMultiplierIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemMultiplierIndex::isValid(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemMultiplierIndex::isValid(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("SimTK!SystemMultiplierIndex!isValid", static_cast<bool (*)(unsigned int) >(&SimTK::SystemMultiplierIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemMultiplierIndex::isValid(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemMultiplierIndex::isValid(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("SimTK!SystemMultiplierIndex!isValid", static_cast<bool (*)(unsigned short) >(&SimTK::SystemMultiplierIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemMultiplierIndex::isValid(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemMultiplierIndex::isValid(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("SimTK!SystemMultiplierIndex!isValid", static_cast<bool (*)(unsigned long) >(&SimTK::SystemMultiplierIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemMultiplierIndex::isValid(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemMultiplierIndex::isValid(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("SimTK!SystemMultiplierIndex!isValid", static_cast<bool (*)(unsigned long long) >(&SimTK::SystemMultiplierIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemMultiplierIndex::isValidExtended(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemMultiplierIndex::isValidExtended(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("SimTK!SystemMultiplierIndex!isValidExtended", static_cast<bool (*)(int) >(&SimTK::SystemMultiplierIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemMultiplierIndex::isValidExtended(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemMultiplierIndex::isValidExtended(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("SimTK!SystemMultiplierIndex!isValidExtended", static_cast<bool (*)(short) >(&SimTK::SystemMultiplierIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemMultiplierIndex::isValidExtended(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemMultiplierIndex::isValidExtended(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("SimTK!SystemMultiplierIndex!isValidExtended", static_cast<bool (*)(long) >(&SimTK::SystemMultiplierIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for bool SimTK::SystemMultiplierIndex::isValidExtended(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::SystemMultiplierIndex::isValidExtended(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("SimTK!SystemMultiplierIndex!isValidExtended", static_cast<bool (*)(long long) >(&SimTK::SystemMultiplierIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for SimTK::SystemMultiplierIndex::size_type SimTK::SystemMultiplierIndex::max_size() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemMultiplierIndex::size_type SimTK::SystemMultiplierIndex::max_size()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  t32.method("SimTK!SystemMultiplierIndex!max_size", static_cast<SimTK::SystemMultiplierIndex::size_type (*)() >(&SimTK::SystemMultiplierIndex::max_size));

  /* End of SimTK::SystemMultiplierIndex class method wrappers
   **********************************************************************/


  /**********************************************************************/
  /* Wrappers for the methods of class SimTK::MultiplierIndex
   */


  DEBUG_MSG("Adding wrapper for void SimTK::MultiplierIndex::MultiplierIndex(int) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:32
  t33.constructor<int>();


  DEBUG_MSG("Adding wrapper for void SimTK::MultiplierIndex::MultiplierIndex(long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:32
  t33.constructor<long>();


  DEBUG_MSG("Adding wrapper for void SimTK::MultiplierIndex::MultiplierIndex(long long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:32
  t33.constructor<long long>();


  DEBUG_MSG("Adding wrapper for void SimTK::MultiplierIndex::MultiplierIndex(unsigned int) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:32
  t33.constructor<unsigned int>();


  DEBUG_MSG("Adding wrapper for void SimTK::MultiplierIndex::MultiplierIndex(unsigned long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:32
  t33.constructor<unsigned long>();


  DEBUG_MSG("Adding wrapper for void SimTK::MultiplierIndex::MultiplierIndex(unsigned long long) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:32
  t33.constructor<unsigned long long>();

  DEBUG_MSG("Adding wrapper for bool SimTK::MultiplierIndex::isValid() (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::MultiplierIndex::isValid()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("isValid", static_cast<bool (SimTK::MultiplierIndex::*)()  const>(&SimTK::MultiplierIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::MultiplierIndex::isValidExtended() (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::MultiplierIndex::isValidExtended()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("isValidExtended", static_cast<bool (SimTK::MultiplierIndex::*)()  const>(&SimTK::MultiplierIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for void SimTK::MultiplierIndex::invalidate() (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::MultiplierIndex::invalidate()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("invalidate", static_cast<void (SimTK::MultiplierIndex::*)() >(&SimTK::MultiplierIndex::invalidate));

  DEBUG_MSG("Adding wrapper for void SimTK::MultiplierIndex::clear() (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::MultiplierIndex::clear()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("clear", static_cast<void (SimTK::MultiplierIndex::*)() >(&SimTK::MultiplierIndex::clear));
  types.set_override_module(jl_base_module);

  DEBUG_MSG("Adding wrapper for bool SimTK::MultiplierIndex::operator==(const SimTK::MultiplierIndex &) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::MultiplierIndex::operator==(const SimTK::MultiplierIndex &)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("==", static_cast<bool (SimTK::MultiplierIndex::*)(const SimTK::MultiplierIndex &)  const>(&SimTK::MultiplierIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::MultiplierIndex::operator==(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::MultiplierIndex::operator==(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("==", static_cast<bool (SimTK::MultiplierIndex::*)(int)  const>(&SimTK::MultiplierIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::MultiplierIndex::operator==(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::MultiplierIndex::operator==(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("==", static_cast<bool (SimTK::MultiplierIndex::*)(short)  const>(&SimTK::MultiplierIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::MultiplierIndex::operator==(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::MultiplierIndex::operator==(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("==", static_cast<bool (SimTK::MultiplierIndex::*)(long)  const>(&SimTK::MultiplierIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::MultiplierIndex::operator==(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::MultiplierIndex::operator==(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("==", static_cast<bool (SimTK::MultiplierIndex::*)(long long)  const>(&SimTK::MultiplierIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::MultiplierIndex::operator==(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::MultiplierIndex::operator==(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("==", static_cast<bool (SimTK::MultiplierIndex::*)(unsigned int)  const>(&SimTK::MultiplierIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::MultiplierIndex::operator==(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::MultiplierIndex::operator==(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("==", static_cast<bool (SimTK::MultiplierIndex::*)(unsigned short)  const>(&SimTK::MultiplierIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::MultiplierIndex::operator==(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::MultiplierIndex::operator==(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("==", static_cast<bool (SimTK::MultiplierIndex::*)(unsigned long)  const>(&SimTK::MultiplierIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::MultiplierIndex::operator==(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::MultiplierIndex::operator==(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("==", static_cast<bool (SimTK::MultiplierIndex::*)(unsigned long long)  const>(&SimTK::MultiplierIndex::operator==));

  DEBUG_MSG("Adding wrapper for bool SimTK::MultiplierIndex::operator!=(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::MultiplierIndex::operator!=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("!=", static_cast<bool (SimTK::MultiplierIndex::*)(int)  const>(&SimTK::MultiplierIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::MultiplierIndex::operator!=(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::MultiplierIndex::operator!=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("!=", static_cast<bool (SimTK::MultiplierIndex::*)(short)  const>(&SimTK::MultiplierIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::MultiplierIndex::operator!=(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::MultiplierIndex::operator!=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("!=", static_cast<bool (SimTK::MultiplierIndex::*)(long)  const>(&SimTK::MultiplierIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::MultiplierIndex::operator!=(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::MultiplierIndex::operator!=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("!=", static_cast<bool (SimTK::MultiplierIndex::*)(long long)  const>(&SimTK::MultiplierIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::MultiplierIndex::operator!=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::MultiplierIndex::operator!=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("!=", static_cast<bool (SimTK::MultiplierIndex::*)(unsigned int)  const>(&SimTK::MultiplierIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::MultiplierIndex::operator!=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::MultiplierIndex::operator!=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("!=", static_cast<bool (SimTK::MultiplierIndex::*)(unsigned long)  const>(&SimTK::MultiplierIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::MultiplierIndex::operator!=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::MultiplierIndex::operator!=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("!=", static_cast<bool (SimTK::MultiplierIndex::*)(unsigned long long)  const>(&SimTK::MultiplierIndex::operator!=));

  DEBUG_MSG("Adding wrapper for bool SimTK::MultiplierIndex::operator<(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::MultiplierIndex::operator<(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("<", static_cast<bool (SimTK::MultiplierIndex::*)(int)  const>(&SimTK::MultiplierIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::MultiplierIndex::operator<(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::MultiplierIndex::operator<(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("<", static_cast<bool (SimTK::MultiplierIndex::*)(short)  const>(&SimTK::MultiplierIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::MultiplierIndex::operator<(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::MultiplierIndex::operator<(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("<", static_cast<bool (SimTK::MultiplierIndex::*)(long)  const>(&SimTK::MultiplierIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::MultiplierIndex::operator<(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::MultiplierIndex::operator<(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("<", static_cast<bool (SimTK::MultiplierIndex::*)(long long)  const>(&SimTK::MultiplierIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::MultiplierIndex::operator<(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::MultiplierIndex::operator<(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("<", static_cast<bool (SimTK::MultiplierIndex::*)(unsigned int)  const>(&SimTK::MultiplierIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::MultiplierIndex::operator<(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::MultiplierIndex::operator<(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("<", static_cast<bool (SimTK::MultiplierIndex::*)(unsigned short)  const>(&SimTK::MultiplierIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::MultiplierIndex::operator<(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::MultiplierIndex::operator<(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("<", static_cast<bool (SimTK::MultiplierIndex::*)(unsigned long)  const>(&SimTK::MultiplierIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::MultiplierIndex::operator<(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::MultiplierIndex::operator<(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("<", static_cast<bool (SimTK::MultiplierIndex::*)(unsigned long long)  const>(&SimTK::MultiplierIndex::operator<));

  DEBUG_MSG("Adding wrapper for bool SimTK::MultiplierIndex::operator>=(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::MultiplierIndex::operator>=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method(">=", static_cast<bool (SimTK::MultiplierIndex::*)(int)  const>(&SimTK::MultiplierIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::MultiplierIndex::operator>=(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::MultiplierIndex::operator>=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method(">=", static_cast<bool (SimTK::MultiplierIndex::*)(short)  const>(&SimTK::MultiplierIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::MultiplierIndex::operator>=(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::MultiplierIndex::operator>=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method(">=", static_cast<bool (SimTK::MultiplierIndex::*)(long)  const>(&SimTK::MultiplierIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::MultiplierIndex::operator>=(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::MultiplierIndex::operator>=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method(">=", static_cast<bool (SimTK::MultiplierIndex::*)(long long)  const>(&SimTK::MultiplierIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::MultiplierIndex::operator>=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::MultiplierIndex::operator>=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method(">=", static_cast<bool (SimTK::MultiplierIndex::*)(unsigned int)  const>(&SimTK::MultiplierIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::MultiplierIndex::operator>=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::MultiplierIndex::operator>=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method(">=", static_cast<bool (SimTK::MultiplierIndex::*)(unsigned short)  const>(&SimTK::MultiplierIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::MultiplierIndex::operator>=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::MultiplierIndex::operator>=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method(">=", static_cast<bool (SimTK::MultiplierIndex::*)(unsigned long)  const>(&SimTK::MultiplierIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::MultiplierIndex::operator>=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::MultiplierIndex::operator>=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method(">=", static_cast<bool (SimTK::MultiplierIndex::*)(unsigned long long)  const>(&SimTK::MultiplierIndex::operator>=));

  DEBUG_MSG("Adding wrapper for bool SimTK::MultiplierIndex::operator>(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::MultiplierIndex::operator>(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method(">", static_cast<bool (SimTK::MultiplierIndex::*)(int)  const>(&SimTK::MultiplierIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::MultiplierIndex::operator>(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::MultiplierIndex::operator>(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method(">", static_cast<bool (SimTK::MultiplierIndex::*)(short)  const>(&SimTK::MultiplierIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::MultiplierIndex::operator>(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::MultiplierIndex::operator>(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method(">", static_cast<bool (SimTK::MultiplierIndex::*)(long)  const>(&SimTK::MultiplierIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::MultiplierIndex::operator>(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::MultiplierIndex::operator>(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method(">", static_cast<bool (SimTK::MultiplierIndex::*)(long long)  const>(&SimTK::MultiplierIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::MultiplierIndex::operator>(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::MultiplierIndex::operator>(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method(">", static_cast<bool (SimTK::MultiplierIndex::*)(unsigned int)  const>(&SimTK::MultiplierIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::MultiplierIndex::operator>(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::MultiplierIndex::operator>(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method(">", static_cast<bool (SimTK::MultiplierIndex::*)(unsigned short)  const>(&SimTK::MultiplierIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::MultiplierIndex::operator>(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::MultiplierIndex::operator>(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method(">", static_cast<bool (SimTK::MultiplierIndex::*)(unsigned long)  const>(&SimTK::MultiplierIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::MultiplierIndex::operator>(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::MultiplierIndex::operator>(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method(">", static_cast<bool (SimTK::MultiplierIndex::*)(unsigned long long)  const>(&SimTK::MultiplierIndex::operator>));

  DEBUG_MSG("Adding wrapper for bool SimTK::MultiplierIndex::operator<=(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::MultiplierIndex::operator<=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("<=", static_cast<bool (SimTK::MultiplierIndex::*)(int)  const>(&SimTK::MultiplierIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::MultiplierIndex::operator<=(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::MultiplierIndex::operator<=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("<=", static_cast<bool (SimTK::MultiplierIndex::*)(short)  const>(&SimTK::MultiplierIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::MultiplierIndex::operator<=(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::MultiplierIndex::operator<=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("<=", static_cast<bool (SimTK::MultiplierIndex::*)(long)  const>(&SimTK::MultiplierIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::MultiplierIndex::operator<=(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::MultiplierIndex::operator<=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("<=", static_cast<bool (SimTK::MultiplierIndex::*)(long long)  const>(&SimTK::MultiplierIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::MultiplierIndex::operator<=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::MultiplierIndex::operator<=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("<=", static_cast<bool (SimTK::MultiplierIndex::*)(unsigned int)  const>(&SimTK::MultiplierIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::MultiplierIndex::operator<=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::MultiplierIndex::operator<=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("<=", static_cast<bool (SimTK::MultiplierIndex::*)(unsigned short)  const>(&SimTK::MultiplierIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::MultiplierIndex::operator<=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::MultiplierIndex::operator<=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("<=", static_cast<bool (SimTK::MultiplierIndex::*)(unsigned long)  const>(&SimTK::MultiplierIndex::operator<=));

  DEBUG_MSG("Adding wrapper for bool SimTK::MultiplierIndex::operator<=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::MultiplierIndex::operator<=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("<=", static_cast<bool (SimTK::MultiplierIndex::*)(unsigned long long)  const>(&SimTK::MultiplierIndex::operator<=));
  types.unset_override_module();

  DEBUG_MSG("Adding wrapper for const SimTK::MultiplierIndex & SimTK::MultiplierIndex::operator++() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::MultiplierIndex & SimTK::MultiplierIndex::operator++()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("inc!", static_cast<const SimTK::MultiplierIndex & (SimTK::MultiplierIndex::*)() >(&SimTK::MultiplierIndex::operator++));

  DEBUG_MSG("Adding wrapper for SimTK::MultiplierIndex SimTK::MultiplierIndex::operator++(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::MultiplierIndex SimTK::MultiplierIndex::operator++(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("inc!", static_cast<SimTK::MultiplierIndex (SimTK::MultiplierIndex::*)(int) >(&SimTK::MultiplierIndex::operator++));

  DEBUG_MSG("Adding wrapper for const SimTK::MultiplierIndex & SimTK::MultiplierIndex::operator--() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::MultiplierIndex & SimTK::MultiplierIndex::operator--()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("dec!", static_cast<const SimTK::MultiplierIndex & (SimTK::MultiplierIndex::*)() >(&SimTK::MultiplierIndex::operator--));

  DEBUG_MSG("Adding wrapper for SimTK::MultiplierIndex SimTK::MultiplierIndex::operator--(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::MultiplierIndex SimTK::MultiplierIndex::operator--(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("dec!", static_cast<SimTK::MultiplierIndex (SimTK::MultiplierIndex::*)(int) >(&SimTK::MultiplierIndex::operator--));

  DEBUG_MSG("Adding wrapper for SimTK::MultiplierIndex SimTK::MultiplierIndex::next() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::MultiplierIndex SimTK::MultiplierIndex::next()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("next", static_cast<SimTK::MultiplierIndex (SimTK::MultiplierIndex::*)()  const>(&SimTK::MultiplierIndex::next));

  DEBUG_MSG("Adding wrapper for SimTK::MultiplierIndex SimTK::MultiplierIndex::prev() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::MultiplierIndex SimTK::MultiplierIndex::prev()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("prev", static_cast<SimTK::MultiplierIndex (SimTK::MultiplierIndex::*)()  const>(&SimTK::MultiplierIndex::prev));

  DEBUG_MSG("Adding wrapper for SimTK::MultiplierIndex & SimTK::MultiplierIndex::operator+=(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::MultiplierIndex & SimTK::MultiplierIndex::operator+=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("add!", static_cast<SimTK::MultiplierIndex & (SimTK::MultiplierIndex::*)(int) >(&SimTK::MultiplierIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::MultiplierIndex & SimTK::MultiplierIndex::operator-=(int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::MultiplierIndex & SimTK::MultiplierIndex::operator-=(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("sub!", static_cast<SimTK::MultiplierIndex & (SimTK::MultiplierIndex::*)(int) >(&SimTK::MultiplierIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::MultiplierIndex & SimTK::MultiplierIndex::operator+=(short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::MultiplierIndex & SimTK::MultiplierIndex::operator+=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("add!", static_cast<SimTK::MultiplierIndex & (SimTK::MultiplierIndex::*)(short) >(&SimTK::MultiplierIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::MultiplierIndex & SimTK::MultiplierIndex::operator-=(short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::MultiplierIndex & SimTK::MultiplierIndex::operator-=(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("sub!", static_cast<SimTK::MultiplierIndex & (SimTK::MultiplierIndex::*)(short) >(&SimTK::MultiplierIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::MultiplierIndex & SimTK::MultiplierIndex::operator+=(long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::MultiplierIndex & SimTK::MultiplierIndex::operator+=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("add!", static_cast<SimTK::MultiplierIndex & (SimTK::MultiplierIndex::*)(long) >(&SimTK::MultiplierIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::MultiplierIndex & SimTK::MultiplierIndex::operator-=(long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::MultiplierIndex & SimTK::MultiplierIndex::operator-=(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("sub!", static_cast<SimTK::MultiplierIndex & (SimTK::MultiplierIndex::*)(long) >(&SimTK::MultiplierIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::MultiplierIndex & SimTK::MultiplierIndex::operator+=(long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::MultiplierIndex & SimTK::MultiplierIndex::operator+=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("add!", static_cast<SimTK::MultiplierIndex & (SimTK::MultiplierIndex::*)(long long) >(&SimTK::MultiplierIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::MultiplierIndex & SimTK::MultiplierIndex::operator-=(long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::MultiplierIndex & SimTK::MultiplierIndex::operator-=(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("sub!", static_cast<SimTK::MultiplierIndex & (SimTK::MultiplierIndex::*)(long long) >(&SimTK::MultiplierIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::MultiplierIndex & SimTK::MultiplierIndex::operator+=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::MultiplierIndex & SimTK::MultiplierIndex::operator+=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("add!", static_cast<SimTK::MultiplierIndex & (SimTK::MultiplierIndex::*)(unsigned int) >(&SimTK::MultiplierIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::MultiplierIndex & SimTK::MultiplierIndex::operator-=(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::MultiplierIndex & SimTK::MultiplierIndex::operator-=(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("sub!", static_cast<SimTK::MultiplierIndex & (SimTK::MultiplierIndex::*)(unsigned int) >(&SimTK::MultiplierIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::MultiplierIndex & SimTK::MultiplierIndex::operator+=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::MultiplierIndex & SimTK::MultiplierIndex::operator+=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("add!", static_cast<SimTK::MultiplierIndex & (SimTK::MultiplierIndex::*)(unsigned short) >(&SimTK::MultiplierIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::MultiplierIndex & SimTK::MultiplierIndex::operator-=(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::MultiplierIndex & SimTK::MultiplierIndex::operator-=(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("sub!", static_cast<SimTK::MultiplierIndex & (SimTK::MultiplierIndex::*)(unsigned short) >(&SimTK::MultiplierIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::MultiplierIndex & SimTK::MultiplierIndex::operator+=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::MultiplierIndex & SimTK::MultiplierIndex::operator+=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("add!", static_cast<SimTK::MultiplierIndex & (SimTK::MultiplierIndex::*)(unsigned long) >(&SimTK::MultiplierIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::MultiplierIndex & SimTK::MultiplierIndex::operator-=(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::MultiplierIndex & SimTK::MultiplierIndex::operator-=(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("sub!", static_cast<SimTK::MultiplierIndex & (SimTK::MultiplierIndex::*)(unsigned long) >(&SimTK::MultiplierIndex::operator-=));

  DEBUG_MSG("Adding wrapper for SimTK::MultiplierIndex & SimTK::MultiplierIndex::operator+=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::MultiplierIndex & SimTK::MultiplierIndex::operator+=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("add!", static_cast<SimTK::MultiplierIndex & (SimTK::MultiplierIndex::*)(unsigned long long) >(&SimTK::MultiplierIndex::operator+=));

  DEBUG_MSG("Adding wrapper for SimTK::MultiplierIndex & SimTK::MultiplierIndex::operator-=(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::MultiplierIndex & SimTK::MultiplierIndex::operator-=(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("sub!", static_cast<SimTK::MultiplierIndex & (SimTK::MultiplierIndex::*)(unsigned long long) >(&SimTK::MultiplierIndex::operator-=));

  DEBUG_MSG("Adding wrapper for const SimTK::MultiplierIndex & SimTK::MultiplierIndex::Invalid() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::MultiplierIndex & SimTK::MultiplierIndex::Invalid()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("SimTK!MultiplierIndex!Invalid", static_cast<const SimTK::MultiplierIndex & (*)() >(&SimTK::MultiplierIndex::Invalid));

  DEBUG_MSG("Adding wrapper for bool SimTK::MultiplierIndex::isValid(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::MultiplierIndex::isValid(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("SimTK!MultiplierIndex!isValid", static_cast<bool (*)(int) >(&SimTK::MultiplierIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::MultiplierIndex::isValid(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::MultiplierIndex::isValid(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("SimTK!MultiplierIndex!isValid", static_cast<bool (*)(short) >(&SimTK::MultiplierIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::MultiplierIndex::isValid(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::MultiplierIndex::isValid(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("SimTK!MultiplierIndex!isValid", static_cast<bool (*)(long) >(&SimTK::MultiplierIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::MultiplierIndex::isValid(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::MultiplierIndex::isValid(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("SimTK!MultiplierIndex!isValid", static_cast<bool (*)(long long) >(&SimTK::MultiplierIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::MultiplierIndex::isValid(unsigned int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::MultiplierIndex::isValid(unsigned int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("SimTK!MultiplierIndex!isValid", static_cast<bool (*)(unsigned int) >(&SimTK::MultiplierIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::MultiplierIndex::isValid(unsigned short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::MultiplierIndex::isValid(unsigned short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("SimTK!MultiplierIndex!isValid", static_cast<bool (*)(unsigned short) >(&SimTK::MultiplierIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::MultiplierIndex::isValid(unsigned long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::MultiplierIndex::isValid(unsigned long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("SimTK!MultiplierIndex!isValid", static_cast<bool (*)(unsigned long) >(&SimTK::MultiplierIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::MultiplierIndex::isValid(unsigned long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::MultiplierIndex::isValid(unsigned long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("SimTK!MultiplierIndex!isValid", static_cast<bool (*)(unsigned long long) >(&SimTK::MultiplierIndex::isValid));

  DEBUG_MSG("Adding wrapper for bool SimTK::MultiplierIndex::isValidExtended(int) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::MultiplierIndex::isValidExtended(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("SimTK!MultiplierIndex!isValidExtended", static_cast<bool (*)(int) >(&SimTK::MultiplierIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for bool SimTK::MultiplierIndex::isValidExtended(short) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::MultiplierIndex::isValidExtended(short)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("SimTK!MultiplierIndex!isValidExtended", static_cast<bool (*)(short) >(&SimTK::MultiplierIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for bool SimTK::MultiplierIndex::isValidExtended(long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::MultiplierIndex::isValidExtended(long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("SimTK!MultiplierIndex!isValidExtended", static_cast<bool (*)(long) >(&SimTK::MultiplierIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for bool SimTK::MultiplierIndex::isValidExtended(long long) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::MultiplierIndex::isValidExtended(long long)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("SimTK!MultiplierIndex!isValidExtended", static_cast<bool (*)(long long) >(&SimTK::MultiplierIndex::isValidExtended));

  DEBUG_MSG("Adding wrapper for SimTK::MultiplierIndex::size_type SimTK::MultiplierIndex::max_size() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::MultiplierIndex::size_type SimTK::MultiplierIndex::max_size()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  t33.method("SimTK!MultiplierIndex!max_size", static_cast<SimTK::MultiplierIndex::size_type (*)() >(&SimTK::MultiplierIndex::max_size));

  /* End of SimTK::MultiplierIndex class method wrappers
   **********************************************************************/


  /**********************************************************************/
  /* Wrappers for the methods of class SimTK::State
   */


  DEBUG_MSG("Adding wrapper for void SimTK::State::State(const SimTK::State &) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:291:1
  t34.constructor<const SimTK::State &>();


  DEBUG_MSG("Adding wrapper for SimTK::State & SimTK::State::operator=(const SimTK::State &) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::State & SimTK::State::operator=(const SimTK::State &)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:302:8
  t34.method("assign", static_cast<SimTK::State & (SimTK::State::*)(const SimTK::State &) >(&SimTK::State::operator=));


  DEBUG_MSG("Adding wrapper for void SimTK::State::clear() (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::State::clear()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:312:6
  t34.method("clear", static_cast<void (SimTK::State::*)() >(&SimTK::State::clear));

  DEBUG_MSG("Adding wrapper for bool SimTK::State::isConsistent(const SimTK::State &) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::State::isConsistent(const SimTK::State &)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:337:6
  t34.method("isConsistent", static_cast<bool (SimTK::State::*)(const SimTK::State &)  const>(&SimTK::State::isConsistent));

  DEBUG_MSG("Adding wrapper for void SimTK::State::setNumSubsystems(int) (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::State::setNumSubsystems(int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:342:13
  t34.method("setNumSubsystems", static_cast<void (SimTK::State::*)(int) >(&SimTK::State::setNumSubsystems));

  DEBUG_MSG("Adding wrapper for void SimTK::State::initializeSubsystem(SimTK::SubsystemIndex, const SimTK::String &, const SimTK::String &) (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::State::initializeSubsystem(SimTK::SubsystemIndex, const SimTK::String &, const SimTK::String &)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:346:13
  t34.method("initializeSubsystem", static_cast<void (SimTK::State::*)(SimTK::SubsystemIndex, const SimTK::String &, const SimTK::String &) >(&SimTK::State::initializeSubsystem));

  DEBUG_MSG("Adding wrapper for SimTK::SubsystemIndex SimTK::State::addSubsystem(const SimTK::String &, const SimTK::String &) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SubsystemIndex SimTK::State::addSubsystem(const SimTK::String &, const SimTK::String &)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:355:23
  t34.method("addSubsystem", static_cast<SimTK::SubsystemIndex (SimTK::State::*)(const SimTK::String &, const SimTK::String &) >(&SimTK::State::addSubsystem));

  DEBUG_MSG("Adding wrapper for int SimTK::State::getNumSubsystems() (" __HERE__ ")");
  // signature to use in the veto list: int SimTK::State::getNumSubsystems()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:358:12
  t34.method("getNumSubsystems", static_cast<int (SimTK::State::*)()  const>(&SimTK::State::getNumSubsystems));

  DEBUG_MSG("Adding wrapper for const SimTK::String & SimTK::State::getSubsystemName(SimTK::SubsystemIndex) (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::String & SimTK::State::getSubsystemName(SimTK::SubsystemIndex)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:359:22
  t34.method("getSubsystemName", static_cast<const SimTK::String & (SimTK::State::*)(SimTK::SubsystemIndex)  const>(&SimTK::State::getSubsystemName));

  DEBUG_MSG("Adding wrapper for const SimTK::String & SimTK::State::getSubsystemVersion(SimTK::SubsystemIndex) (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::String & SimTK::State::getSubsystemVersion(SimTK::SubsystemIndex)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:360:22
  t34.method("getSubsystemVersion", static_cast<const SimTK::String & (SimTK::State::*)(SimTK::SubsystemIndex)  const>(&SimTK::State::getSubsystemVersion));

  DEBUG_MSG("Adding wrapper for const SimTK::Stage & SimTK::State::getSubsystemStage(SimTK::SubsystemIndex) (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::Stage & SimTK::State::getSubsystemStage(SimTK::SubsystemIndex)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:361:22
  t34.method("getSubsystemStage", static_cast<const SimTK::Stage & (SimTK::State::*)(SimTK::SubsystemIndex)  const>(&SimTK::State::getSubsystemStage));

  DEBUG_MSG("Adding wrapper for const SimTK::Stage & SimTK::State::getSystemStage() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::Stage & SimTK::State::getSystemStage()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:364:21
  t34.method("getSystemStage", static_cast<const SimTK::Stage & (SimTK::State::*)()  const>(&SimTK::State::getSystemStage));

  DEBUG_MSG("Adding wrapper for void SimTK::State::invalidateAll(SimTK::Stage) (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::State::invalidateAll(SimTK::Stage)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:372:13
  t34.method("invalidateAll", static_cast<void (SimTK::State::*)(SimTK::Stage) >(&SimTK::State::invalidateAll));

  DEBUG_MSG("Adding wrapper for void SimTK::State::invalidateAllCacheAtOrAbove(SimTK::Stage) (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::State::invalidateAllCacheAtOrAbove(SimTK::Stage)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:381:13
  t34.method("invalidateAllCacheAtOrAbove", static_cast<void (SimTK::State::*)(SimTK::Stage)  const>(&SimTK::State::invalidateAllCacheAtOrAbove));

  DEBUG_MSG("Adding wrapper for void SimTK::State::advanceSubsystemToStage(SimTK::SubsystemIndex, SimTK::Stage) (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::State::advanceSubsystemToStage(SimTK::SubsystemIndex, SimTK::Stage)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:389:13
  t34.method("advanceSubsystemToStage", static_cast<void (SimTK::State::*)(SimTK::SubsystemIndex, SimTK::Stage)  const>(&SimTK::State::advanceSubsystemToStage));

  DEBUG_MSG("Adding wrapper for void SimTK::State::advanceSystemToStage(SimTK::Stage) (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::State::advanceSystemToStage(SimTK::Stage)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:394:13
  t34.method("advanceSystemToStage", static_cast<void (SimTK::State::*)(SimTK::Stage)  const>(&SimTK::State::advanceSystemToStage));

  DEBUG_MSG("Adding wrapper for SimTK::StageVersion SimTK::State::getSystemTopologyStageVersion() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::StageVersion SimTK::State::getSystemTopologyStageVersion()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:400:21
  t34.method("getSystemTopologyStageVersion", static_cast<SimTK::StageVersion (SimTK::State::*)()  const>(&SimTK::State::getSystemTopologyStageVersion));

  DEBUG_MSG("Adding wrapper for SimTK::QErrIndex SimTK::State::allocateQErr(SimTK::SubsystemIndex, int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::QErrIndex SimTK::State::allocateQErr(SimTK::SubsystemIndex, int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:449:21
  t34.method("allocateQErr", static_cast<SimTK::QErrIndex (SimTK::State::*)(SimTK::SubsystemIndex, int)  const>(&SimTK::State::allocateQErr));

  DEBUG_MSG("Adding wrapper for SimTK::UErrIndex SimTK::State::allocateUErr(SimTK::SubsystemIndex, int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::UErrIndex SimTK::State::allocateUErr(SimTK::SubsystemIndex, int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:452:21
  t34.method("allocateUErr", static_cast<SimTK::UErrIndex (SimTK::State::*)(SimTK::SubsystemIndex, int)  const>(&SimTK::State::allocateUErr));

  DEBUG_MSG("Adding wrapper for SimTK::UDotErrIndex SimTK::State::allocateUDotErr(SimTK::SubsystemIndex, int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::UDotErrIndex SimTK::State::allocateUDotErr(SimTK::SubsystemIndex, int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:457:21
  t34.method("allocateUDotErr", static_cast<SimTK::UDotErrIndex (SimTK::State::*)(SimTK::SubsystemIndex, int)  const>(&SimTK::State::allocateUDotErr));

  DEBUG_MSG("Adding wrapper for SimTK::EventTriggerByStageIndex SimTK::State::allocateEventTrigger(SimTK::SubsystemIndex, SimTK::Stage, int) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::EventTriggerByStageIndex SimTK::State::allocateEventTrigger(SimTK::SubsystemIndex, SimTK::Stage, int)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:477:1
  t34.method("allocateEventTrigger", static_cast<SimTK::EventTriggerByStageIndex (SimTK::State::*)(SimTK::SubsystemIndex, SimTK::Stage, int)  const>(&SimTK::State::allocateEventTrigger));

  DEBUG_MSG("Adding wrapper for SimTK::DiscreteVariableIndex SimTK::State::allocateDiscreteVariable(SimTK::SubsystemIndex, SimTK::Stage, SimTK::AbstractValue *) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::DiscreteVariableIndex SimTK::State::allocateDiscreteVariable(SimTK::SubsystemIndex, SimTK::Stage, SimTK::AbstractValue *)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:505:1
  t34.method("allocateDiscreteVariable", static_cast<SimTK::DiscreteVariableIndex (SimTK::State::*)(SimTK::SubsystemIndex, SimTK::Stage, SimTK::AbstractValue *) >(&SimTK::State::allocateDiscreteVariable));

  DEBUG_MSG("Adding wrapper for SimTK::DiscreteVariableIndex SimTK::State::allocateAutoUpdateDiscreteVariable(SimTK::SubsystemIndex, SimTK::Stage, SimTK::AbstractValue *, SimTK::Stage) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::DiscreteVariableIndex SimTK::State::allocateAutoUpdateDiscreteVariable(SimTK::SubsystemIndex, SimTK::Stage, SimTK::AbstractValue *, SimTK::Stage)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:558:1
  t34.method("allocateAutoUpdateDiscreteVariable", static_cast<SimTK::DiscreteVariableIndex (SimTK::State::*)(SimTK::SubsystemIndex, SimTK::Stage, SimTK::AbstractValue *, SimTK::Stage) >(&SimTK::State::allocateAutoUpdateDiscreteVariable));

  DEBUG_MSG("Adding wrapper for SimTK::CacheEntryIndex SimTK::State::getDiscreteVarUpdateIndex(SimTK::SubsystemIndex, SimTK::DiscreteVariableIndex) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::CacheEntryIndex SimTK::State::getDiscreteVarUpdateIndex(SimTK::SubsystemIndex, SimTK::DiscreteVariableIndex)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:563:1
  t34.method("getDiscreteVarUpdateIndex", static_cast<SimTK::CacheEntryIndex (SimTK::State::*)(SimTK::SubsystemIndex, SimTK::DiscreteVariableIndex)  const>(&SimTK::State::getDiscreteVarUpdateIndex));

  DEBUG_MSG("Adding wrapper for SimTK::Stage SimTK::State::getDiscreteVarAllocationStage(SimTK::SubsystemIndex, SimTK::DiscreteVariableIndex) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Stage SimTK::State::getDiscreteVarAllocationStage(SimTK::SubsystemIndex, SimTK::DiscreteVariableIndex)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:567:1
  t34.method("getDiscreteVarAllocationStage", static_cast<SimTK::Stage (SimTK::State::*)(SimTK::SubsystemIndex, SimTK::DiscreteVariableIndex)  const>(&SimTK::State::getDiscreteVarAllocationStage));

  DEBUG_MSG("Adding wrapper for SimTK::Stage SimTK::State::getDiscreteVarInvalidatesStage(SimTK::SubsystemIndex, SimTK::DiscreteVariableIndex) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Stage SimTK::State::getDiscreteVarInvalidatesStage(SimTK::SubsystemIndex, SimTK::DiscreteVariableIndex)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:573:1
  t34.method("getDiscreteVarInvalidatesStage", static_cast<SimTK::Stage (SimTK::State::*)(SimTK::SubsystemIndex, SimTK::DiscreteVariableIndex)  const>(&SimTK::State::getDiscreteVarInvalidatesStage));

  DEBUG_MSG("Adding wrapper for const SimTK::AbstractValue & SimTK::State::getDiscreteVariable(SimTK::SubsystemIndex, SimTK::DiscreteVariableIndex) (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::AbstractValue & SimTK::State::getDiscreteVariable(SimTK::SubsystemIndex, SimTK::DiscreteVariableIndex)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:579:1
  t34.method("getDiscreteVariable", static_cast<const SimTK::AbstractValue & (SimTK::State::*)(SimTK::SubsystemIndex, SimTK::DiscreteVariableIndex)  const>(&SimTK::State::getDiscreteVariable));

  DEBUG_MSG("Adding wrapper for SimTK::Real SimTK::State::getDiscreteVarLastUpdateTime(SimTK::SubsystemIndex, SimTK::DiscreteVariableIndex) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Real SimTK::State::getDiscreteVarLastUpdateTime(SimTK::SubsystemIndex, SimTK::DiscreteVariableIndex)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:582:1
  t34.method("getDiscreteVarLastUpdateTime", static_cast<SimTK::Real (SimTK::State::*)(SimTK::SubsystemIndex, SimTK::DiscreteVariableIndex)  const>(&SimTK::State::getDiscreteVarLastUpdateTime));

  DEBUG_MSG("Adding wrapper for const SimTK::AbstractValue & SimTK::State::getDiscreteVarUpdateValue(SimTK::SubsystemIndex, SimTK::DiscreteVariableIndex) (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::AbstractValue & SimTK::State::getDiscreteVarUpdateValue(SimTK::SubsystemIndex, SimTK::DiscreteVariableIndex)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:588:1
  t34.method("getDiscreteVarUpdateValue", static_cast<const SimTK::AbstractValue & (SimTK::State::*)(SimTK::SubsystemIndex, SimTK::DiscreteVariableIndex)  const>(&SimTK::State::getDiscreteVarUpdateValue));

  DEBUG_MSG("Adding wrapper for SimTK::AbstractValue & SimTK::State::updDiscreteVarUpdateValue(SimTK::SubsystemIndex, SimTK::DiscreteVariableIndex) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::AbstractValue & SimTK::State::updDiscreteVarUpdateValue(SimTK::SubsystemIndex, SimTK::DiscreteVariableIndex)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:595:1
  t34.method("updDiscreteVarUpdateValue", static_cast<SimTK::AbstractValue & (SimTK::State::*)(SimTK::SubsystemIndex, SimTK::DiscreteVariableIndex)  const>(&SimTK::State::updDiscreteVarUpdateValue));

  DEBUG_MSG("Adding wrapper for bool SimTK::State::isDiscreteVarUpdateValueRealized(SimTK::SubsystemIndex, SimTK::DiscreteVariableIndex) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::State::isDiscreteVarUpdateValueRealized(SimTK::SubsystemIndex, SimTK::DiscreteVariableIndex)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:600:1
  t34.method("isDiscreteVarUpdateValueRealized", static_cast<bool (SimTK::State::*)(SimTK::SubsystemIndex, SimTK::DiscreteVariableIndex)  const>(&SimTK::State::isDiscreteVarUpdateValueRealized));

  DEBUG_MSG("Adding wrapper for void SimTK::State::markDiscreteVarUpdateValueRealized(SimTK::SubsystemIndex, SimTK::DiscreteVariableIndex) (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::State::markDiscreteVarUpdateValueRealized(SimTK::SubsystemIndex, SimTK::DiscreteVariableIndex)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:604:1
  t34.method("markDiscreteVarUpdateValueRealized", static_cast<void (SimTK::State::*)(SimTK::SubsystemIndex, SimTK::DiscreteVariableIndex)  const>(&SimTK::State::markDiscreteVarUpdateValueRealized));

  DEBUG_MSG("Adding wrapper for SimTK::AbstractValue & SimTK::State::updDiscreteVariable(SimTK::SubsystemIndex, SimTK::DiscreteVariableIndex) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::AbstractValue & SimTK::State::updDiscreteVariable(SimTK::SubsystemIndex, SimTK::DiscreteVariableIndex)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:610:1
  t34.method("updDiscreteVariable", static_cast<SimTK::AbstractValue & (SimTK::State::*)(SimTK::SubsystemIndex, SimTK::DiscreteVariableIndex) >(&SimTK::State::updDiscreteVariable));

  DEBUG_MSG("Adding wrapper for void SimTK::State::setDiscreteVariable(SimTK::SubsystemIndex, SimTK::DiscreteVariableIndex, const SimTK::AbstractValue &) (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::State::setDiscreteVariable(SimTK::SubsystemIndex, SimTK::DiscreteVariableIndex, const SimTK::AbstractValue &)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:613:1
  t34.method("setDiscreteVariable", static_cast<void (SimTK::State::*)(SimTK::SubsystemIndex, SimTK::DiscreteVariableIndex, const SimTK::AbstractValue &) >(&SimTK::State::setDiscreteVariable));

  DEBUG_MSG("Adding wrapper for SimTK::CacheEntryIndex SimTK::State::allocateCacheEntry(SimTK::SubsystemIndex, SimTK::Stage, SimTK::Stage, SimTK::AbstractValue *) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::CacheEntryIndex SimTK::State::allocateCacheEntry(SimTK::SubsystemIndex, SimTK::Stage, SimTK::Stage, SimTK::AbstractValue *)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:697:1
  t34.method("allocateCacheEntry", static_cast<SimTK::CacheEntryIndex (SimTK::State::*)(SimTK::SubsystemIndex, SimTK::Stage, SimTK::Stage, SimTK::AbstractValue *)  const>(&SimTK::State::allocateCacheEntry));

  DEBUG_MSG("Adding wrapper for SimTK::CacheEntryIndex SimTK::State::allocateCacheEntry(SimTK::SubsystemIndex, SimTK::Stage, SimTK::AbstractValue *) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::CacheEntryIndex SimTK::State::allocateCacheEntry(SimTK::SubsystemIndex, SimTK::Stage, SimTK::AbstractValue *)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:705:1
  t34.method("allocateCacheEntry", static_cast<SimTK::CacheEntryIndex (SimTK::State::*)(SimTK::SubsystemIndex, SimTK::Stage, SimTK::AbstractValue *)  const>(&SimTK::State::allocateCacheEntry));

  DEBUG_MSG("Adding wrapper for SimTK::CacheEntryIndex SimTK::State::allocateLazyCacheEntry(SimTK::SubsystemIndex, SimTK::Stage, SimTK::AbstractValue *) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::CacheEntryIndex SimTK::State::allocateLazyCacheEntry(SimTK::SubsystemIndex, SimTK::Stage, SimTK::AbstractValue *)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:718:1
  t34.method("allocateLazyCacheEntry", static_cast<SimTK::CacheEntryIndex (SimTK::State::*)(SimTK::SubsystemIndex, SimTK::Stage, SimTK::AbstractValue *)  const>(&SimTK::State::allocateLazyCacheEntry));

  DEBUG_MSG("Adding wrapper for SimTK::Stage SimTK::State::getCacheEntryAllocationStage(SimTK::SubsystemIndex, SimTK::CacheEntryIndex) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Stage SimTK::State::getCacheEntryAllocationStage(SimTK::SubsystemIndex, SimTK::CacheEntryIndex)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:738:1
  t34.method("getCacheEntryAllocationStage", static_cast<SimTK::Stage (SimTK::State::*)(SimTK::SubsystemIndex, SimTK::CacheEntryIndex)  const>(&SimTK::State::getCacheEntryAllocationStage));

  DEBUG_MSG("Adding wrapper for const SimTK::AbstractValue & SimTK::State::getCacheEntry(SimTK::SubsystemIndex, SimTK::CacheEntryIndex) (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::AbstractValue & SimTK::State::getCacheEntry(SimTK::SubsystemIndex, SimTK::CacheEntryIndex)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:747:1
  t34.method("getCacheEntry", static_cast<const SimTK::AbstractValue & (SimTK::State::*)(SimTK::SubsystemIndex, SimTK::CacheEntryIndex)  const>(&SimTK::State::getCacheEntry));

  DEBUG_MSG("Adding wrapper for SimTK::AbstractValue & SimTK::State::updCacheEntry(SimTK::SubsystemIndex, SimTK::CacheEntryIndex) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::AbstractValue & SimTK::State::updCacheEntry(SimTK::SubsystemIndex, SimTK::CacheEntryIndex)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:756:1
  t34.method("updCacheEntry", static_cast<SimTK::AbstractValue & (SimTK::State::*)(SimTK::SubsystemIndex, SimTK::CacheEntryIndex)  const>(&SimTK::State::updCacheEntry));

  DEBUG_MSG("Adding wrapper for bool SimTK::State::isCacheValueRealized(SimTK::SubsystemIndex, SimTK::CacheEntryIndex) (" __HERE__ ")");
  // signature to use in the veto list: bool SimTK::State::isCacheValueRealized(SimTK::SubsystemIndex, SimTK::CacheEntryIndex)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:766:13
  t34.method("isCacheValueRealized", static_cast<bool (SimTK::State::*)(SimTK::SubsystemIndex, SimTK::CacheEntryIndex)  const>(&SimTK::State::isCacheValueRealized));

  DEBUG_MSG("Adding wrapper for void SimTK::State::markCacheValueRealized(SimTK::SubsystemIndex, SimTK::CacheEntryIndex) (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::State::markCacheValueRealized(SimTK::SubsystemIndex, SimTK::CacheEntryIndex)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:780:13
  t34.method("markCacheValueRealized", static_cast<void (SimTK::State::*)(SimTK::SubsystemIndex, SimTK::CacheEntryIndex)  const>(&SimTK::State::markCacheValueRealized));

  DEBUG_MSG("Adding wrapper for void SimTK::State::markCacheValueNotRealized(SimTK::SubsystemIndex, SimTK::CacheEntryIndex) (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::State::markCacheValueNotRealized(SimTK::SubsystemIndex, SimTK::CacheEntryIndex)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:787:13
  t34.method("markCacheValueNotRealized", static_cast<void (SimTK::State::*)(SimTK::SubsystemIndex, SimTK::CacheEntryIndex)  const>(&SimTK::State::markCacheValueNotRealized));

  DEBUG_MSG("Adding wrapper for int SimTK::State::getNY() (" __HERE__ ")");
  // signature to use in the veto list: int SimTK::State::getNY()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:810:12
  t34.method("getNY", static_cast<int (SimTK::State::*)()  const>(&SimTK::State::getNY));

  DEBUG_MSG("Adding wrapper for int SimTK::State::getNQ() (" __HERE__ ")");
  // signature to use in the veto list: int SimTK::State::getNQ()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:815:12
  t34.method("getNQ", static_cast<int (SimTK::State::*)()  const>(&SimTK::State::getNQ));

  DEBUG_MSG("Adding wrapper for SimTK::SystemYIndex SimTK::State::getQStart() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemYIndex SimTK::State::getQStart()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:817:21
  t34.method("getQStart", static_cast<SimTK::SystemYIndex (SimTK::State::*)()  const>(&SimTK::State::getQStart));

  DEBUG_MSG("Adding wrapper for int SimTK::State::getNU() (" __HERE__ ")");
  // signature to use in the veto list: int SimTK::State::getNU()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:821:12
  t34.method("getNU", static_cast<int (SimTK::State::*)()  const>(&SimTK::State::getNU));

  DEBUG_MSG("Adding wrapper for SimTK::SystemYIndex SimTK::State::getUStart() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemYIndex SimTK::State::getUStart()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:823:21
  t34.method("getUStart", static_cast<SimTK::SystemYIndex (SimTK::State::*)()  const>(&SimTK::State::getUStart));

  DEBUG_MSG("Adding wrapper for int SimTK::State::getNZ() (" __HERE__ ")");
  // signature to use in the veto list: int SimTK::State::getNZ()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:827:12
  t34.method("getNZ", static_cast<int (SimTK::State::*)()  const>(&SimTK::State::getNZ));

  DEBUG_MSG("Adding wrapper for SimTK::SystemYIndex SimTK::State::getZStart() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemYIndex SimTK::State::getZStart()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:829:21
  t34.method("getZStart", static_cast<SimTK::SystemYIndex (SimTK::State::*)()  const>(&SimTK::State::getZStart));

  DEBUG_MSG("Adding wrapper for int SimTK::State::getNYErr() (" __HERE__ ")");
  // signature to use in the veto list: int SimTK::State::getNYErr()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:833:12
  t34.method("getNYErr", static_cast<int (SimTK::State::*)()  const>(&SimTK::State::getNYErr));

  DEBUG_MSG("Adding wrapper for int SimTK::State::getNQErr() (" __HERE__ ")");
  // signature to use in the veto list: int SimTK::State::getNQErr()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:836:12
  t34.method("getNQErr", static_cast<int (SimTK::State::*)()  const>(&SimTK::State::getNQErr));

  DEBUG_MSG("Adding wrapper for SimTK::SystemYErrIndex SimTK::State::getQErrStart() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemYErrIndex SimTK::State::getQErrStart()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:838:24
  t34.method("getQErrStart", static_cast<SimTK::SystemYErrIndex (SimTK::State::*)()  const>(&SimTK::State::getQErrStart));

  DEBUG_MSG("Adding wrapper for int SimTK::State::getNUErr() (" __HERE__ ")");
  // signature to use in the veto list: int SimTK::State::getNUErr()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:842:12
  t34.method("getNUErr", static_cast<int (SimTK::State::*)()  const>(&SimTK::State::getNUErr));

  DEBUG_MSG("Adding wrapper for SimTK::SystemYErrIndex SimTK::State::getUErrStart() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemYErrIndex SimTK::State::getUErrStart()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:844:24
  t34.method("getUErrStart", static_cast<SimTK::SystemYErrIndex (SimTK::State::*)()  const>(&SimTK::State::getUErrStart));

  DEBUG_MSG("Adding wrapper for int SimTK::State::getNUDotErr() (" __HERE__ ")");
  // signature to use in the veto list: int SimTK::State::getNUDotErr()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:849:12
  t34.method("getNUDotErr", static_cast<int (SimTK::State::*)()  const>(&SimTK::State::getNUDotErr));

  DEBUG_MSG("Adding wrapper for int SimTK::State::getNMultipliers() (" __HERE__ ")");
  // signature to use in the veto list: int SimTK::State::getNMultipliers()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:854:12
  t34.method("getNMultipliers", static_cast<int (SimTK::State::*)()  const>(&SimTK::State::getNMultipliers));

  DEBUG_MSG("Adding wrapper for int SimTK::State::getNEventTriggers() (" __HERE__ ")");
  // signature to use in the veto list: int SimTK::State::getNEventTriggers()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:857:12
  t34.method("getNEventTriggers", static_cast<int (SimTK::State::*)()  const>(&SimTK::State::getNEventTriggers));

  DEBUG_MSG("Adding wrapper for int SimTK::State::getNEventTriggersByStage(SimTK::Stage) (" __HERE__ ")");
  // signature to use in the veto list: int SimTK::State::getNEventTriggersByStage(SimTK::Stage)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:860:12
  t34.method("getNEventTriggersByStage", static_cast<int (SimTK::State::*)(SimTK::Stage)  const>(&SimTK::State::getNEventTriggersByStage));

  DEBUG_MSG("Adding wrapper for SimTK::SystemEventTriggerIndex SimTK::State::getEventTriggerStartByStage(SimTK::Stage) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemEventTriggerIndex SimTK::State::getEventTriggerStartByStage(SimTK::Stage)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:864:32
  t34.method("getEventTriggerStartByStage", static_cast<SimTK::SystemEventTriggerIndex (SimTK::State::*)(SimTK::Stage)  const>(&SimTK::State::getEventTriggerStartByStage));

  DEBUG_MSG("Adding wrapper for SimTK::SystemQIndex SimTK::State::getQStart(SimTK::SubsystemIndex) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemQIndex SimTK::State::getQStart(SimTK::SubsystemIndex)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:888:21
  t34.method("getQStart", static_cast<SimTK::SystemQIndex (SimTK::State::*)(SimTK::SubsystemIndex)  const>(&SimTK::State::getQStart));

  DEBUG_MSG("Adding wrapper for int SimTK::State::getNQ(SimTK::SubsystemIndex) (" __HERE__ ")");
  // signature to use in the veto list: int SimTK::State::getNQ(SimTK::SubsystemIndex)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:889:12
  t34.method("getNQ", static_cast<int (SimTK::State::*)(SimTK::SubsystemIndex)  const>(&SimTK::State::getNQ));

  DEBUG_MSG("Adding wrapper for SimTK::SystemUIndex SimTK::State::getUStart(SimTK::SubsystemIndex) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemUIndex SimTK::State::getUStart(SimTK::SubsystemIndex)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:890:21
  t34.method("getUStart", static_cast<SimTK::SystemUIndex (SimTK::State::*)(SimTK::SubsystemIndex)  const>(&SimTK::State::getUStart));

  DEBUG_MSG("Adding wrapper for int SimTK::State::getNU(SimTK::SubsystemIndex) (" __HERE__ ")");
  // signature to use in the veto list: int SimTK::State::getNU(SimTK::SubsystemIndex)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:891:12
  t34.method("getNU", static_cast<int (SimTK::State::*)(SimTK::SubsystemIndex)  const>(&SimTK::State::getNU));

  DEBUG_MSG("Adding wrapper for SimTK::SystemZIndex SimTK::State::getZStart(SimTK::SubsystemIndex) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemZIndex SimTK::State::getZStart(SimTK::SubsystemIndex)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:892:21
  t34.method("getZStart", static_cast<SimTK::SystemZIndex (SimTK::State::*)(SimTK::SubsystemIndex)  const>(&SimTK::State::getZStart));

  DEBUG_MSG("Adding wrapper for int SimTK::State::getNZ(SimTK::SubsystemIndex) (" __HERE__ ")");
  // signature to use in the veto list: int SimTK::State::getNZ(SimTK::SubsystemIndex)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:893:12
  t34.method("getNZ", static_cast<int (SimTK::State::*)(SimTK::SubsystemIndex)  const>(&SimTK::State::getNZ));

  DEBUG_MSG("Adding wrapper for SimTK::SystemQErrIndex SimTK::State::getQErrStart(SimTK::SubsystemIndex) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemQErrIndex SimTK::State::getQErrStart(SimTK::SubsystemIndex)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:895:24
  t34.method("getQErrStart", static_cast<SimTK::SystemQErrIndex (SimTK::State::*)(SimTK::SubsystemIndex)  const>(&SimTK::State::getQErrStart));

  DEBUG_MSG("Adding wrapper for int SimTK::State::getNQErr(SimTK::SubsystemIndex) (" __HERE__ ")");
  // signature to use in the veto list: int SimTK::State::getNQErr(SimTK::SubsystemIndex)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:896:12
  t34.method("getNQErr", static_cast<int (SimTK::State::*)(SimTK::SubsystemIndex)  const>(&SimTK::State::getNQErr));

  DEBUG_MSG("Adding wrapper for SimTK::SystemUErrIndex SimTK::State::getUErrStart(SimTK::SubsystemIndex) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemUErrIndex SimTK::State::getUErrStart(SimTK::SubsystemIndex)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:897:24
  t34.method("getUErrStart", static_cast<SimTK::SystemUErrIndex (SimTK::State::*)(SimTK::SubsystemIndex)  const>(&SimTK::State::getUErrStart));

  DEBUG_MSG("Adding wrapper for int SimTK::State::getNUErr(SimTK::SubsystemIndex) (" __HERE__ ")");
  // signature to use in the veto list: int SimTK::State::getNUErr(SimTK::SubsystemIndex)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:898:12
  t34.method("getNUErr", static_cast<int (SimTK::State::*)(SimTK::SubsystemIndex)  const>(&SimTK::State::getNUErr));

  DEBUG_MSG("Adding wrapper for SimTK::SystemUDotErrIndex SimTK::State::getUDotErrStart(SimTK::SubsystemIndex) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemUDotErrIndex SimTK::State::getUDotErrStart(SimTK::SubsystemIndex)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:899:27
  t34.method("getUDotErrStart", static_cast<SimTK::SystemUDotErrIndex (SimTK::State::*)(SimTK::SubsystemIndex)  const>(&SimTK::State::getUDotErrStart));

  DEBUG_MSG("Adding wrapper for int SimTK::State::getNUDotErr(SimTK::SubsystemIndex) (" __HERE__ ")");
  // signature to use in the veto list: int SimTK::State::getNUDotErr(SimTK::SubsystemIndex)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:900:12
  t34.method("getNUDotErr", static_cast<int (SimTK::State::*)(SimTK::SubsystemIndex)  const>(&SimTK::State::getNUDotErr));

  DEBUG_MSG("Adding wrapper for SimTK::SystemMultiplierIndex SimTK::State::getMultipliersStart(SimTK::SubsystemIndex) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemMultiplierIndex SimTK::State::getMultipliersStart(SimTK::SubsystemIndex)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:901:30
  t34.method("getMultipliersStart", static_cast<SimTK::SystemMultiplierIndex (SimTK::State::*)(SimTK::SubsystemIndex)  const>(&SimTK::State::getMultipliersStart));

  DEBUG_MSG("Adding wrapper for int SimTK::State::getNMultipliers(SimTK::SubsystemIndex) (" __HERE__ ")");
  // signature to use in the veto list: int SimTK::State::getNMultipliers(SimTK::SubsystemIndex)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:902:12
  t34.method("getNMultipliers", static_cast<int (SimTK::State::*)(SimTK::SubsystemIndex)  const>(&SimTK::State::getNMultipliers));

  DEBUG_MSG("Adding wrapper for SimTK::SystemEventTriggerByStageIndex SimTK::State::getEventTriggerStartByStage(SimTK::SubsystemIndex, SimTK::Stage) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::SystemEventTriggerByStageIndex SimTK::State::getEventTriggerStartByStage(SimTK::SubsystemIndex, SimTK::Stage)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:905:5
  t34.method("getEventTriggerStartByStage", static_cast<SimTK::SystemEventTriggerByStageIndex (SimTK::State::*)(SimTK::SubsystemIndex, SimTK::Stage)  const>(&SimTK::State::getEventTriggerStartByStage));

  DEBUG_MSG("Adding wrapper for int SimTK::State::getNEventTriggersByStage(SimTK::SubsystemIndex, SimTK::Stage) (" __HERE__ ")");
  // signature to use in the veto list: int SimTK::State::getNEventTriggersByStage(SimTK::SubsystemIndex, SimTK::Stage)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:906:12
  t34.method("getNEventTriggersByStage", static_cast<int (SimTK::State::*)(SimTK::SubsystemIndex, SimTK::Stage)  const>(&SimTK::State::getNEventTriggersByStage));

  DEBUG_MSG("Adding wrapper for const SimTK::Real & SimTK::State::getTime() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::Real & SimTK::State::getTime()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:961:22
  t34.method("getTime", static_cast<const SimTK::Real & (SimTK::State::*)()  const>(&SimTK::State::getTime));

  DEBUG_MSG("Adding wrapper for SimTK::Real & SimTK::State::updTime() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::Real & SimTK::State::updTime()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:1026:16
  t34.method("updTime", static_cast<SimTK::Real & (SimTK::State::*)() >(&SimTK::State::updTime));

  DEBUG_MSG("Adding wrapper for void SimTK::State::setTime(SimTK::Real) (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::State::setTime(SimTK::Real)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:1030:13
  t34.method("setTime", static_cast<void (SimTK::State::*)(SimTK::Real) >(&SimTK::State::setTime));

  DEBUG_MSG("Adding wrapper for void SimTK::State::setSystemTopologyStageVersion(SimTK::StageVersion) (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::State::setSystemTopologyStageVersion(SimTK::StageVersion)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:1143:13
  t34.method("setSystemTopologyStageVersion", static_cast<void (SimTK::State::*)(SimTK::StageVersion) >(&SimTK::State::setSystemTopologyStageVersion));

  DEBUG_MSG("Adding wrapper for SimTK::ValueVersion SimTK::State::getQValueVersion() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::ValueVersion SimTK::State::getQValueVersion()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:1149:21
  t34.method("getQValueVersion", static_cast<SimTK::ValueVersion (SimTK::State::*)()  const>(&SimTK::State::getQValueVersion));

  DEBUG_MSG("Adding wrapper for SimTK::ValueVersion SimTK::State::getUValueVersion() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::ValueVersion SimTK::State::getUValueVersion()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:1154:21
  t34.method("getUValueVersion", static_cast<SimTK::ValueVersion (SimTK::State::*)()  const>(&SimTK::State::getUValueVersion));

  DEBUG_MSG("Adding wrapper for SimTK::ValueVersion SimTK::State::getZValueVersion() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::ValueVersion SimTK::State::getZValueVersion()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:1159:21
  t34.method("getZValueVersion", static_cast<SimTK::ValueVersion (SimTK::State::*)()  const>(&SimTK::State::getZValueVersion));

  DEBUG_MSG("Adding wrapper for const SimTK::ListOfDependents & SimTK::State::getQDependents() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::ListOfDependents & SimTK::State::getQDependents()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:1164:32
  t34.method("getQDependents", static_cast<const SimTK::ListOfDependents & (SimTK::State::*)()  const>(&SimTK::State::getQDependents));

  DEBUG_MSG("Adding wrapper for const SimTK::ListOfDependents & SimTK::State::getUDependents() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::ListOfDependents & SimTK::State::getUDependents()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:1168:32
  t34.method("getUDependents", static_cast<const SimTK::ListOfDependents & (SimTK::State::*)()  const>(&SimTK::State::getUDependents));

  DEBUG_MSG("Adding wrapper for const SimTK::ListOfDependents & SimTK::State::getZDependents() (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::ListOfDependents & SimTK::State::getZDependents()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:1172:32
  t34.method("getZDependents", static_cast<const SimTK::ListOfDependents & (SimTK::State::*)()  const>(&SimTK::State::getZDependents));

  DEBUG_MSG("Adding wrapper for const SimTK::PerSubsystemInfo & SimTK::State::getPerSubsystemInfo(SimTK::SubsystemIndex) (" __HERE__ ")");
  // signature to use in the veto list: const SimTK::PerSubsystemInfo & SimTK::State::getPerSubsystemInfo(SimTK::SubsystemIndex)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:1199:1
  t34.method("getPerSubsystemInfo", static_cast<const SimTK::PerSubsystemInfo & (SimTK::State::*)(SimTK::SubsystemIndex)  const>(&SimTK::State::getPerSubsystemInfo));

  DEBUG_MSG("Adding wrapper for void SimTK::State::autoUpdateDiscreteVariables() (" __HERE__ ")");
  // signature to use in the veto list: void SimTK::State::autoUpdateDiscreteVariables()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:1204:13
  t34.method("autoUpdateDiscreteVariables", static_cast<void (SimTK::State::*)() >(&SimTK::State::autoUpdateDiscreteVariables));

  DEBUG_MSG("Adding wrapper for SimTK::String SimTK::State::toString() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::String SimTK::State::toString()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:1207:15
  t34.method("toString", static_cast<SimTK::String (SimTK::State::*)()  const>(&SimTK::State::toString));

  DEBUG_MSG("Adding wrapper for SimTK::String SimTK::State::cacheToString() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::String SimTK::State::cacheToString()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:1209:15
  t34.method("cacheToString", static_cast<SimTK::String (SimTK::State::*)()  const>(&SimTK::State::cacheToString));

  /* End of SimTK::State class method wrappers
   **********************************************************************/


  /**********************************************************************
   * Wrappers for global functions and variables including
   * class static members
   */

  DEBUG_MSG("Adding SimTK!InvalidEventId methods to provide access to the global variable SimTK::InvalidEventId (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:39:1
  types.method("SimTK!InvalidEventId", []()-> const SimTK::EventId& { return SimTK::InvalidEventId; });

  DEBUG_MSG("Adding SimTK!InvalidSystemEventTriggerIndex methods to provide access to the global variable SimTK::InvalidSystemEventTriggerIndex (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:47:1
  types.method("SimTK!InvalidSystemEventTriggerIndex", []()-> const SimTK::SystemEventTriggerIndex& { return SimTK::InvalidSystemEventTriggerIndex; });

  DEBUG_MSG("Adding SimTK!InvalidSystemEventTriggerByStageIndex methods to provide access to the global variable SimTK::InvalidSystemEventTriggerByStageIndex (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:57:1
  types.method("SimTK!InvalidSystemEventTriggerByStageIndex", []()-> const SimTK::SystemEventTriggerByStageIndex& { return SimTK::InvalidSystemEventTriggerByStageIndex; });

  DEBUG_MSG("Adding SimTK!InvalidEventTriggerByStageIndex methods to provide access to the global variable SimTK::InvalidEventTriggerByStageIndex (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/Event.h:62:1
  types.method("SimTK!InvalidEventTriggerByStageIndex", []()-> const SimTK::EventTriggerByStageIndex& { return SimTK::InvalidEventTriggerByStageIndex; });

  DEBUG_MSG("Adding SimTK!InvalidSubsystemIndex methods to provide access to the global variable SimTK::InvalidSubsystemIndex (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:48:1
  types.method("SimTK!InvalidSubsystemIndex", []()-> const SimTK::SubsystemIndex& { return SimTK::InvalidSubsystemIndex; });

  DEBUG_MSG("Adding SimTK!InvalidSystemYIndex methods to provide access to the global variable SimTK::InvalidSystemYIndex (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:56:1
  types.method("SimTK!InvalidSystemYIndex", []()-> const SimTK::SystemYIndex& { return SimTK::InvalidSystemYIndex; });

  DEBUG_MSG("Adding SimTK!InvalidSystemQIndex methods to provide access to the global variable SimTK::InvalidSystemQIndex (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:65:1
  types.method("SimTK!InvalidSystemQIndex", []()-> const SimTK::SystemQIndex& { return SimTK::InvalidSystemQIndex; });

  DEBUG_MSG("Adding SimTK!InvalidQIndex methods to provide access to the global variable SimTK::InvalidQIndex (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:69:1
  types.method("SimTK!InvalidQIndex", []()-> const SimTK::QIndex& { return SimTK::InvalidQIndex; });

  DEBUG_MSG("Adding SimTK!InvalidSystemUIndex methods to provide access to the global variable SimTK::InvalidSystemUIndex (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:77:1
  types.method("SimTK!InvalidSystemUIndex", []()-> const SimTK::SystemUIndex& { return SimTK::InvalidSystemUIndex; });

  DEBUG_MSG("Adding SimTK!InvalidUIndex methods to provide access to the global variable SimTK::InvalidUIndex (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:81:1
  types.method("SimTK!InvalidUIndex", []()-> const SimTK::UIndex& { return SimTK::InvalidUIndex; });

  DEBUG_MSG("Adding SimTK!InvalidSystemZIndex methods to provide access to the global variable SimTK::InvalidSystemZIndex (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:89:1
  types.method("SimTK!InvalidSystemZIndex", []()-> const SimTK::SystemZIndex& { return SimTK::InvalidSystemZIndex; });

  DEBUG_MSG("Adding SimTK!InvalidZIndex methods to provide access to the global variable SimTK::InvalidZIndex (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:93:1
  types.method("SimTK!InvalidZIndex", []()-> const SimTK::ZIndex& { return SimTK::InvalidZIndex; });

  DEBUG_MSG("Adding SimTK!InvalidDiscreteVariableIndex methods to provide access to the global variable SimTK::InvalidDiscreteVariableIndex (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:99:1
  types.method("SimTK!InvalidDiscreteVariableIndex", []()-> const SimTK::DiscreteVariableIndex& { return SimTK::InvalidDiscreteVariableIndex; });

  DEBUG_MSG("Adding SimTK!InvalidCacheEntryIndex methods to provide access to the global variable SimTK::InvalidCacheEntryIndex (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:105:1
  types.method("SimTK!InvalidCacheEntryIndex", []()-> const SimTK::CacheEntryIndex& { return SimTK::InvalidCacheEntryIndex; });

  DEBUG_MSG("Adding SimTK!InvalidSystemYErrIndex methods to provide access to the global variable SimTK::InvalidSystemYErrIndex (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:112:1
  types.method("SimTK!InvalidSystemYErrIndex", []()-> const SimTK::SystemYErrIndex& { return SimTK::InvalidSystemYErrIndex; });

  DEBUG_MSG("Adding SimTK!InvalidSystemQErrIndex methods to provide access to the global variable SimTK::InvalidSystemQErrIndex (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:119:1
  types.method("SimTK!InvalidSystemQErrIndex", []()-> const SimTK::SystemQErrIndex& { return SimTK::InvalidSystemQErrIndex; });

  DEBUG_MSG("Adding SimTK!InvalidQErrIndex methods to provide access to the global variable SimTK::InvalidQErrIndex (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:123:1
  types.method("SimTK!InvalidQErrIndex", []()-> const SimTK::QErrIndex& { return SimTK::InvalidQErrIndex; });

  DEBUG_MSG("Adding SimTK!InvalidSystemUErrIndex methods to provide access to the global variable SimTK::InvalidSystemUErrIndex (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:130:1
  types.method("SimTK!InvalidSystemUErrIndex", []()-> const SimTK::SystemUErrIndex& { return SimTK::InvalidSystemUErrIndex; });

  DEBUG_MSG("Adding SimTK!InvalidUErrIndex methods to provide access to the global variable SimTK::InvalidUErrIndex (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:134:1
  types.method("SimTK!InvalidUErrIndex", []()-> const SimTK::UErrIndex& { return SimTK::InvalidUErrIndex; });

  DEBUG_MSG("Adding SimTK!InvalidSystemUDotErrIndex methods to provide access to the global variable SimTK::InvalidSystemUDotErrIndex (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:141:1
  types.method("SimTK!InvalidSystemUDotErrIndex", []()-> const SimTK::SystemUDotErrIndex& { return SimTK::InvalidSystemUDotErrIndex; });

  DEBUG_MSG("Adding SimTK!InvalidUDotErrIndex methods to provide access to the global variable SimTK::InvalidUDotErrIndex (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:145:1
  types.method("SimTK!InvalidUDotErrIndex", []()-> const SimTK::UDotErrIndex& { return SimTK::InvalidUDotErrIndex; });

  DEBUG_MSG("Adding SimTK!InvalidSystemMultiplierIndex methods to provide access to the global variable SimTK::InvalidSystemMultiplierIndex (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:152:1
  types.method("SimTK!InvalidSystemMultiplierIndex", []()-> const SimTK::SystemMultiplierIndex& { return SimTK::InvalidSystemMultiplierIndex; });

  DEBUG_MSG("Adding SimTK!InvalidMultiplierIndex methods to provide access to the global variable SimTK::InvalidMultiplierIndex (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/State.h:156:1
  types.method("SimTK!InvalidMultiplierIndex", []()-> const SimTK::MultiplierIndex& { return SimTK::InvalidMultiplierIndex; });

  /* End of global function wrappers
   **********************************************************************/

  using array_types = jlcxx::ParameterList<SimTK::CacheEntryIndex, 
    // SimTK::CacheEntryInfo, SimTK::DiscreteVarInfo,
    SimTK::EventId, SimTK::EventTriggerInfo, SimTK::SystemQIndex, SimTK::SystemUIndex>;
  jlcxx::for_each_parameter_type<array_types>(array_wrapper);

  DEBUG_MSG("End of wrapper definitions");

}
}
