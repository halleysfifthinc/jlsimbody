// this file was auto-generated by wrapit v1.3.3
#include "jlsimbody/common.h"

#include "jlSimTKcommon/Xml.h"

namespace jlcxx {
  template<> struct IsMirroredType<SimTK::Xml::node_iterator> : std::false_type { };
  template<> struct DefaultConstructible<SimTK::Xml::node_iterator> : std::false_type { };
}

namespace jlsimbody {

// Class generating the wrapper for type SimTK::Xml::node_iterator
struct JlSimTK_Xml_node_iterator: public Wrapper {

  JlSimTK_Xml_node_iterator(jlcxx::Module& module): Wrapper(module){
    DEBUG_MSG("type SimTK::Xml::node_iterator (" __HERE__ ")");
    // defined in simbody/SimTKcommon/internal/Xml.h:909:32
    auto t = module.add_type<SimTK::Xml::node_iterator>("Xmlnode_iterator");
    CLEAR_DEBUG_MSG();

    type_ = std::unique_ptr<jlcxx::TypeWrapper<SimTK::Xml::node_iterator>>(new jlcxx::TypeWrapper<SimTK::Xml::node_iterator>(module, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>();

    DEBUG_MSG("void SimTK::Xml::node_iterator::node_iterator(SimTK::Xml::NodeType) (" __HERE__ ")");
    // defined in simbody/SimTKcommon/internal/Xml.h:917:10
    t.constructor<SimTK::Xml::NodeType>();
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("void SimTK::Xml::node_iterator::node_iterator(SimTK::Xml::Node &, SimTK::Xml::NodeType) (" __HERE__ ")");
    // defined in simbody/SimTKcommon/internal/Xml.h:919:10
    t.constructor<SimTK::Xml::Node &, SimTK::Xml::NodeType>();
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("void SimTK::Xml::node_iterator::node_iterator(const SimTK::Xml::node_iterator &) (" __HERE__ ")");
    // defined in simbody/SimTKcommon/internal/Xml.h:924:1
    t.constructor<const SimTK::Xml::node_iterator &>();
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("SimTK::Xml::node_iterator & SimTK::Xml::node_iterator::operator=(const SimTK::Xml::node_iterator &) (" __HERE__ ")");
    // defined in simbody/SimTKcommon/internal/Xml.h:930:16
    t.method("set!", static_cast<SimTK::Xml::node_iterator & (SimTK::Xml::node_iterator::*)(const SimTK::Xml::node_iterator &) >(&SimTK::Xml::node_iterator::operator=));
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("SimTK::Xml::node_iterator & SimTK::Xml::node_iterator::operator++() (" __HERE__ ")");
    // defined in simbody/SimTKcommon/internal/Xml.h:933:16
    t.method("inc!", static_cast<SimTK::Xml::node_iterator & (SimTK::Xml::node_iterator::*)() >(&SimTK::Xml::node_iterator::operator++));
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("SimTK::Xml::node_iterator SimTK::Xml::node_iterator::operator++(int) (" __HERE__ ")");
    // defined in simbody/SimTKcommon/internal/Xml.h:934:15
    t.method("inc!", static_cast<SimTK::Xml::node_iterator (SimTK::Xml::node_iterator::*)(int) >(&SimTK::Xml::node_iterator::operator++));
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("SimTK::Xml::node_iterator & SimTK::Xml::node_iterator::operator--() (" __HERE__ ")");
    // defined in simbody/SimTKcommon/internal/Xml.h:935:16
    t.method("dec!", static_cast<SimTK::Xml::node_iterator & (SimTK::Xml::node_iterator::*)() >(&SimTK::Xml::node_iterator::operator--));
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("SimTK::Xml::node_iterator SimTK::Xml::node_iterator::operator--(int) (" __HERE__ ")");
    // defined in simbody/SimTKcommon/internal/Xml.h:936:15
    t.method("dec!", static_cast<SimTK::Xml::node_iterator (SimTK::Xml::node_iterator::*)(int) >(&SimTK::Xml::node_iterator::operator--));
    CLEAR_DEBUG_MSG();

    module_.set_override_module(jl_base_module);
    DEBUG_MSG("SimTK::Xml::Node & SimTK::Xml::node_iterator::operator*() (" __HERE__ ")");
    // defined in simbody/SimTKcommon/internal/Xml.h:937:7
    t.method("getindex", static_cast<SimTK::Xml::Node & (SimTK::Xml::node_iterator::*)() >(&SimTK::Xml::node_iterator::operator*));
    CLEAR_DEBUG_MSG();
    module_.unset_override_module();

    DEBUG_MSG("SimTK::Xml::Node * SimTK::Xml::node_iterator::operator->() (" __HERE__ ")");
    // defined in simbody/SimTKcommon/internal/Xml.h:938:7
    t.method("arrow", static_cast<SimTK::Xml::Node * (SimTK::Xml::node_iterator::*)() >(&SimTK::Xml::node_iterator::operator->));
    CLEAR_DEBUG_MSG();

    module_.set_override_module(jl_base_module);
    DEBUG_MSG("SimTK::Xml::Node & SimTK::Xml::node_iterator::operator*() (" __HERE__ ")");
    // defined in simbody/SimTKcommon/internal/Xml.h:941:7
    t.method("getindex", static_cast<SimTK::Xml::Node & (SimTK::Xml::node_iterator::*)()  const>(&SimTK::Xml::node_iterator::operator*));
    CLEAR_DEBUG_MSG();
    module_.unset_override_module();

    DEBUG_MSG("SimTK::Xml::Node * SimTK::Xml::node_iterator::operator->() (" __HERE__ ")");
    // defined in simbody/SimTKcommon/internal/Xml.h:942:7
    t.method("arrow", static_cast<SimTK::Xml::Node * (SimTK::Xml::node_iterator::*)()  const>(&SimTK::Xml::node_iterator::operator->));
    CLEAR_DEBUG_MSG();

    module_.set_override_module(jl_base_module);
    DEBUG_MSG("bool SimTK::Xml::node_iterator::operator==(const SimTK::Xml::node_iterator &) (" __HERE__ ")");
    // defined in simbody/SimTKcommon/internal/Xml.h:943:6
    t.method("==", static_cast<bool (SimTK::Xml::node_iterator::*)(const SimTK::Xml::node_iterator &)  const>(&SimTK::Xml::node_iterator::operator==));
    CLEAR_DEBUG_MSG();
    module_.unset_override_module();
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<SimTK::Xml::node_iterator>> type_;
};
std::shared_ptr<Wrapper> newJlSimTK_Xml_node_iterator(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlSimTK_Xml_node_iterator(module));
}

}
