// this file was auto-generated by wrapit v1.3.3
#include "jlsimbody/common.h"

#include "jlSimTKcommon/Xml.h"

namespace jlcxx {
  template<> struct IsMirroredType<SimTK::Xml::Comment> : std::false_type { };
  template<> struct DefaultConstructible<SimTK::Xml::Comment> : std::false_type { };
  template<> struct SuperType<SimTK::Xml::Comment> { typedef SimTK::Xml::Node type; };
}

namespace jlsimbody {

// Class generating the wrapper for type SimTK::Xml::Comment
struct JlSimTK_Xml_Comment: public Wrapper {

  JlSimTK_Xml_Comment(jlcxx::Module& module): Wrapper(module){
    DEBUG_MSG("type SimTK::Xml::Comment (" __HERE__ ")");
    // defined in simbody/SimTKcommon/internal/Xml.h:1537:32
    auto t = module.add_type<SimTK::Xml::Comment>("XmlComment",
      jlcxx::julia_base_type<SimTK::Xml::Node>());
    CLEAR_DEBUG_MSG();

    type_ = std::unique_ptr<jlcxx::TypeWrapper<SimTK::Xml::Comment>>(new jlcxx::TypeWrapper<SimTK::Xml::Comment>(module, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>();

    DEBUG_MSG("void SimTK::Xml::Comment::Comment(const SimTK::String &) (" __HERE__ ")");
    // defined in simbody/SimTKcommon/internal/Xml.h:1547:10
    t.constructor<const SimTK::String &>();
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("SimTK::Xml::Comment SimTK::Xml::Comment::clone() (" __HERE__ ")");
    // defined in simbody/SimTKcommon/internal/Xml.h:1552:9
    t.method("clone", static_cast<SimTK::Xml::Comment (SimTK::Xml::Comment::*)()  const>(&SimTK::Xml::Comment::clone));
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("bool SimTK::Xml::Comment::isA(const SimTK::Xml::Node &) (" __HERE__ ")");
    // defined in simbody/SimTKcommon/internal/Xml.h:1559:13
    module_.method("Xml!Comment!isA", static_cast<bool (*)(const SimTK::Xml::Node &) >(&SimTK::Xml::Comment::isA));
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("const SimTK::Xml::Comment & SimTK::Xml::Comment::getAs(const SimTK::Xml::Node &) (" __HERE__ ")");
    // defined in simbody/SimTKcommon/internal/Xml.h:1562:23
    module_.method("Xml!Comment!getAs", static_cast<const SimTK::Xml::Comment & (*)(const SimTK::Xml::Node &) >(&SimTK::Xml::Comment::getAs));
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("SimTK::Xml::Comment & SimTK::Xml::Comment::getAs(SimTK::Xml::Node &) (" __HERE__ ")");
    // defined in simbody/SimTKcommon/internal/Xml.h:1565:17
    module_.method("Xml!Comment!updAs", static_cast<SimTK::Xml::Comment & (*)(SimTK::Xml::Node &) >(&SimTK::Xml::Comment::getAs));
    CLEAR_DEBUG_MSG();
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<SimTK::Xml::Comment>> type_;
};
std::shared_ptr<Wrapper> newJlSimTK_Xml_Comment(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlSimTK_Xml_Comment(module));
}

}
