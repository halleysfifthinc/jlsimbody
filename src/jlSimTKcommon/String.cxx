// this file was auto-generated by wrapit v0.1.0-61-g71d8603-dirty
#include <type_traits>
#include "jlcxx/jlcxx.hpp"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

#include "jlSimTKcommon/Array.h"
#include "jlSimTKcommon/String.h"

#ifdef VERBOSE_IMPORT
#  define DEBUG_MSG(a) std::cerr << a << "\n"
#else
#  define DEBUG_MSG(a)
#endif
#define __HERE__  __FILE__ ":" QUOTE2(__LINE__)
#define QUOTE(arg) #arg
#define QUOTE2(arg) QUOTE(arg)

namespace jlsimbody {

void define_SimTKcommon_String(jlcxx::Module& types, const ArrayWrapper& array_wrapper){

  DEBUG_MSG("Adding wrapper for type SimTK::String (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/String.h:62:7
  auto t2 = types.add_type<SimTK::String>("SimTK!String", jlcxx::julia_base_type<std::string>());
  t2.template constructor<>(/*finalize=*/true);

  /**********************************************************************/
  /* Wrappers for the methods of class SimTK::String
   */

  DEBUG_MSG("Adding wrapper for void SimTK::String::String(const char *) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/String.h:71:1
  t2.constructor<const char *>(/*finalize=*/true);


  DEBUG_MSG("Adding wrapper for void SimTK::String::String(char) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/String.h:74:10
  t2.constructor<char>(/*finalize=*/true);


  DEBUG_MSG("Adding wrapper for void SimTK::String::String(const std::string &) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/String.h:77:1
  t2.constructor<const std::string &>(/*finalize=*/true);


  DEBUG_MSG("Adding wrapper for void SimTK::String::String(const SimTK::String &, int, int) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/String.h:81:1
  t2.constructor<const SimTK::String &, int, int>(/*finalize=*/true);

  types.set_override_module(jl_base_module);
  DEBUG_MSG("Adding setindex! method  to wrap char & SimTK::String::operator[](int) (" __HERE__ ")");
// defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/String.h:88:7
  t2.method("setindex!",
    [](SimTK::String& a, int i, char const & val){
    return a[i] = val;
  });

  DEBUG_MSG("Adding getindex method to wrap char & SimTK::String::operator[](int) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/String.h:88:7
  t2.method("getindex",
    [](SimTK::String& a, int i){
    return a[i];
  });



  DEBUG_MSG("Adding setindex! method  to wrap char & SimTK::String::operator[](std::basic_string<char>::size_type) (" __HERE__ ")");
// defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/String.h:100:7
  t2.method("setindex!",
    [](SimTK::String& a, std::basic_string<char>::size_type i, char const & val){
    return a[i] = val;
  });

  DEBUG_MSG("Adding getindex method to wrap char & SimTK::String::operator[](std::basic_string<char>::size_type) (" __HERE__ ")");
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/String.h:100:7
  t2.method("getindex",
    [](SimTK::String& a, std::basic_string<char>::size_type i){
    return a[i];
  });
  types.unset_override_module();

  DEBUG_MSG("Adding wrapper for int SimTK::String::size() (" __HERE__ ")");
  // signature to use in the veto list: int SimTK::String::size()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/String.h:106:5
  t2.method("size", static_cast<int (SimTK::String::*)()  const>(&SimTK::String::size));

  DEBUG_MSG("Adding wrapper for int SimTK::String::length() (" __HERE__ ")");
  // signature to use in the veto list: int SimTK::String::length()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/String.h:110:5
  t2.method("length", static_cast<int (SimTK::String::*)()  const>(&SimTK::String::length));

  DEBUG_MSG("Adding wrapper for SimTK::String & SimTK::String::toUpper() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::String & SimTK::String::toUpper()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/String.h:276:34
  t2.method("toUpper", static_cast<SimTK::String & (SimTK::String::*)() >(&SimTK::String::toUpper));

  DEBUG_MSG("Adding wrapper for SimTK::String & SimTK::String::toLower() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::String & SimTK::String::toLower()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/String.h:279:34
  t2.method("toLower", static_cast<SimTK::String & (SimTK::String::*)() >(&SimTK::String::toLower));

  DEBUG_MSG("Adding wrapper for SimTK::String & SimTK::String::trimWhiteSpace() (" __HERE__ ")");
  // signature to use in the veto list: SimTK::String & SimTK::String::trimWhiteSpace()
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/String.h:283:34
  t2.method("trimWhiteSpace", static_cast<SimTK::String & (SimTK::String::*)() >(&SimTK::String::trimWhiteSpace));

  DEBUG_MSG("Adding wrapper for SimTK::String & SimTK::String::replaceAllChar(char, char) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::String & SimTK::String::replaceAllChar(char, char)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/String.h:286:34
  t2.method("replaceAllChar", static_cast<SimTK::String & (SimTK::String::*)(char, char) >(&SimTK::String::replaceAllChar));

  DEBUG_MSG("Adding wrapper for SimTK::String SimTK::String::toUpper(const std::string &) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::String SimTK::String::toUpper(const std::string &)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/String.h:296:15
  t2.method("SimTK!String!toUpper", static_cast<SimTK::String (*)(const std::string &) >(&SimTK::String::toUpper));

  DEBUG_MSG("Adding wrapper for SimTK::String SimTK::String::toLower(const std::string &) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::String SimTK::String::toLower(const std::string &)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/String.h:300:15
  t2.method("SimTK!String!toLower", static_cast<SimTK::String (*)(const std::string &) >(&SimTK::String::toLower));

  DEBUG_MSG("Adding wrapper for SimTK::String SimTK::String::trimWhiteSpace(const std::string &) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::String SimTK::String::trimWhiteSpace(const std::string &)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/String.h:306:40
  t2.method("SimTK!String!trimWhiteSpace", static_cast<SimTK::String (*)(const std::string &) >(&SimTK::String::trimWhiteSpace));

  DEBUG_MSG("Adding wrapper for SimTK::String & SimTK::String::replaceAllChar(const std::string &, char, char) (" __HERE__ ")");
  // signature to use in the veto list: SimTK::String & SimTK::String::replaceAllChar(const std::string &, char, char)
  // defined in /opt/opensim-core-fullrelease/sdk/include/simbody/SimTKcommon/internal/String.h:309:9
  t2.method("replaceAllChar", static_cast<SimTK::String & (SimTK::String::*)(const std::string &, char, char) >(&SimTK::String::replaceAllChar));

  /* End of SimTK::String class method wrappers
   **********************************************************************/

  array_wrapper.template apply<SimTK::String>();

  DEBUG_MSG("End of wrapper definitions");

}
}
