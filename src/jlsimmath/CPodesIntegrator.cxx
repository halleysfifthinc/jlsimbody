// this file was auto-generated by wrapit v1.3.3
#include "jlsimbody/common.h"

#include "jlsimmath/Timestepper_and_Integrators.h"

namespace jlcxx {
  template<> struct IsMirroredType<SimTK::CPodesIntegrator> : std::false_type { };
  template<> struct DefaultConstructible<SimTK::CPodesIntegrator> : std::false_type { };
  template<> struct SuperType<SimTK::CPodesIntegrator> { typedef SimTK::Integrator type; };
}

namespace jlsimbody {

// Class generating the wrapper for type SimTK::CPodesIntegrator
struct JLSIMBODY_NO_EXPORT JlSimTK_CPodesIntegrator : public Wrapper {

  JlSimTK_CPodesIntegrator(jlcxx::Module& module): Wrapper(module){
    DEBUG_MSG("type SimTK::CPodesIntegrator (" __HERE__ ")");
    // defined in simbody/simmath/CPodesIntegrator.h:50:28
    jlcxx::TypeWrapper<SimTK::CPodesIntegrator>  t = module.add_type<SimTK::CPodesIntegrator>("CPodesIntegrator",
      jlcxx::julia_base_type<SimTK::Integrator>());
    CLEAR_DEBUG_MSG();

    type_ = std::unique_ptr<jlcxx::TypeWrapper<SimTK::CPodesIntegrator>>(new jlcxx::TypeWrapper<SimTK::CPodesIntegrator>(module, t));
  }

  void add_methods() const{
    auto& t = *type_;


    DEBUG_MSG("void SimTK::CPodesIntegrator::CPodesIntegrator(const SimTK::System &, SimTK::CPodes::LinearMultistepMethod) (" __HERE__ ")");
    // defined in simbody/simmath/CPodesIntegrator.h:55:14
    t.constructor<const SimTK::System &>();
    t.constructor<const SimTK::System &, SimTK::CPodes::LinearMultistepMethod>();
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("void SimTK::CPodesIntegrator::CPodesIntegrator(const SimTK::System &, SimTK::CPodes::LinearMultistepMethod, SimTK::CPodes::NonlinearSystemIterationType) (" __HERE__ ")");
    // defined in simbody/simmath/CPodesIntegrator.h:60:5
    t.constructor<const SimTK::System &, SimTK::CPodes::LinearMultistepMethod, SimTK::CPodes::NonlinearSystemIterationType>();
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("void SimTK::CPodesIntegrator::setUseCPodesProjection() (" __HERE__ ")");
    // defined in simbody/simmath/CPodesIntegrator.h:69:10
    t.method("setUseCPodesProjection", static_cast<void (SimTK::CPodesIntegrator::*)() >(&SimTK::CPodesIntegrator::setUseCPodesProjection));
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("void SimTK::CPodesIntegrator::setOrderLimit(int) (" __HERE__ ")");
    // defined in simbody/simmath/CPodesIntegrator.h:75:10
    t.method("setOrderLimit", static_cast<void (SimTK::CPodesIntegrator::*)(int) >(&SimTK::CPodesIntegrator::setOrderLimit));
    CLEAR_DEBUG_MSG();
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<SimTK::CPodesIntegrator>> type_;
};
std::shared_ptr<Wrapper> newJlSimTK_CPodesIntegrator(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlSimTK_CPodesIntegrator(module));
}

}
