// this file was auto-generated by wrapit v1.3.3
#include "jlsimbody/common.h"

#include "jlsimmath/Timestepper_and_Integrators.h"

namespace jlcxx {
  template<> struct IsMirroredType<SimTK::Integrator> : std::false_type { };
  template<> struct DefaultConstructible<SimTK::Integrator> : std::false_type { };
}

namespace jlsimbody {

// Class generating the wrapper for type SimTK::Integrator
struct JLSIMBODY_NO_EXPORT JlSimTK_Integrator : public Wrapper {

  JlSimTK_Integrator(jlcxx::Module& module): Wrapper(module){
    DEBUG_MSG("type SimTK::Integrator (" __HERE__ ")");
    // defined in simbody/simmath/Integrator.h:116:28
    jlcxx::TypeWrapper<SimTK::Integrator>  t = module.add_type<SimTK::Integrator>("Integrator");
    CLEAR_DEBUG_MSG();

    type_ = std::unique_ptr<jlcxx::TypeWrapper<SimTK::Integrator>>(new jlcxx::TypeWrapper<SimTK::Integrator>(module, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>();

    DEBUG_MSG("const char * SimTK::Integrator::getMethodName() (" __HERE__ ")");
    // defined in simbody/simmath/Integrator.h:130:17
    t.method("getMethodName", static_cast<const char * (SimTK::Integrator::*)()  const>(&SimTK::Integrator::getMethodName));
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("int SimTK::Integrator::getMethodMinOrder() (" __HERE__ ")");
    // defined in simbody/simmath/Integrator.h:132:17
    t.method("getMethodMinOrder", static_cast<int (SimTK::Integrator::*)()  const>(&SimTK::Integrator::getMethodMinOrder));
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("int SimTK::Integrator::getMethodMaxOrder() (" __HERE__ ")");
    // defined in simbody/simmath/Integrator.h:134:17
    t.method("getMethodMaxOrder", static_cast<int (SimTK::Integrator::*)()  const>(&SimTK::Integrator::getMethodMaxOrder));
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("bool SimTK::Integrator::methodHasErrorControl() (" __HERE__ ")");
    // defined in simbody/simmath/Integrator.h:138:17
    t.method("methodHasErrorControl", static_cast<bool (SimTK::Integrator::*)()  const>(&SimTK::Integrator::methodHasErrorControl));
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("void SimTK::Integrator::initialize(const SimTK::State &) (" __HERE__ ")");
    // defined in simbody/simmath/Integrator.h:143:10
    t.method("initialize", static_cast<void (SimTK::Integrator::*)(const SimTK::State &) >(&SimTK::Integrator::initialize));
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("void SimTK::Integrator::reinitialize(SimTK::Stage, bool) (" __HERE__ ")");
    // defined in simbody/simmath/Integrator.h:156:10
    t.method("reinitialize", static_cast<void (SimTK::Integrator::*)(SimTK::Stage, bool) >(&SimTK::Integrator::reinitialize));
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("const SimTK::State & SimTK::Integrator::getState() (" __HERE__ ")");
    // defined in simbody/simmath/Integrator.h:160:18
    t.method("getState", static_cast<const SimTK::State & (SimTK::Integrator::*)()  const>(&SimTK::Integrator::getState));
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("SimTK::Real SimTK::Integrator::getTime() (" __HERE__ ")");
    // defined in simbody/simmath/Integrator.h:162:18
    t.method("getTime", static_cast<SimTK::Real (SimTK::Integrator::*)()  const>(&SimTK::Integrator::getTime));
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("bool SimTK::Integrator::isStateInterpolated() (" __HERE__ ")");
    // defined in simbody/simmath/Integrator.h:166:10
    t.method("isStateInterpolated", static_cast<bool (SimTK::Integrator::*)()  const>(&SimTK::Integrator::isStateInterpolated));
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("const SimTK::State & SimTK::Integrator::getAdvancedState() (" __HERE__ ")");
    // defined in simbody/simmath/Integrator.h:171:18
    t.method("getAdvancedState", static_cast<const SimTK::State & (SimTK::Integrator::*)()  const>(&SimTK::Integrator::getAdvancedState));
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("SimTK::Real SimTK::Integrator::getAdvancedTime() (" __HERE__ ")");
    // defined in simbody/simmath/Integrator.h:173:18
    t.method("getAdvancedTime", static_cast<SimTK::Real (SimTK::Integrator::*)()  const>(&SimTK::Integrator::getAdvancedTime));
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("SimTK::State & SimTK::Integrator::updAdvancedState() (" __HERE__ ")");
    // defined in simbody/simmath/Integrator.h:176:12
    t.method("updAdvancedState", static_cast<SimTK::State & (SimTK::Integrator::*)() >(&SimTK::Integrator::updAdvancedState));
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("SimTK::Real SimTK::Integrator::getAccuracyInUse() (" __HERE__ ")");
    // defined in simbody/simmath/Integrator.h:180:10
    t.method("getAccuracyInUse", static_cast<SimTK::Real (SimTK::Integrator::*)()  const>(&SimTK::Integrator::getAccuracyInUse));
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("SimTK::Real SimTK::Integrator::getConstraintToleranceInUse() (" __HERE__ ")");
    // defined in simbody/simmath/Integrator.h:183:10
    t.method("getConstraintToleranceInUse", static_cast<SimTK::Real (SimTK::Integrator::*)()  const>(&SimTK::Integrator::getConstraintToleranceInUse));
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("SimTK::Integrator::SuccessfulStepStatus SimTK::Integrator::stepTo(SimTK::Real, SimTK::Real) (" __HERE__ ")");
    // defined in simbody/simmath/Integrator.h:226:26
    t.method("stepTo", static_cast<SimTK::Integrator::SuccessfulStepStatus (SimTK::Integrator::*)(SimTK::Real, SimTK::Real) >(&SimTK::Integrator::stepTo),
      jlcxx::arg("integrator"), jlcxx::arg("reportTime"), jlcxx::arg("scheduledEventTime")=SimTK::Infinity);
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("SimTK::Integrator::SuccessfulStepStatus SimTK::Integrator::stepBy(SimTK::Real, SimTK::Real) (" __HERE__ ")");
    // defined in simbody/simmath/Integrator.h:230:26
    t.method("stepBy", static_cast<SimTK::Integrator::SuccessfulStepStatus (SimTK::Integrator::*)(SimTK::Real, SimTK::Real) >(&SimTK::Integrator::stepBy),
      jlcxx::arg("integrator"), jlcxx::arg("interval"), jlcxx::arg("scheduledEventTime")=SimTK::Infinity);
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("SimTK::Vec2 SimTK::Integrator::getEventWindow() (" __HERE__ ")");
    // defined in simbody/simmath/Integrator.h:235:10
    t.method("getEventWindow", static_cast<SimTK::Vec2 (SimTK::Integrator::*)()  const>(&SimTK::Integrator::getEventWindow));
    CLEAR_DEBUG_MSG();

    #ifdef JLSIMBODY_USE_SIMTK_UNIQUEINDEX_TYPES
    DEBUG_MSG("const SimTK::Array_<SimTK::EventId> & SimTK::Integrator::getTriggeredEvents() (" __HERE__ ")");
    // defined in simbody/simmath/Integrator.h:238:28
    t.method("getTriggeredEvents", static_cast<const SimTK::Array_<SimTK::EventId> & (SimTK::Integrator::*)()  const>(&SimTK::Integrator::getTriggeredEvents));
    CLEAR_DEBUG_MSG();
    #else
    DEBUG_MSG("const SimTK::Array_<int> & SimTK::Integrator::getTriggeredEvents() (" __HERE__ ")");
    // defined in simbody/simmath/Integrator.h:238:28
    t.method("getTriggeredEvents", reinterpret_cast<const SimTK::Array_<int> & (SimTK::Integrator::*)()  const>(&SimTK::Integrator::getTriggeredEvents));
    CLEAR_DEBUG_MSG();
    #endif

    DEBUG_MSG("const SimTK::Array_<SimTK::Real> & SimTK::Integrator::getEstimatedEventTimes() (" __HERE__ ")");
    // defined in simbody/simmath/Integrator.h:241:25
    t.method("getEstimatedEventTimes", static_cast<const SimTK::Array_<SimTK::Real> & (SimTK::Integrator::*)()  const>(&SimTK::Integrator::getEstimatedEventTimes));
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("const SimTK::Array_<SimTK::Event::Trigger> & SimTK::Integrator::getEventTransitionsSeen() (" __HERE__ ")");
    // defined in simbody/simmath/Integrator.h:244:35
    t.method("getEventTransitionsSeen", reinterpret_cast<const SimTK::Array_<int> & (SimTK::Integrator::*)()  const>(&SimTK::Integrator::getEventTransitionsSeen));
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("bool SimTK::Integrator::isSimulationOver() (" __HERE__ ")");
    // defined in simbody/simmath/Integrator.h:263:10
    t.method("isSimulationOver", static_cast<bool (SimTK::Integrator::*)()  const>(&SimTK::Integrator::isSimulationOver));
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("SimTK::Integrator::TerminationReason SimTK::Integrator::getTerminationReason() (" __HERE__ ")");
    // defined in simbody/simmath/Integrator.h:267:23
    t.method("getTerminationReason", static_cast<SimTK::Integrator::TerminationReason (SimTK::Integrator::*)()  const>(&SimTK::Integrator::getTerminationReason));
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("void SimTK::Integrator::resetAllStatistics() (" __HERE__ ")");
    // defined in simbody/simmath/Integrator.h:273:10
    t.method("resetAllStatistics", static_cast<void (SimTK::Integrator::*)() >(&SimTK::Integrator::resetAllStatistics));
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("SimTK::Real SimTK::Integrator::getActualInitialStepSizeTaken() (" __HERE__ ")");
    // defined in simbody/simmath/Integrator.h:276:10
    t.method("getActualInitialStepSizeTaken", static_cast<SimTK::Real (SimTK::Integrator::*)()  const>(&SimTK::Integrator::getActualInitialStepSizeTaken));
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("SimTK::Real SimTK::Integrator::getPreviousStepSizeTaken() (" __HERE__ ")");
    // defined in simbody/simmath/Integrator.h:279:10
    t.method("getPreviousStepSizeTaken", static_cast<SimTK::Real (SimTK::Integrator::*)()  const>(&SimTK::Integrator::getPreviousStepSizeTaken));
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("SimTK::Real SimTK::Integrator::getPredictedNextStepSize() (" __HERE__ ")");
    // defined in simbody/simmath/Integrator.h:282:10
    t.method("getPredictedNextStepSize", static_cast<SimTK::Real (SimTK::Integrator::*)()  const>(&SimTK::Integrator::getPredictedNextStepSize));
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("int SimTK::Integrator::getNumStepsAttempted() (" __HERE__ ")");
    // defined in simbody/simmath/Integrator.h:286:9
    t.method("getNumStepsAttempted", static_cast<int (SimTK::Integrator::*)()  const>(&SimTK::Integrator::getNumStepsAttempted));
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("int SimTK::Integrator::getNumStepsTaken() (" __HERE__ ")");
    // defined in simbody/simmath/Integrator.h:288:9
    t.method("getNumStepsTaken", static_cast<int (SimTK::Integrator::*)()  const>(&SimTK::Integrator::getNumStepsTaken));
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("int SimTK::Integrator::getNumRealizations() (" __HERE__ ")");
    // defined in simbody/simmath/Integrator.h:290:9
    t.method("getNumRealizations", static_cast<int (SimTK::Integrator::*)()  const>(&SimTK::Integrator::getNumRealizations));
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("int SimTK::Integrator::getNumQProjections() (" __HERE__ ")");
    // defined in simbody/simmath/Integrator.h:293:9
    t.method("getNumQProjections", static_cast<int (SimTK::Integrator::*)()  const>(&SimTK::Integrator::getNumQProjections));
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("int SimTK::Integrator::getNumUProjections() (" __HERE__ ")");
    // defined in simbody/simmath/Integrator.h:296:9
    t.method("getNumUProjections", static_cast<int (SimTK::Integrator::*)()  const>(&SimTK::Integrator::getNumUProjections));
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("int SimTK::Integrator::getNumProjections() (" __HERE__ ")");
    // defined in simbody/simmath/Integrator.h:299:9
    t.method("getNumProjections", static_cast<int (SimTK::Integrator::*)()  const>(&SimTK::Integrator::getNumProjections));
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("int SimTK::Integrator::getNumErrorTestFailures() (" __HERE__ ")");
    // defined in simbody/simmath/Integrator.h:302:9
    t.method("getNumErrorTestFailures", static_cast<int (SimTK::Integrator::*)()  const>(&SimTK::Integrator::getNumErrorTestFailures));
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("int SimTK::Integrator::getNumConvergenceTestFailures() (" __HERE__ ")");
    // defined in simbody/simmath/Integrator.h:307:9
    t.method("getNumConvergenceTestFailures", static_cast<int (SimTK::Integrator::*)()  const>(&SimTK::Integrator::getNumConvergenceTestFailures));
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("int SimTK::Integrator::getNumRealizationFailures() (" __HERE__ ")");
    // defined in simbody/simmath/Integrator.h:310:9
    t.method("getNumRealizationFailures", static_cast<int (SimTK::Integrator::*)()  const>(&SimTK::Integrator::getNumRealizationFailures));
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("int SimTK::Integrator::getNumQProjectionFailures() (" __HERE__ ")");
    // defined in simbody/simmath/Integrator.h:314:9
    t.method("getNumQProjectionFailures", static_cast<int (SimTK::Integrator::*)()  const>(&SimTK::Integrator::getNumQProjectionFailures));
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("int SimTK::Integrator::getNumUProjectionFailures() (" __HERE__ ")");
    // defined in simbody/simmath/Integrator.h:318:9
    t.method("getNumUProjectionFailures", static_cast<int (SimTK::Integrator::*)()  const>(&SimTK::Integrator::getNumUProjectionFailures));
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("int SimTK::Integrator::getNumProjectionFailures() (" __HERE__ ")");
    // defined in simbody/simmath/Integrator.h:322:9
    t.method("getNumProjectionFailures", static_cast<int (SimTK::Integrator::*)()  const>(&SimTK::Integrator::getNumProjectionFailures));
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("int SimTK::Integrator::getNumConvergentIterations() (" __HERE__ ")");
    // defined in simbody/simmath/Integrator.h:325:9
    t.method("getNumConvergentIterations", static_cast<int (SimTK::Integrator::*)()  const>(&SimTK::Integrator::getNumConvergentIterations));
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("int SimTK::Integrator::getNumDivergentIterations() (" __HERE__ ")");
    // defined in simbody/simmath/Integrator.h:328:9
    t.method("getNumDivergentIterations", static_cast<int (SimTK::Integrator::*)()  const>(&SimTK::Integrator::getNumDivergentIterations));
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("int SimTK::Integrator::getNumIterations() (" __HERE__ ")");
    // defined in simbody/simmath/Integrator.h:332:9
    t.method("getNumIterations", static_cast<int (SimTK::Integrator::*)()  const>(&SimTK::Integrator::getNumIterations));
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("void SimTK::Integrator::setFinalTime(SimTK::Real) (" __HERE__ ")");
    // defined in simbody/simmath/Integrator.h:336:10
    t.method("setFinalTime", static_cast<void (SimTK::Integrator::*)(SimTK::Real) >(&SimTK::Integrator::setFinalTime));
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("void SimTK::Integrator::setInitialStepSize(SimTK::Real) (" __HERE__ ")");
    // defined in simbody/simmath/Integrator.h:339:10
    t.method("setInitialStepSize", static_cast<void (SimTK::Integrator::*)(SimTK::Real) >(&SimTK::Integrator::setInitialStepSize));
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("void SimTK::Integrator::setMinimumStepSize(SimTK::Real) (" __HERE__ ")");
    // defined in simbody/simmath/Integrator.h:342:10
    t.method("setMinimumStepSize", static_cast<void (SimTK::Integrator::*)(SimTK::Real) >(&SimTK::Integrator::setMinimumStepSize));
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("void SimTK::Integrator::setMaximumStepSize(SimTK::Real) (" __HERE__ ")");
    // defined in simbody/simmath/Integrator.h:345:10
    t.method("setMaximumStepSize", static_cast<void (SimTK::Integrator::*)(SimTK::Real) >(&SimTK::Integrator::setMaximumStepSize));
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("void SimTK::Integrator::setFixedStepSize(SimTK::Real) (" __HERE__ ")");
    // defined in simbody/simmath/Integrator.h:352:10
    t.method("setFixedStepSize", static_cast<void (SimTK::Integrator::*)(SimTK::Real) >(&SimTK::Integrator::setFixedStepSize));
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("void SimTK::Integrator::setAccuracy(SimTK::Real) (" __HERE__ ")");
    // defined in simbody/simmath/Integrator.h:357:10
    t.method("setAccuracy", static_cast<void (SimTK::Integrator::*)(SimTK::Real) >(&SimTK::Integrator::setAccuracy));
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("void SimTK::Integrator::setConstraintTolerance(SimTK::Real) (" __HERE__ ")");
    // defined in simbody/simmath/Integrator.h:359:10
    t.method("setConstraintTolerance", static_cast<void (SimTK::Integrator::*)(SimTK::Real) >(&SimTK::Integrator::setConstraintTolerance));
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("void SimTK::Integrator::setUseInfinityNorm(bool) (" __HERE__ ")");
    // defined in simbody/simmath/Integrator.h:364:10
    t.method("setUseInfinityNorm", static_cast<void (SimTK::Integrator::*)(bool) >(&SimTK::Integrator::setUseInfinityNorm));
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("bool SimTK::Integrator::isInfinityNormInUse() (" __HERE__ ")");
    // defined in simbody/simmath/Integrator.h:366:10
    t.method("isInfinityNormInUse", static_cast<bool (SimTK::Integrator::*)()  const>(&SimTK::Integrator::isInfinityNormInUse));
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("void SimTK::Integrator::setInternalStepLimit(int) (" __HERE__ ")");
    // defined in simbody/simmath/Integrator.h:373:10
    t.method("setInternalStepLimit", static_cast<void (SimTK::Integrator::*)(int) >(&SimTK::Integrator::setInternalStepLimit));
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("void SimTK::Integrator::setReturnEveryInternalStep(bool) (" __HERE__ ")");
    // defined in simbody/simmath/Integrator.h:378:10
    t.method("setReturnEveryInternalStep", static_cast<void (SimTK::Integrator::*)(bool) >(&SimTK::Integrator::setReturnEveryInternalStep));
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("void SimTK::Integrator::setProjectEveryStep(bool) (" __HERE__ ")");
    // defined in simbody/simmath/Integrator.h:383:10
    t.method("setProjectEveryStep", static_cast<void (SimTK::Integrator::*)(bool) >(&SimTK::Integrator::setProjectEveryStep));
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("void SimTK::Integrator::setAllowInterpolation(bool) (" __HERE__ ")");
    // defined in simbody/simmath/Integrator.h:394:10
    t.method("setAllowInterpolation", static_cast<void (SimTK::Integrator::*)(bool) >(&SimTK::Integrator::setAllowInterpolation));
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("void SimTK::Integrator::setProjectInterpolatedStates(bool) (" __HERE__ ")");
    // defined in simbody/simmath/Integrator.h:398:10
    t.method("setProjectInterpolatedStates", static_cast<void (SimTK::Integrator::*)(bool) >(&SimTK::Integrator::setProjectInterpolatedStates));
    CLEAR_DEBUG_MSG();

    DEBUG_MSG("void SimTK::Integrator::setForceFullNewton(bool) (" __HERE__ ")");
    // defined in simbody/simmath/Integrator.h:402:10
    t.method("setForceFullNewton", static_cast<void (SimTK::Integrator::*)(bool) >(&SimTK::Integrator::setForceFullNewton));
    CLEAR_DEBUG_MSG();
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<SimTK::Integrator>> type_;
};
std::shared_ptr<Wrapper> newJlSimTK_Integrator(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlSimTK_Integrator(module));
}

}
