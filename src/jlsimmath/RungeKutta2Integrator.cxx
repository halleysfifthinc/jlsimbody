// this file was auto-generated by wrapit v1.3.3
#include "jlsimbody/common.h"

#include "jlsimmath/Timestepper_and_Integrators.h"

namespace jlcxx {
  template<> struct IsMirroredType<SimTK::RungeKutta2Integrator> : std::false_type { };
  template<> struct DefaultConstructible<SimTK::RungeKutta2Integrator> : std::false_type { };
  template<> struct SuperType<SimTK::RungeKutta2Integrator> { typedef SimTK::Integrator type; };
}

namespace jlsimbody {

// Class generating the wrapper for type SimTK::RungeKutta2Integrator
struct JLSIMBODY_NO_EXPORT JlSimTK_RungeKutta2Integrator : public Wrapper {

  JlSimTK_RungeKutta2Integrator(jlcxx::Module& module): Wrapper(module){
    DEBUG_MSG("type SimTK::RungeKutta2Integrator (" __HERE__ ")");
    // defined in simbody/simmath/RungeKutta2Integrator.h:40:28
    jlcxx::TypeWrapper<SimTK::RungeKutta2Integrator>  t = module.add_type<SimTK::RungeKutta2Integrator>("RungeKutta2Integrator",
      jlcxx::julia_base_type<SimTK::Integrator>());
    CLEAR_DEBUG_MSG();

    type_ = std::unique_ptr<jlcxx::TypeWrapper<SimTK::RungeKutta2Integrator>>(new jlcxx::TypeWrapper<SimTK::RungeKutta2Integrator>(module, t));
  }

  void add_methods() const{
    auto& t = *type_;


    DEBUG_MSG("void SimTK::RungeKutta2Integrator::RungeKutta2Integrator(const SimTK::System &) (" __HERE__ ")");
    // defined in simbody/simmath/RungeKutta2Integrator.h:42:14
    t.constructor<const SimTK::System &>();
    CLEAR_DEBUG_MSG();
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<SimTK::RungeKutta2Integrator>> type_;
};
std::shared_ptr<Wrapper> newJlSimTK_RungeKutta2Integrator(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlSimTK_RungeKutta2Integrator(module));
}

}
